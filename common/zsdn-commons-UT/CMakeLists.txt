cmake_minimum_required(VERSION 3.2)

# Specify project
set(PROJECT_NAME zsdn-commons_UT)
set(PARENT_PROJECT_NAME zsdn-commons)
project(${PROJECT_NAME})

include(${CMAKE_CURRENT_SOURCE_DIR}/../../util/zsdn-dir_cmake.txt)


# Module header
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -D_DEBUG")


include_directories("${ZSDN_DIR}/ZMF/dependencies/include")
include_directories("${ZSDN_DIR}/ZMF/include")
include_directories("${ZSDN_DIR}/dependencies/include")
include_directories(../${PARENT_PROJECT_NAME})

link_directories("${ZSDN_DIR}/ZMF/dependencies/lib")
link_directories("${ZSDN_DIR}/ZMF/lib")
link_directories("${ZSDN_DIR}/dependencies/lib")


    FIND_PATH(CPPUNIT_INCLUDE_DIRS cppunit/TestCase.h
                                   /usr/local/include
                                   /usr/includeD
    )
    FIND_LIBRARY(CPPUNIT_LIBRARIES cppunit
    ${CPPUNIT_INCLUDE_DIRS}/../lib
                               /usr/local/lib
                               /usr/lib)

    IF(CPPUNIT_INCLUDE_DIRS)
    IF(CPPUNIT_LIBRARIES)
    SET(CPPUNIT_FOUND "YES")
    SET(CPPUNIT_LIBRARIES ${CPPUNIT_LIBRARIES} ${CMAKE_DL_LIBS})
    ENDIF(CPPUNIT_LIBRARIES)
    ENDIF(CPPUNIT_INCLUDE_DIRS)



# get every dependency from autogenerated dependencies
FILE(GLOB AUTOGENERATED_DEPENDENCIES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "../${PARENT_PROJECT_NAME}/zsdn/proto/*.*" )
FILE(GLOB AUTOGENERATED_DEPENDENCIES_TOPICS RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "../${PARENT_PROJECT_NAME}/zsdn/topics/*.*" )


set(ADDITIONAL_DEPENDENCIES ${AUTOGENERATED_DEPENDENCIES})


# Set source files for this project
set(SOURCE_FILES main.cpp)

# Include directories and files used to test
set(TEST_FILES
../zsdn-commons/NetUtils.cpp
../zsdn-commons/NetUtils.h
../zsdn-commons/RequestUtils.h
../zsdn-commons/RequestUtils.cpp
../zsdn-commons/NetworkGraph.cpp
../zsdn-commons/NetworkGraph.h
../zsdn-commons/ModuleTypeIDs.hpp
../zsdn-commons/LociExtensions.h
../zsdn-commons/MemUtils.h
    )

add_executable(zsdn-commons_UT ${SOURCE_FILES} ${TEST_FILES} ${ADDITIONAL_DEPENDENCIES} ${ADDITIONAL_DEPENDENCIES_TOPICS} zsdnCommonsTests.cpp zsdnCommonsTests.h )

target_link_libraries(${PROJECT_NAME} cppunit zmf
	protobuf zmq zmqpp PocoFoundation PocoNet PocoUtil loci tins)

