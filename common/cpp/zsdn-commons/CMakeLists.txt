cmake_minimum_required(VERSION 3.2)

# Specify project
set(PROJECT_NAME zsdn-commons)
project(${PROJECT_NAME})

option(NoTests "NoTests" ON)
option(Verbose "Verbose" OFF)

include(${CMAKE_CURRENT_SOURCE_DIR}/../../../util/zsdn-dir_cmake.txt)

# Build to lib folder
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${ZSDN_DIR}/dependencies/lib)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -O3")
if(Verbose)
  message("# Verbose enabled")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -v")
endif()

include_directories("${ZSDN_DIR}/ZMF/dependencies/include")
include_directories("${ZSDN_DIR}/ZMF/include")
include_directories("${ZSDN_DIR}/dependencies/include")

link_directories("${ZSDN_DIR}/ZMF/dependencies/lib")
link_directories("${ZSDN_DIR}/ZMF/lib")
link_directories("${ZSDN_DIR}/dependencies/lib")

# get every dependency from autogenerated dependencies
FILE(GLOB AUTOGENERATED_DEPENDENCIES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "autogenerated_dependencies/*.*" )

set(ADDITIONAL_DEPENDENCIES ${AUTOGENERATED_DEPENDENCIES})

# get every dependency from autogenerated dependencies
FILE(GLOB AUTOGENERATED_DEPENDENCIES_TOPICS RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "zsdn/topics/*.*" )
FILE(GLOB AUTOGENERATED_DEPENDENCIES_PROTO RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "zsdn/proto/*.*" )

add_library(zsdn-commons SHARED
    NetUtils.cpp
    NetUtils.h
    ModuleTypeIDs.hpp
    NetworkGraph.cpp
    NetworkGraph.h
    LociExtensions.h
    RequestUtils.cpp
    RequestUtils.h
    ZsdnTypes.h
    dummyModules/DummyModule.hpp
    MemUtils.h
    ${AUTOGENERATED_DEPENDENCIES_TOPICS}
    ${AUTOGENERATED_DEPENDENCIES_PROTO}
    zsdn/Configs.h
zsdn/StartupHelper.cpp zsdn/StartupHelper.h)


target_link_libraries(${PROJECT_NAME}
	zmf
	protobuf zmq zmqpp PocoFoundation PocoNet emon PocoUtil loci tins)


if(NOT NoTests)
	# Build unittest post-build
  	message("### BUILDING UNITTESTS")
    add_custom_command(TARGET zsdn-commons POST_BUILD
                   WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/../zsdn-commons-UT
                   COMMAND cmake .)
    add_custom_command(TARGET zsdn-commons POST_BUILD
                   WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/../zsdn-commons-UT
                   COMMAND cmake --build .)
    # Execute unittests after post-build
  	message("### RUNNING UNITTESTS")
    add_custom_command(TARGET zsdn-commons POST_BUILD
                   WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/../zsdn-commons-UT
                   COMMAND  ./zsdn-commons_UT )
  	message("### FINISHED RUN UNITTESTS")
else()
  	message("### SKIPPING UNITTESTS")
endif()






