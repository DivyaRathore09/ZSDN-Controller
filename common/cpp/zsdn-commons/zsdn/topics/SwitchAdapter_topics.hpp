//
// Autogenerated Code. Changes here will be automatically overwritten.
//
// @author Andre Kutzleb
//

#ifndef ZSDN_SWITCHADAPTER_H
#define ZSDN_SWITCHADAPTER_H

#include <stdint.h>
#include "zmf/MessageType.hpp"

using namespace zmf::data;

namespace switchadapter_topics {

const uint8_t  TOPIC_VAL__TO = 0x01;
const uint16_t TOPIC_VAL__TO__SWITCH_ADAPTER = 0x0000;
const uint8_t  TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW = 0x00; /// only types sent from controller
const uint8_t  TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__HELLO = 0x00; /// for the sake of completeness, will not be sent to switch
const uint8_t  TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__ERROR = 0x01;
const uint8_t  TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__ECHO_REQUEST = 0x02; /// for the sake of completeness, will not be sent to switch
const uint8_t  TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__ECHO_REPLY = 0x03; /// for the sake of completeness, will not be sent to switch
const uint8_t  TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__OF_1_0_VENDOR_OF_1_3_EXPERIMENTER = 0x04;
const uint8_t  TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__FEATURES_REQUEST = 0x05;
const uint8_t  TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__FEATURES_REPLY = 0x06;
const uint8_t  TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__GET_CONFIG_REQUEST = 0x07;
const uint8_t  TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__GET_CONFIG_REPLY = 0x08;
const uint8_t  TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__SET_CONFIG = 0x09;
const uint8_t  TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__PACKET_IN = 0x0A;
const uint8_t  TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__FLOW_REMOVED = 0x0B;
const uint8_t  TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__PORT_STATUS = 0x0C;
const uint8_t  TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__PACKET_OUT = 0x0D;
const uint8_t  TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__FLOW_MOD = 0x0E;
const uint8_t  TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__OF_1_0_PORT_MOD_OF_1_3_GROUP_MOD = 0x0F;
const uint8_t  TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__OF_1_0_STATS_REQUEST_OF_1_3_PORT_MOD = 0x10;
const uint8_t  TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__OF_1_0_STATS_REPLY_OF_1_3_TABLE_MOD = 0x11;
const uint8_t  TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__OF_1_0_BARRIER_REQUEST_OF_1_3_MULTIPART_REQUEST = 0x12;
const uint8_t  TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__OF_1_0_BARRIER_REPLY_OF_1_3_MULTIPART_REPLY = 0x13;
const uint8_t  TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__OF_1_0_QUEUE_GET_CONFIG_REQUEST_OF_1_3_BARRIER_REQUEST = 0x14;
const uint8_t  TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__OF_1_0_QUEUE_GET_CONFIG_REPLY_OF_1_3_BARRIER_REPLY = 0x15;
const uint8_t  TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__OF_1_3_QUEUE_GET_CONFIG_REQUEST = 0x16;
const uint8_t  TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__OF_1_3_QUEUE_GET_CONFIG_REPLY = 0x17;
const uint8_t  TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__ROLE_RQUEST = 0x18;
const uint8_t  TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__ROLE_REPLY = 0x19;
const uint8_t  TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__GET_ASYNC_REQUEST = 0x1A;
const uint8_t  TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__GET_ASYNC_REPLY = 0x1B;
const uint8_t  TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__SET_ASYNC = 0x1C;
const uint8_t  TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__METER_MOD = 0x1D;
const uint8_t  TOPIC_VAL__FROM = 0x02;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER = 0x0000;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW = 0x00; /// only types sent from switch
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__HELLO = 0x00; /// for the sake of completeness, will not be sent to switch
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__ERROR = 0x01;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__ECHO_REQUEST = 0x02; /// for the sake of completeness, will not be sent to switch
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__ECHO_REPLY = 0x03; /// for the sake of completeness, will not be sent to switch
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__OF_1_0_VENDOR_OF_1_3_EXPERIMENTER = 0x04;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__FEATURES_REQUEST = 0x05;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__FEATURES_REPLY = 0x06;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__GET_CONFIG_REQUEST = 0x07;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__GET_CONFIG_REPLY = 0x08;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__SET_CONFIG = 0x09;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN = 0x0A;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP_DEFAULT = 0x00;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4 = 0x0800;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__HOPOPT = 0x00;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__ICMP = 0x01;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IGMP = 0x02;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__GGP = 0x03;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IP_IN_IP = 0x04;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__ST = 0x05;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__TCP = 0x06;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__CBT = 0x07;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__EGP = 0x08;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IGP = 0x09;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__BBN_RCC_MON = 0x0A;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__NVP_II = 0x0B;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__PUP = 0x0C;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__ARGUS = 0x0D;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__EMCON = 0x0E;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__XNET = 0x0F;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__CHAOS = 0x10;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__UDP = 0x11;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__MUX = 0x12;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__DCN_MEAS = 0x13;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__HMP = 0x14;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__PRM = 0x15;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__XNS_IDP = 0x16;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__TRUNK_1 = 0x17;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__TRUNK_2 = 0x18;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__LEAF_1 = 0x19;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__LEAF_2 = 0x1A;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__RDP = 0x1B;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IRTP = 0x1C;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__ISO_TP4 = 0x1D;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__NETBLT = 0x1E;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__MFE_NSP = 0x1F;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__MERIT_INP = 0x20;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__DCCP = 0x21;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4___3PC = 0x22;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IDPR = 0x23;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__XTP = 0x24;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__DDP = 0x25;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IDPR_CMTP = 0x26;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__TPPP = 0x27;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IL = 0x28;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IPV6_ENCAP = 0x29;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__SDRP = 0x2A;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IPV6_ROUTE = 0x2B;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IPV6_FRAG = 0x2C;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IDRP = 0x2D;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__RSVP = 0x2E;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__GRE = 0x2F;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__MHRP = 0x30;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__BNA = 0x31;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__ESP = 0x32;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__AH = 0x33;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__I_NLSP = 0x34;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__SWIPE = 0x35;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__NARP = 0x36;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__MOBILE = 0x37;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__TLSP = 0x38;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__SKIP = 0x39;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IPV6_ICMP = 0x3A;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IPV6_NONXT = 0x3B;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IPV6_OPTS = 0x3C;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__ANY_HOST_INTERNAL_PROTOCOL = 0x3D; ///  no keyword
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__CFTP = 0x3E;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__ANY_LOCAL_NETWORK = 0x3F; ///  no keyword
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__SAT_EXPAK = 0x40;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__KRYPTOLAN = 0x41;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__RVD = 0x42;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IPPC = 0x43;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__ANY_DISTRIBUTED_FILE_SYSTEM = 0x44; ///  no keyword
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__SAT_MON = 0x45;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__VISA = 0x46;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IPCU = 0x47;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__CPNX = 0x48;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__CPHB = 0x49;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__WSN = 0x4A;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__PVP = 0x4B;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__BR_SAT_MON = 0x4C;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__SUN_ND = 0x4D;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__WB_MON = 0x4E;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__WB_EXPAK = 0x4F;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__ISO_IP = 0x50;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__VMTP = 0x51;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__SECURE_VMTP = 0x52;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__VINES = 0x53;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__TTP = 0x54;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IPTM = 0x54;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__NSFNET_IGP = 0x55;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__DGP = 0x56;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__TCF = 0x57;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__EIGRP = 0x58;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__OSPF = 0x59;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__SPRITE_RPC = 0x5A;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__LARP = 0x5B;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__MTP = 0x5C;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__AX_25 = 0x5D;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IPIP = 0x5E;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__MICP = 0x5F;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__SCC_SP = 0x60;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__ETHERIP = 0x61;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__ENCAP = 0x62;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__ANY_PRIVATE_ENCRYPTION_SCHEME = 0x63; ///  no keyword
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__GMTP = 0x64;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IFMP = 0x65;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__PNNI = 0x66;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__PIM = 0x67;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__ARIS = 0x68;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__SCPS = 0x69;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__QNX = 0x6A;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__A_N = 0x6B;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IPCOMP = 0x6C;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__SNP = 0x6D;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__COMPAQ_PEER = 0x6E;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IPX_IN_IP = 0x6F;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__VRRP = 0x70;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__PGM = 0x71;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__ANY_0_HOP_PROTOCOL = 0x72; ///  no keyword
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__L2TP = 0x73;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__DDX = 0x74;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IATP = 0x75;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__STP = 0x76;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__SRP = 0x77;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__UTI = 0x78;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__SMP = 0x79;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__SM = 0x7A;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__PTP = 0x7B;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IS_IS_OVER_IPV4 = 0x7C;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__FIRE = 0x7D;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__CRTP = 0x7E;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__CRUDP = 0x7F;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__SSCOPMCE = 0x80;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IPLT = 0x81;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__SPS = 0x82;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__PIPE = 0x83;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__SCTP = 0x84;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__FC = 0x85;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__RSVP_E2E_IGNORE = 0x86;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__MOBILITY_HEADER = 0x87;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__UDPLITE = 0x88;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__MPLS_IN_IP = 0x89;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__MANET = 0x8A;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__HIP = 0x8B;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__SHIM6 = 0x8C;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__WESP = 0x8D;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__ROHC = 0x8E;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__USE_FOR_EXPERIMENTATION_AND_TESTING_0XFD = 0xFD; ///  no keyword
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__USE_FOR_EXPERIMENTATION_AND_TESTING_0XFE = 0xFE; ///  no keyword
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__RESERVED = 0xFF; ///  no keyword
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__ARP = 0x0806;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__WAKE_ON_LAN = 0x0842;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__AUDIO_VIDEO_TRANSPORT_PROTOCOL_AS_DEFINED_IN_IEEE_STD_1722_2011 = 0x22F0;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IETF_TRILL_PROTOCOL = 0x22F3;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__DECNET_PHASE_IV = 0x6003;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__REVERSE_ADDRESS_RESOLUTION_PROTOCOL = 0x8035;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__APPLETALK_ETHERTALK = 0x809B;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__APPLETALK_ADDRESS_RESOLUTION_PROTOCOL_AARP = 0x80F3;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__VLAN_TAGGED_FRAME_IEEE_802_1Q_SHORTEST_PATH_BRIDGING_IEEE_802_1AQ = 0x8100;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPX_1 = 0x8137;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPX_2 = 0x8138;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__QNX_QNET = 0x8204;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6 = 0x86DD;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__HOPOPT = 0x00;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__ICMP = 0x01;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IGMP = 0x02;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__GGP = 0x03;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IP_IN_IP = 0x04;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__ST = 0x05;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__TCP = 0x06;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__CBT = 0x07;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__EGP = 0x08;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IGP = 0x09;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__BBN_RCC_MON = 0x0A;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__NVP_II = 0x0B;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__PUP = 0x0C;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__ARGUS = 0x0D;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__EMCON = 0x0E;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__XNET = 0x0F;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__CHAOS = 0x10;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__UDP = 0x11;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__MUX = 0x12;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__DCN_MEAS = 0x13;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__HMP = 0x14;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__PRM = 0x15;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__XNS_IDP = 0x16;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__TRUNK_1 = 0x17;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__TRUNK_2 = 0x18;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__LEAF_1 = 0x19;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__LEAF_2 = 0x1A;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__RDP = 0x1B;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IRTP = 0x1C;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__ISO_TP4 = 0x1D;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__NETBLT = 0x1E;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__MFE_NSP = 0x1F;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__MERIT_INP = 0x20;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__DCCP = 0x21;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6___3PC = 0x22;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IDPR = 0x23;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__XTP = 0x24;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__DDP = 0x25;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IDPR_CMTP = 0x26;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__TPPP = 0x27;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IL = 0x28;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IPV6_ENCAP = 0x29;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__SDRP = 0x2A;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IPV6_ROUTE = 0x2B;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IPV6_FRAG = 0x2C;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IDRP = 0x2D;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__RSVP = 0x2E;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__GRE = 0x2F;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__MHRP = 0x30;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__BNA = 0x31;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__ESP = 0x32;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__AH = 0x33;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__I_NLSP = 0x34;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__SWIPE = 0x35;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__NARP = 0x36;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__MOBILE = 0x37;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__TLSP = 0x38;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__SKIP = 0x39;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IPV6_ICMP = 0x3A;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IPV6_NONXT = 0x3B;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IPV6_OPTS = 0x3C;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__ANY_HOST_INTERNAL_PROTOCOL = 0x3D; ///  no keyword
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__CFTP = 0x3E;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__ANY_LOCAL_NETWORK = 0x3F; ///  no keyword
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__SAT_EXPAK = 0x40;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__KRYPTOLAN = 0x41;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__RVD = 0x42;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IPPC = 0x43;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__ANY_DISTRIBUTED_FILE_SYSTEM = 0x44; ///  no keyword
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__SAT_MON = 0x45;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__VISA = 0x46;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IPCU = 0x47;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__CPNX = 0x48;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__CPHB = 0x49;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__WSN = 0x4A;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__PVP = 0x4B;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__BR_SAT_MON = 0x4C;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__SUN_ND = 0x4D;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__WB_MON = 0x4E;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__WB_EXPAK = 0x4F;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__ISO_IP = 0x50;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__VMTP = 0x51;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__SECURE_VMTP = 0x52;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__VINES = 0x53;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__TTP = 0x54;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IPTM = 0x54;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__NSFNET_IGP = 0x55;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__DGP = 0x56;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__TCF = 0x57;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__EIGRP = 0x58;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__OSPF = 0x59;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__SPRITE_RPC = 0x5A;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__LARP = 0x5B;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__MTP = 0x5C;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__AX_25 = 0x5D;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IPIP = 0x5E;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__MICP = 0x5F;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__SCC_SP = 0x60;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__ETHERIP = 0x61;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__ENCAP = 0x62;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__ANY_PRIVATE_ENCRYPTION_SCHEME = 0x63; ///  no keyword
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__GMTP = 0x64;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IFMP = 0x65;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__PNNI = 0x66;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__PIM = 0x67;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__ARIS = 0x68;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__SCPS = 0x69;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__QNX = 0x6A;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__A_N = 0x6B;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IPCOMP = 0x6C;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__SNP = 0x6D;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__COMPAQ_PEER = 0x6E;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IPX_IN_IP = 0x6F;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__VRRP = 0x70;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__PGM = 0x71;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__ANY_0_HOP_PROTOCOL = 0x72; ///  no keyword
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__L2TP = 0x73;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__DDX = 0x74;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IATP = 0x75;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__STP = 0x76;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__SRP = 0x77;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__UTI = 0x78;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__SMP = 0x79;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__SM = 0x7A;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__PTP = 0x7B;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IS_IS_OVER_IPV4 = 0x7C;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__FIRE = 0x7D;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__CRTP = 0x7E;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__CRUDP = 0x7F;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__SSCOPMCE = 0x80;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IPLT = 0x81;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__SPS = 0x82;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__PIPE = 0x83;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__SCTP = 0x84;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__FC = 0x85;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__RSVP_E2E_IGNORE = 0x86;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__MOBILITY_HEADER = 0x87;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__UDPLITE = 0x88;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__MPLS_IN_IP = 0x89;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__MANET = 0x8A;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__HIP = 0x8B;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__SHIM6 = 0x8C;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__WESP = 0x8D;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__ROHC = 0x8E;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__USE_FOR_EXPERIMENTATION_AND_TESTING_0XFD = 0xFD; ///  no keyword
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__USE_FOR_EXPERIMENTATION_AND_TESTING_0XFE = 0xFE; ///  no keyword
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__RESERVED = 0xFF; ///  no keyword
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__ETHERNET_FLOW_CONTROL = 0x8808;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__SLOW_PROTOCOLS_IEEE_802_3 = 0x8809;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__COBRANET = 0x8819;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__MPLS_UNICAST = 0x8847;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__MPLS_MULTICAST = 0x8848;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__PPPOE_DISCOVERY_STAGE = 0x8863;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__PPPOE_SESSION_STAGE = 0x8864;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__JUMBO_FRAMES = 0x8870;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__HOMEPLUG_1_0_MME = 0x887B;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__EAP_OVER_LAN_IEEE_802_1X = 0x888E;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__PROFINET_PROTOCOL = 0x8892;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__HYPERSCSI_SCSI_OVER_ETHERNET = 0x889A;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__ATA_OVER_ETHERNET = 0x88A2;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__ETHERCAT_PROTOCOL = 0x88A4;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__PROVIDER_BRIDGING_IEEE_802_1AD_SHORTEST_PATH_BRIDGING_IEEE_802_LAQ = 0x88A8;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__ETHERNET_POWERLINK = 0x88AB;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__LLDP = 0x88CC;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__SERCOS_III = 0x88CD;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__HOMEPLUG_AV_MME = 0x88E1;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__MEDIA_REDUNDANCY_PROTOCOL_IEC62439_2 = 0x88E3;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__MAC_SECURITY_IEEE_802_1AE = 0x88E5;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__PTP_OVER_ETHERNET_IEEE_1588 = 0x88F7;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IEEE_802_1AG_CONNECTIVITY_FAULT_MANAGEMENT_CFM_PROTOCOL_ITU_T_RECOMMENDATION_Y_1731_OAM = 0x8902;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__FCOE = 0x8906;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__FCOE_INITIALIZATION_PROTOCOL = 0x8914;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__ROCE = 0x8915;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__HSR = 0x892F;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__ETHERNET_CONFIGURATION_TESTING_PROTOCOL = 0x9000;
const uint16_t TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__LLT = 0xCAFE;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__FLOW_REMOVED = 0x0B;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PORT_STATUS = 0x0C;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_OUT = 0x0D;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__FLOW_MOD = 0x0E;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__OF_1_0_PORT_MOD_OF_1_3_GROUP_MOD = 0x0F;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__OF_1_0_STATS_REQUEST_OF_1_3_PORT_MOD = 0x10;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__OF_1_0_STATS_REPLY_OF_1_3_TABLE_MOD = 0x11;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__OF_1_0_BARRIER_REQUEST_OF_1_3_MULTIPART_REQUEST = 0x12;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__OF_1_0_BARRIER_REPLY_OF_1_3_MULTIPART_REPLY = 0x13;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__OF_1_0_QUEUE_GET_CONFIG_REQUEST_OF_1_3_BARRIER_REQUEST = 0x14;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__OF_1_0_QUEUE_GET_CONFIG_REPLY_OF_1_3_BARRIER_REPLY = 0x15;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__OF_1_3_QUEUE_GET_CONFIG_REQUEST = 0x16;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__OF_1_3_QUEUE_GET_CONFIG_REPLY = 0x17;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__ROLE_RQUEST = 0x18;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__ROLE_REPLY = 0x19;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__GET_ASYNC_REQUEST = 0x1A;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__GET_ASYNC_REPLY = 0x1B;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__SET_ASYNC = 0x1C;
const uint8_t  TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__METER_MOD = 0x1D;
const uint8_t  TOPIC_VAL__REQUEST = 0x03;
const uint16_t TOPIC_VAL__REQUEST__SWITCH_ADAPTER = 0x0000;
const uint8_t  TOPIC_VAL__REQUEST__SWITCH_ADAPTER__OPENFLOW = 0x00;
const uint8_t  TOPIC_VAL__REQUEST__SWITCH_ADAPTER__OPENFLOW__HANDLE_OPENFLOW_MESSAGE = 0x00;
const uint8_t  TOPIC_VAL__REPLY = 0x04;
const uint16_t TOPIC_VAL__REPLY__SWITCH_ADAPTER = 0x0000;
const uint8_t  TOPIC_VAL__REPLY__SWITCH_ADAPTER__OPENFLOW = 0x00;
const uint8_t  TOPIC_VAL__REPLY__SWITCH_ADAPTER__OPENFLOW__HANDLE_OPENFLOW_MESSAGE = 0x00;

class AbstractFactory {
protected:
MessageType& id;
AbstractFactory(MessageType &f) : id(f) {}
public:
MessageType build() {return id;}
};

class TO {
private:
MessageType id;
public:
class SWITCH_ADAPTER : public AbstractFactory {
public:
SWITCH_ADAPTER(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__TO__SWITCH_ADAPTER); }
class SWITCH_INSTANCE : public AbstractFactory {
public:
SWITCH_INSTANCE(MessageType &f, uint64_t value) : AbstractFactory(f) {id.appendMatch64((uint64_t) value); }
class OPENFLOW : public AbstractFactory {
public:
OPENFLOW(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW); }
class HELLO : public AbstractFactory {
public:
HELLO(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__HELLO); }
};
class ERROR : public AbstractFactory {
public:
ERROR(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__ERROR); }
};
class ECHO_REQUEST : public AbstractFactory {
public:
ECHO_REQUEST(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__ECHO_REQUEST); }
};
class ECHO_REPLY : public AbstractFactory {
public:
ECHO_REPLY(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__ECHO_REPLY); }
};
class OF_1_0_VENDOR_OF_1_3_EXPERIMENTER : public AbstractFactory {
public:
OF_1_0_VENDOR_OF_1_3_EXPERIMENTER(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__OF_1_0_VENDOR_OF_1_3_EXPERIMENTER); }
};
class FEATURES_REQUEST : public AbstractFactory {
public:
FEATURES_REQUEST(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__FEATURES_REQUEST); }
};
class FEATURES_REPLY : public AbstractFactory {
public:
FEATURES_REPLY(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__FEATURES_REPLY); }
};
class GET_CONFIG_REQUEST : public AbstractFactory {
public:
GET_CONFIG_REQUEST(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__GET_CONFIG_REQUEST); }
};
class GET_CONFIG_REPLY : public AbstractFactory {
public:
GET_CONFIG_REPLY(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__GET_CONFIG_REPLY); }
};
class SET_CONFIG : public AbstractFactory {
public:
SET_CONFIG(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__SET_CONFIG); }
};
class PACKET_IN : public AbstractFactory {
public:
PACKET_IN(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__PACKET_IN); }
};
class FLOW_REMOVED : public AbstractFactory {
public:
FLOW_REMOVED(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__FLOW_REMOVED); }
};
class PORT_STATUS : public AbstractFactory {
public:
PORT_STATUS(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__PORT_STATUS); }
};
class PACKET_OUT : public AbstractFactory {
public:
PACKET_OUT(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__PACKET_OUT); }
};
class FLOW_MOD : public AbstractFactory {
public:
FLOW_MOD(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__FLOW_MOD); }
};
class OF_1_0_PORT_MOD_OF_1_3_GROUP_MOD : public AbstractFactory {
public:
OF_1_0_PORT_MOD_OF_1_3_GROUP_MOD(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__OF_1_0_PORT_MOD_OF_1_3_GROUP_MOD); }
};
class OF_1_0_STATS_REQUEST_OF_1_3_PORT_MOD : public AbstractFactory {
public:
OF_1_0_STATS_REQUEST_OF_1_3_PORT_MOD(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__OF_1_0_STATS_REQUEST_OF_1_3_PORT_MOD); }
};
class OF_1_0_STATS_REPLY_OF_1_3_TABLE_MOD : public AbstractFactory {
public:
OF_1_0_STATS_REPLY_OF_1_3_TABLE_MOD(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__OF_1_0_STATS_REPLY_OF_1_3_TABLE_MOD); }
};
class OF_1_0_BARRIER_REQUEST_OF_1_3_MULTIPART_REQUEST : public AbstractFactory {
public:
OF_1_0_BARRIER_REQUEST_OF_1_3_MULTIPART_REQUEST(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__OF_1_0_BARRIER_REQUEST_OF_1_3_MULTIPART_REQUEST); }
};
class OF_1_0_BARRIER_REPLY_OF_1_3_MULTIPART_REPLY : public AbstractFactory {
public:
OF_1_0_BARRIER_REPLY_OF_1_3_MULTIPART_REPLY(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__OF_1_0_BARRIER_REPLY_OF_1_3_MULTIPART_REPLY); }
};
class OF_1_0_QUEUE_GET_CONFIG_REQUEST_OF_1_3_BARRIER_REQUEST : public AbstractFactory {
public:
OF_1_0_QUEUE_GET_CONFIG_REQUEST_OF_1_3_BARRIER_REQUEST(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__OF_1_0_QUEUE_GET_CONFIG_REQUEST_OF_1_3_BARRIER_REQUEST); }
};
class OF_1_0_QUEUE_GET_CONFIG_REPLY_OF_1_3_BARRIER_REPLY : public AbstractFactory {
public:
OF_1_0_QUEUE_GET_CONFIG_REPLY_OF_1_3_BARRIER_REPLY(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__OF_1_0_QUEUE_GET_CONFIG_REPLY_OF_1_3_BARRIER_REPLY); }
};
class OF_1_3_QUEUE_GET_CONFIG_REQUEST : public AbstractFactory {
public:
OF_1_3_QUEUE_GET_CONFIG_REQUEST(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__OF_1_3_QUEUE_GET_CONFIG_REQUEST); }
};
class OF_1_3_QUEUE_GET_CONFIG_REPLY : public AbstractFactory {
public:
OF_1_3_QUEUE_GET_CONFIG_REPLY(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__OF_1_3_QUEUE_GET_CONFIG_REPLY); }
};
class ROLE_RQUEST : public AbstractFactory {
public:
ROLE_RQUEST(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__ROLE_RQUEST); }
};
class ROLE_REPLY : public AbstractFactory {
public:
ROLE_REPLY(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__ROLE_REPLY); }
};
class GET_ASYNC_REQUEST : public AbstractFactory {
public:
GET_ASYNC_REQUEST(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__GET_ASYNC_REQUEST); }
};
class GET_ASYNC_REPLY : public AbstractFactory {
public:
GET_ASYNC_REPLY(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__GET_ASYNC_REPLY); }
};
class SET_ASYNC : public AbstractFactory {
public:
SET_ASYNC(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__SET_ASYNC); }
};
class METER_MOD : public AbstractFactory {
public:
METER_MOD(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__TO__SWITCH_ADAPTER__SWITCH_INSTANCE__OPENFLOW__METER_MOD); }
};
class CUSTOM_OPENFLOWTYPE : public AbstractFactory {
public:
CUSTOM_OPENFLOWTYPE(MessageType &f, uint8_t value) : AbstractFactory(f) {id.appendMatch8((uint8_t) value); }
};
HELLO hello() {return HELLO(id);}
ERROR error() {return ERROR(id);}
ECHO_REQUEST echo_request() {return ECHO_REQUEST(id);}
ECHO_REPLY echo_reply() {return ECHO_REPLY(id);}
OF_1_0_VENDOR_OF_1_3_EXPERIMENTER of_1_0_vendor_of_1_3_experimenter() {return OF_1_0_VENDOR_OF_1_3_EXPERIMENTER(id);}
FEATURES_REQUEST features_request() {return FEATURES_REQUEST(id);}
FEATURES_REPLY features_reply() {return FEATURES_REPLY(id);}
GET_CONFIG_REQUEST get_config_request() {return GET_CONFIG_REQUEST(id);}
GET_CONFIG_REPLY get_config_reply() {return GET_CONFIG_REPLY(id);}
SET_CONFIG set_config() {return SET_CONFIG(id);}
PACKET_IN packet_in() {return PACKET_IN(id);}
FLOW_REMOVED flow_removed() {return FLOW_REMOVED(id);}
PORT_STATUS port_status() {return PORT_STATUS(id);}
PACKET_OUT packet_out() {return PACKET_OUT(id);}
FLOW_MOD flow_mod() {return FLOW_MOD(id);}
OF_1_0_PORT_MOD_OF_1_3_GROUP_MOD of_1_0_port_mod_of_1_3_group_mod() {return OF_1_0_PORT_MOD_OF_1_3_GROUP_MOD(id);}
OF_1_0_STATS_REQUEST_OF_1_3_PORT_MOD of_1_0_stats_request_of_1_3_port_mod() {return OF_1_0_STATS_REQUEST_OF_1_3_PORT_MOD(id);}
OF_1_0_STATS_REPLY_OF_1_3_TABLE_MOD of_1_0_stats_reply_of_1_3_table_mod() {return OF_1_0_STATS_REPLY_OF_1_3_TABLE_MOD(id);}
OF_1_0_BARRIER_REQUEST_OF_1_3_MULTIPART_REQUEST of_1_0_barrier_request_of_1_3_multipart_request() {return OF_1_0_BARRIER_REQUEST_OF_1_3_MULTIPART_REQUEST(id);}
OF_1_0_BARRIER_REPLY_OF_1_3_MULTIPART_REPLY of_1_0_barrier_reply_of_1_3_multipart_reply() {return OF_1_0_BARRIER_REPLY_OF_1_3_MULTIPART_REPLY(id);}
OF_1_0_QUEUE_GET_CONFIG_REQUEST_OF_1_3_BARRIER_REQUEST of_1_0_queue_get_config_request_of_1_3_barrier_request() {return OF_1_0_QUEUE_GET_CONFIG_REQUEST_OF_1_3_BARRIER_REQUEST(id);}
OF_1_0_QUEUE_GET_CONFIG_REPLY_OF_1_3_BARRIER_REPLY of_1_0_queue_get_config_reply_of_1_3_barrier_reply() {return OF_1_0_QUEUE_GET_CONFIG_REPLY_OF_1_3_BARRIER_REPLY(id);}
OF_1_3_QUEUE_GET_CONFIG_REQUEST of_1_3_queue_get_config_request() {return OF_1_3_QUEUE_GET_CONFIG_REQUEST(id);}
OF_1_3_QUEUE_GET_CONFIG_REPLY of_1_3_queue_get_config_reply() {return OF_1_3_QUEUE_GET_CONFIG_REPLY(id);}
ROLE_RQUEST role_rquest() {return ROLE_RQUEST(id);}
ROLE_REPLY role_reply() {return ROLE_REPLY(id);}
GET_ASYNC_REQUEST get_async_request() {return GET_ASYNC_REQUEST(id);}
GET_ASYNC_REPLY get_async_reply() {return GET_ASYNC_REPLY(id);}
SET_ASYNC set_async() {return SET_ASYNC(id);}
METER_MOD meter_mod() {return METER_MOD(id);}
CUSTOM_OPENFLOWTYPE custom_openflowtype(uint8_t value) {return CUSTOM_OPENFLOWTYPE(id, value);}
};
OPENFLOW openflow() {return OPENFLOW(id);}
};
SWITCH_INSTANCE switch_instance(uint64_t value) {return SWITCH_INSTANCE(id, value);}
};
TO() : id() {id.appendMatch8((uint8_t) TOPIC_VAL__TO); }
SWITCH_ADAPTER switch_adapter() {return SWITCH_ADAPTER(id);}
};

class FROM {
private:
MessageType id;
public:
class SWITCH_ADAPTER : public AbstractFactory {
public:
SWITCH_ADAPTER(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER); }
class OPENFLOW : public AbstractFactory {
public:
OPENFLOW(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW); }
class HELLO : public AbstractFactory {
public:
HELLO(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__HELLO); }
};
class ERROR : public AbstractFactory {
public:
ERROR(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__ERROR); }
};
class ECHO_REQUEST : public AbstractFactory {
public:
ECHO_REQUEST(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__ECHO_REQUEST); }
};
class ECHO_REPLY : public AbstractFactory {
public:
ECHO_REPLY(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__ECHO_REPLY); }
};
class OF_1_0_VENDOR_OF_1_3_EXPERIMENTER : public AbstractFactory {
public:
OF_1_0_VENDOR_OF_1_3_EXPERIMENTER(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__OF_1_0_VENDOR_OF_1_3_EXPERIMENTER); }
};
class FEATURES_REQUEST : public AbstractFactory {
public:
FEATURES_REQUEST(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__FEATURES_REQUEST); }
};
class FEATURES_REPLY : public AbstractFactory {
public:
FEATURES_REPLY(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__FEATURES_REPLY); }
};
class GET_CONFIG_REQUEST : public AbstractFactory {
public:
GET_CONFIG_REQUEST(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__GET_CONFIG_REQUEST); }
};
class GET_CONFIG_REPLY : public AbstractFactory {
public:
GET_CONFIG_REPLY(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__GET_CONFIG_REPLY); }
};
class SET_CONFIG : public AbstractFactory {
public:
SET_CONFIG(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__SET_CONFIG); }
};
class PACKET_IN : public AbstractFactory {
public:
PACKET_IN(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN); }
class MULTICAST_GROUP : public AbstractFactory {
public:
MULTICAST_GROUP(MessageType &f, uint8_t value) : AbstractFactory(f) {id.appendMatch8((uint8_t) value); }
class IPV4 : public AbstractFactory {
public:
IPV4(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4); }
class HOPOPT : public AbstractFactory {
public:
HOPOPT(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__HOPOPT); }
};
class ICMP : public AbstractFactory {
public:
ICMP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__ICMP); }
};
class IGMP : public AbstractFactory {
public:
IGMP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IGMP); }
};
class GGP : public AbstractFactory {
public:
GGP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__GGP); }
};
class IP_IN_IP : public AbstractFactory {
public:
IP_IN_IP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IP_IN_IP); }
};
class ST : public AbstractFactory {
public:
ST(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__ST); }
};
class TCP : public AbstractFactory {
public:
TCP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__TCP); }
};
class CBT : public AbstractFactory {
public:
CBT(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__CBT); }
};
class EGP : public AbstractFactory {
public:
EGP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__EGP); }
};
class IGP : public AbstractFactory {
public:
IGP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IGP); }
};
class BBN_RCC_MON : public AbstractFactory {
public:
BBN_RCC_MON(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__BBN_RCC_MON); }
};
class NVP_II : public AbstractFactory {
public:
NVP_II(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__NVP_II); }
};
class PUP : public AbstractFactory {
public:
PUP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__PUP); }
};
class ARGUS : public AbstractFactory {
public:
ARGUS(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__ARGUS); }
};
class EMCON : public AbstractFactory {
public:
EMCON(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__EMCON); }
};
class XNET : public AbstractFactory {
public:
XNET(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__XNET); }
};
class CHAOS : public AbstractFactory {
public:
CHAOS(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__CHAOS); }
};
class UDP : public AbstractFactory {
public:
UDP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__UDP); }
class SWITCH_INSTANCE : public AbstractFactory {
public:
SWITCH_INSTANCE(MessageType &f, uint64_t value) : AbstractFactory(f) {id.appendMatch64((uint64_t) value); }
};
SWITCH_INSTANCE switch_instance(uint64_t value) {return SWITCH_INSTANCE(id, value);}
};
class MUX : public AbstractFactory {
public:
MUX(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__MUX); }
};
class DCN_MEAS : public AbstractFactory {
public:
DCN_MEAS(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__DCN_MEAS); }
};
class HMP : public AbstractFactory {
public:
HMP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__HMP); }
};
class PRM : public AbstractFactory {
public:
PRM(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__PRM); }
};
class XNS_IDP : public AbstractFactory {
public:
XNS_IDP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__XNS_IDP); }
};
class TRUNK_1 : public AbstractFactory {
public:
TRUNK_1(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__TRUNK_1); }
};
class TRUNK_2 : public AbstractFactory {
public:
TRUNK_2(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__TRUNK_2); }
};
class LEAF_1 : public AbstractFactory {
public:
LEAF_1(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__LEAF_1); }
};
class LEAF_2 : public AbstractFactory {
public:
LEAF_2(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__LEAF_2); }
};
class RDP : public AbstractFactory {
public:
RDP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__RDP); }
};
class IRTP : public AbstractFactory {
public:
IRTP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IRTP); }
};
class ISO_TP4 : public AbstractFactory {
public:
ISO_TP4(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__ISO_TP4); }
};
class NETBLT : public AbstractFactory {
public:
NETBLT(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__NETBLT); }
};
class MFE_NSP : public AbstractFactory {
public:
MFE_NSP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__MFE_NSP); }
};
class MERIT_INP : public AbstractFactory {
public:
MERIT_INP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__MERIT_INP); }
};
class DCCP : public AbstractFactory {
public:
DCCP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__DCCP); }
};
class _3PC : public AbstractFactory {
public:
_3PC(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4___3PC); }
};
class IDPR : public AbstractFactory {
public:
IDPR(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IDPR); }
};
class XTP : public AbstractFactory {
public:
XTP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__XTP); }
};
class DDP : public AbstractFactory {
public:
DDP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__DDP); }
};
class IDPR_CMTP : public AbstractFactory {
public:
IDPR_CMTP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IDPR_CMTP); }
};
class TPPP : public AbstractFactory {
public:
TPPP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__TPPP); }
};
class IL : public AbstractFactory {
public:
IL(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IL); }
};
class IPV6_ENCAP : public AbstractFactory {
public:
IPV6_ENCAP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IPV6_ENCAP); }
};
class SDRP : public AbstractFactory {
public:
SDRP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__SDRP); }
};
class IPV6_ROUTE : public AbstractFactory {
public:
IPV6_ROUTE(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IPV6_ROUTE); }
};
class IPV6_FRAG : public AbstractFactory {
public:
IPV6_FRAG(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IPV6_FRAG); }
};
class IDRP : public AbstractFactory {
public:
IDRP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IDRP); }
};
class RSVP : public AbstractFactory {
public:
RSVP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__RSVP); }
};
class GRE : public AbstractFactory {
public:
GRE(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__GRE); }
};
class MHRP : public AbstractFactory {
public:
MHRP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__MHRP); }
};
class BNA : public AbstractFactory {
public:
BNA(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__BNA); }
};
class ESP : public AbstractFactory {
public:
ESP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__ESP); }
};
class AH : public AbstractFactory {
public:
AH(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__AH); }
};
class I_NLSP : public AbstractFactory {
public:
I_NLSP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__I_NLSP); }
};
class SWIPE : public AbstractFactory {
public:
SWIPE(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__SWIPE); }
};
class NARP : public AbstractFactory {
public:
NARP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__NARP); }
};
class MOBILE : public AbstractFactory {
public:
MOBILE(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__MOBILE); }
};
class TLSP : public AbstractFactory {
public:
TLSP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__TLSP); }
};
class SKIP : public AbstractFactory {
public:
SKIP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__SKIP); }
};
class IPV6_ICMP : public AbstractFactory {
public:
IPV6_ICMP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IPV6_ICMP); }
};
class IPV6_NONXT : public AbstractFactory {
public:
IPV6_NONXT(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IPV6_NONXT); }
};
class IPV6_OPTS : public AbstractFactory {
public:
IPV6_OPTS(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IPV6_OPTS); }
};
class ANY_HOST_INTERNAL_PROTOCOL : public AbstractFactory {
public:
ANY_HOST_INTERNAL_PROTOCOL(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__ANY_HOST_INTERNAL_PROTOCOL); }
};
class CFTP : public AbstractFactory {
public:
CFTP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__CFTP); }
};
class ANY_LOCAL_NETWORK : public AbstractFactory {
public:
ANY_LOCAL_NETWORK(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__ANY_LOCAL_NETWORK); }
};
class SAT_EXPAK : public AbstractFactory {
public:
SAT_EXPAK(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__SAT_EXPAK); }
};
class KRYPTOLAN : public AbstractFactory {
public:
KRYPTOLAN(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__KRYPTOLAN); }
};
class RVD : public AbstractFactory {
public:
RVD(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__RVD); }
};
class IPPC : public AbstractFactory {
public:
IPPC(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IPPC); }
};
class ANY_DISTRIBUTED_FILE_SYSTEM : public AbstractFactory {
public:
ANY_DISTRIBUTED_FILE_SYSTEM(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__ANY_DISTRIBUTED_FILE_SYSTEM); }
};
class SAT_MON : public AbstractFactory {
public:
SAT_MON(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__SAT_MON); }
};
class VISA : public AbstractFactory {
public:
VISA(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__VISA); }
};
class IPCU : public AbstractFactory {
public:
IPCU(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IPCU); }
};
class CPNX : public AbstractFactory {
public:
CPNX(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__CPNX); }
};
class CPHB : public AbstractFactory {
public:
CPHB(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__CPHB); }
};
class WSN : public AbstractFactory {
public:
WSN(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__WSN); }
};
class PVP : public AbstractFactory {
public:
PVP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__PVP); }
};
class BR_SAT_MON : public AbstractFactory {
public:
BR_SAT_MON(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__BR_SAT_MON); }
};
class SUN_ND : public AbstractFactory {
public:
SUN_ND(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__SUN_ND); }
};
class WB_MON : public AbstractFactory {
public:
WB_MON(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__WB_MON); }
};
class WB_EXPAK : public AbstractFactory {
public:
WB_EXPAK(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__WB_EXPAK); }
};
class ISO_IP : public AbstractFactory {
public:
ISO_IP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__ISO_IP); }
};
class VMTP : public AbstractFactory {
public:
VMTP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__VMTP); }
};
class SECURE_VMTP : public AbstractFactory {
public:
SECURE_VMTP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__SECURE_VMTP); }
};
class VINES : public AbstractFactory {
public:
VINES(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__VINES); }
};
class TTP : public AbstractFactory {
public:
TTP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__TTP); }
};
class IPTM : public AbstractFactory {
public:
IPTM(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IPTM); }
};
class NSFNET_IGP : public AbstractFactory {
public:
NSFNET_IGP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__NSFNET_IGP); }
};
class DGP : public AbstractFactory {
public:
DGP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__DGP); }
};
class TCF : public AbstractFactory {
public:
TCF(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__TCF); }
};
class EIGRP : public AbstractFactory {
public:
EIGRP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__EIGRP); }
};
class OSPF : public AbstractFactory {
public:
OSPF(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__OSPF); }
};
class SPRITE_RPC : public AbstractFactory {
public:
SPRITE_RPC(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__SPRITE_RPC); }
};
class LARP : public AbstractFactory {
public:
LARP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__LARP); }
};
class MTP : public AbstractFactory {
public:
MTP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__MTP); }
};
class AX_25 : public AbstractFactory {
public:
AX_25(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__AX_25); }
};
class IPIP : public AbstractFactory {
public:
IPIP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IPIP); }
};
class MICP : public AbstractFactory {
public:
MICP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__MICP); }
};
class SCC_SP : public AbstractFactory {
public:
SCC_SP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__SCC_SP); }
};
class ETHERIP : public AbstractFactory {
public:
ETHERIP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__ETHERIP); }
};
class ENCAP : public AbstractFactory {
public:
ENCAP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__ENCAP); }
};
class ANY_PRIVATE_ENCRYPTION_SCHEME : public AbstractFactory {
public:
ANY_PRIVATE_ENCRYPTION_SCHEME(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__ANY_PRIVATE_ENCRYPTION_SCHEME); }
};
class GMTP : public AbstractFactory {
public:
GMTP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__GMTP); }
};
class IFMP : public AbstractFactory {
public:
IFMP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IFMP); }
};
class PNNI : public AbstractFactory {
public:
PNNI(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__PNNI); }
};
class PIM : public AbstractFactory {
public:
PIM(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__PIM); }
};
class ARIS : public AbstractFactory {
public:
ARIS(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__ARIS); }
};
class SCPS : public AbstractFactory {
public:
SCPS(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__SCPS); }
};
class QNX : public AbstractFactory {
public:
QNX(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__QNX); }
};
class A_N : public AbstractFactory {
public:
A_N(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__A_N); }
};
class IPCOMP : public AbstractFactory {
public:
IPCOMP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IPCOMP); }
};
class SNP : public AbstractFactory {
public:
SNP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__SNP); }
};
class COMPAQ_PEER : public AbstractFactory {
public:
COMPAQ_PEER(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__COMPAQ_PEER); }
};
class IPX_IN_IP : public AbstractFactory {
public:
IPX_IN_IP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IPX_IN_IP); }
};
class VRRP : public AbstractFactory {
public:
VRRP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__VRRP); }
};
class PGM : public AbstractFactory {
public:
PGM(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__PGM); }
};
class ANY_0_HOP_PROTOCOL : public AbstractFactory {
public:
ANY_0_HOP_PROTOCOL(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__ANY_0_HOP_PROTOCOL); }
};
class L2TP : public AbstractFactory {
public:
L2TP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__L2TP); }
};
class DDX : public AbstractFactory {
public:
DDX(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__DDX); }
};
class IATP : public AbstractFactory {
public:
IATP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IATP); }
};
class STP : public AbstractFactory {
public:
STP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__STP); }
};
class SRP : public AbstractFactory {
public:
SRP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__SRP); }
};
class UTI : public AbstractFactory {
public:
UTI(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__UTI); }
};
class SMP : public AbstractFactory {
public:
SMP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__SMP); }
};
class SM : public AbstractFactory {
public:
SM(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__SM); }
};
class PTP : public AbstractFactory {
public:
PTP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__PTP); }
};
class IS_IS_OVER_IPV4 : public AbstractFactory {
public:
IS_IS_OVER_IPV4(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IS_IS_OVER_IPV4); }
};
class FIRE : public AbstractFactory {
public:
FIRE(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__FIRE); }
};
class CRTP : public AbstractFactory {
public:
CRTP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__CRTP); }
};
class CRUDP : public AbstractFactory {
public:
CRUDP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__CRUDP); }
};
class SSCOPMCE : public AbstractFactory {
public:
SSCOPMCE(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__SSCOPMCE); }
};
class IPLT : public AbstractFactory {
public:
IPLT(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__IPLT); }
};
class SPS : public AbstractFactory {
public:
SPS(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__SPS); }
};
class PIPE : public AbstractFactory {
public:
PIPE(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__PIPE); }
};
class SCTP : public AbstractFactory {
public:
SCTP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__SCTP); }
};
class FC : public AbstractFactory {
public:
FC(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__FC); }
};
class RSVP_E2E_IGNORE : public AbstractFactory {
public:
RSVP_E2E_IGNORE(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__RSVP_E2E_IGNORE); }
};
class MOBILITY_HEADER : public AbstractFactory {
public:
MOBILITY_HEADER(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__MOBILITY_HEADER); }
};
class UDPLITE : public AbstractFactory {
public:
UDPLITE(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__UDPLITE); }
};
class MPLS_IN_IP : public AbstractFactory {
public:
MPLS_IN_IP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__MPLS_IN_IP); }
};
class MANET : public AbstractFactory {
public:
MANET(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__MANET); }
};
class HIP : public AbstractFactory {
public:
HIP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__HIP); }
};
class SHIM6 : public AbstractFactory {
public:
SHIM6(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__SHIM6); }
};
class WESP : public AbstractFactory {
public:
WESP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__WESP); }
};
class ROHC : public AbstractFactory {
public:
ROHC(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__ROHC); }
};
class USE_FOR_EXPERIMENTATION_AND_TESTING_0XFD : public AbstractFactory {
public:
USE_FOR_EXPERIMENTATION_AND_TESTING_0XFD(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__USE_FOR_EXPERIMENTATION_AND_TESTING_0XFD); }
};
class USE_FOR_EXPERIMENTATION_AND_TESTING_0XFE : public AbstractFactory {
public:
USE_FOR_EXPERIMENTATION_AND_TESTING_0XFE(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__USE_FOR_EXPERIMENTATION_AND_TESTING_0XFE); }
};
class RESERVED : public AbstractFactory {
public:
RESERVED(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV4__RESERVED); }
};
class CUSTOM : public AbstractFactory {
public:
CUSTOM(MessageType &f, uint8_t value) : AbstractFactory(f) {id.appendMatch8((uint8_t) value); }
};
HOPOPT hopopt() {return HOPOPT(id);}
ICMP icmp() {return ICMP(id);}
IGMP igmp() {return IGMP(id);}
GGP ggp() {return GGP(id);}
IP_IN_IP ip_in_ip() {return IP_IN_IP(id);}
ST st() {return ST(id);}
TCP tcp() {return TCP(id);}
CBT cbt() {return CBT(id);}
EGP egp() {return EGP(id);}
IGP igp() {return IGP(id);}
BBN_RCC_MON bbn_rcc_mon() {return BBN_RCC_MON(id);}
NVP_II nvp_ii() {return NVP_II(id);}
PUP pup() {return PUP(id);}
ARGUS argus() {return ARGUS(id);}
EMCON emcon() {return EMCON(id);}
XNET xnet() {return XNET(id);}
CHAOS chaos() {return CHAOS(id);}
UDP udp() {return UDP(id);}
MUX mux() {return MUX(id);}
DCN_MEAS dcn_meas() {return DCN_MEAS(id);}
HMP hmp() {return HMP(id);}
PRM prm() {return PRM(id);}
XNS_IDP xns_idp() {return XNS_IDP(id);}
TRUNK_1 trunk_1() {return TRUNK_1(id);}
TRUNK_2 trunk_2() {return TRUNK_2(id);}
LEAF_1 leaf_1() {return LEAF_1(id);}
LEAF_2 leaf_2() {return LEAF_2(id);}
RDP rdp() {return RDP(id);}
IRTP irtp() {return IRTP(id);}
ISO_TP4 iso_tp4() {return ISO_TP4(id);}
NETBLT netblt() {return NETBLT(id);}
MFE_NSP mfe_nsp() {return MFE_NSP(id);}
MERIT_INP merit_inp() {return MERIT_INP(id);}
DCCP dccp() {return DCCP(id);}
_3PC _3pc() {return _3PC(id);}
IDPR idpr() {return IDPR(id);}
XTP xtp() {return XTP(id);}
DDP ddp() {return DDP(id);}
IDPR_CMTP idpr_cmtp() {return IDPR_CMTP(id);}
TPPP tppp() {return TPPP(id);}
IL il() {return IL(id);}
IPV6_ENCAP ipv6_encap() {return IPV6_ENCAP(id);}
SDRP sdrp() {return SDRP(id);}
IPV6_ROUTE ipv6_route() {return IPV6_ROUTE(id);}
IPV6_FRAG ipv6_frag() {return IPV6_FRAG(id);}
IDRP idrp() {return IDRP(id);}
RSVP rsvp() {return RSVP(id);}
GRE gre() {return GRE(id);}
MHRP mhrp() {return MHRP(id);}
BNA bna() {return BNA(id);}
ESP esp() {return ESP(id);}
AH ah() {return AH(id);}
I_NLSP i_nlsp() {return I_NLSP(id);}
SWIPE swipe() {return SWIPE(id);}
NARP narp() {return NARP(id);}
MOBILE mobile() {return MOBILE(id);}
TLSP tlsp() {return TLSP(id);}
SKIP skip() {return SKIP(id);}
IPV6_ICMP ipv6_icmp() {return IPV6_ICMP(id);}
IPV6_NONXT ipv6_nonxt() {return IPV6_NONXT(id);}
IPV6_OPTS ipv6_opts() {return IPV6_OPTS(id);}
ANY_HOST_INTERNAL_PROTOCOL any_host_internal_protocol() {return ANY_HOST_INTERNAL_PROTOCOL(id);}
CFTP cftp() {return CFTP(id);}
ANY_LOCAL_NETWORK any_local_network() {return ANY_LOCAL_NETWORK(id);}
SAT_EXPAK sat_expak() {return SAT_EXPAK(id);}
KRYPTOLAN kryptolan() {return KRYPTOLAN(id);}
RVD rvd() {return RVD(id);}
IPPC ippc() {return IPPC(id);}
ANY_DISTRIBUTED_FILE_SYSTEM any_distributed_file_system() {return ANY_DISTRIBUTED_FILE_SYSTEM(id);}
SAT_MON sat_mon() {return SAT_MON(id);}
VISA visa() {return VISA(id);}
IPCU ipcu() {return IPCU(id);}
CPNX cpnx() {return CPNX(id);}
CPHB cphb() {return CPHB(id);}
WSN wsn() {return WSN(id);}
PVP pvp() {return PVP(id);}
BR_SAT_MON br_sat_mon() {return BR_SAT_MON(id);}
SUN_ND sun_nd() {return SUN_ND(id);}
WB_MON wb_mon() {return WB_MON(id);}
WB_EXPAK wb_expak() {return WB_EXPAK(id);}
ISO_IP iso_ip() {return ISO_IP(id);}
VMTP vmtp() {return VMTP(id);}
SECURE_VMTP secure_vmtp() {return SECURE_VMTP(id);}
VINES vines() {return VINES(id);}
TTP ttp() {return TTP(id);}
IPTM iptm() {return IPTM(id);}
NSFNET_IGP nsfnet_igp() {return NSFNET_IGP(id);}
DGP dgp() {return DGP(id);}
TCF tcf() {return TCF(id);}
EIGRP eigrp() {return EIGRP(id);}
OSPF ospf() {return OSPF(id);}
SPRITE_RPC sprite_rpc() {return SPRITE_RPC(id);}
LARP larp() {return LARP(id);}
MTP mtp() {return MTP(id);}
AX_25 ax_25() {return AX_25(id);}
IPIP ipip() {return IPIP(id);}
MICP micp() {return MICP(id);}
SCC_SP scc_sp() {return SCC_SP(id);}
ETHERIP etherip() {return ETHERIP(id);}
ENCAP encap() {return ENCAP(id);}
ANY_PRIVATE_ENCRYPTION_SCHEME any_private_encryption_scheme() {return ANY_PRIVATE_ENCRYPTION_SCHEME(id);}
GMTP gmtp() {return GMTP(id);}
IFMP ifmp() {return IFMP(id);}
PNNI pnni() {return PNNI(id);}
PIM pim() {return PIM(id);}
ARIS aris() {return ARIS(id);}
SCPS scps() {return SCPS(id);}
QNX qnx() {return QNX(id);}
A_N a_n() {return A_N(id);}
IPCOMP ipcomp() {return IPCOMP(id);}
SNP snp() {return SNP(id);}
COMPAQ_PEER compaq_peer() {return COMPAQ_PEER(id);}
IPX_IN_IP ipx_in_ip() {return IPX_IN_IP(id);}
VRRP vrrp() {return VRRP(id);}
PGM pgm() {return PGM(id);}
ANY_0_HOP_PROTOCOL any_0_hop_protocol() {return ANY_0_HOP_PROTOCOL(id);}
L2TP l2tp() {return L2TP(id);}
DDX ddx() {return DDX(id);}
IATP iatp() {return IATP(id);}
STP stp() {return STP(id);}
SRP srp() {return SRP(id);}
UTI uti() {return UTI(id);}
SMP smp() {return SMP(id);}
SM sm() {return SM(id);}
PTP ptp() {return PTP(id);}
IS_IS_OVER_IPV4 is_is_over_ipv4() {return IS_IS_OVER_IPV4(id);}
FIRE fire() {return FIRE(id);}
CRTP crtp() {return CRTP(id);}
CRUDP crudp() {return CRUDP(id);}
SSCOPMCE sscopmce() {return SSCOPMCE(id);}
IPLT iplt() {return IPLT(id);}
SPS sps() {return SPS(id);}
PIPE pipe() {return PIPE(id);}
SCTP sctp() {return SCTP(id);}
FC fc() {return FC(id);}
RSVP_E2E_IGNORE rsvp_e2e_ignore() {return RSVP_E2E_IGNORE(id);}
MOBILITY_HEADER mobility_header() {return MOBILITY_HEADER(id);}
UDPLITE udplite() {return UDPLITE(id);}
MPLS_IN_IP mpls_in_ip() {return MPLS_IN_IP(id);}
MANET manet() {return MANET(id);}
HIP hip() {return HIP(id);}
SHIM6 shim6() {return SHIM6(id);}
WESP wesp() {return WESP(id);}
ROHC rohc() {return ROHC(id);}
USE_FOR_EXPERIMENTATION_AND_TESTING_0XFD use_for_experimentation_and_testing_0xfd() {return USE_FOR_EXPERIMENTATION_AND_TESTING_0XFD(id);}
USE_FOR_EXPERIMENTATION_AND_TESTING_0XFE use_for_experimentation_and_testing_0xfe() {return USE_FOR_EXPERIMENTATION_AND_TESTING_0XFE(id);}
RESERVED reserved() {return RESERVED(id);}
CUSTOM custom(uint8_t value) {return CUSTOM(id, value);}
};
class ARP : public AbstractFactory {
public:
ARP(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__ARP); }
};
class WAKE_ON_LAN : public AbstractFactory {
public:
WAKE_ON_LAN(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__WAKE_ON_LAN); }
};
class AUDIO_VIDEO_TRANSPORT_PROTOCOL_AS_DEFINED_IN_IEEE_STD_1722_2011 : public AbstractFactory {
public:
AUDIO_VIDEO_TRANSPORT_PROTOCOL_AS_DEFINED_IN_IEEE_STD_1722_2011(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__AUDIO_VIDEO_TRANSPORT_PROTOCOL_AS_DEFINED_IN_IEEE_STD_1722_2011); }
};
class IETF_TRILL_PROTOCOL : public AbstractFactory {
public:
IETF_TRILL_PROTOCOL(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IETF_TRILL_PROTOCOL); }
};
class DECNET_PHASE_IV : public AbstractFactory {
public:
DECNET_PHASE_IV(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__DECNET_PHASE_IV); }
};
class REVERSE_ADDRESS_RESOLUTION_PROTOCOL : public AbstractFactory {
public:
REVERSE_ADDRESS_RESOLUTION_PROTOCOL(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__REVERSE_ADDRESS_RESOLUTION_PROTOCOL); }
};
class APPLETALK_ETHERTALK : public AbstractFactory {
public:
APPLETALK_ETHERTALK(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__APPLETALK_ETHERTALK); }
};
class APPLETALK_ADDRESS_RESOLUTION_PROTOCOL_AARP : public AbstractFactory {
public:
APPLETALK_ADDRESS_RESOLUTION_PROTOCOL_AARP(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__APPLETALK_ADDRESS_RESOLUTION_PROTOCOL_AARP); }
};
class VLAN_TAGGED_FRAME_IEEE_802_1Q_SHORTEST_PATH_BRIDGING_IEEE_802_1AQ : public AbstractFactory {
public:
VLAN_TAGGED_FRAME_IEEE_802_1Q_SHORTEST_PATH_BRIDGING_IEEE_802_1AQ(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__VLAN_TAGGED_FRAME_IEEE_802_1Q_SHORTEST_PATH_BRIDGING_IEEE_802_1AQ); }
};
class IPX_1 : public AbstractFactory {
public:
IPX_1(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPX_1); }
};
class IPX_2 : public AbstractFactory {
public:
IPX_2(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPX_2); }
};
class QNX_QNET : public AbstractFactory {
public:
QNX_QNET(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__QNX_QNET); }
};
class IPV6 : public AbstractFactory {
public:
IPV6(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6); }
class HOPOPT : public AbstractFactory {
public:
HOPOPT(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__HOPOPT); }
};
class ICMP : public AbstractFactory {
public:
ICMP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__ICMP); }
};
class IGMP : public AbstractFactory {
public:
IGMP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IGMP); }
};
class GGP : public AbstractFactory {
public:
GGP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__GGP); }
};
class IP_IN_IP : public AbstractFactory {
public:
IP_IN_IP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IP_IN_IP); }
};
class ST : public AbstractFactory {
public:
ST(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__ST); }
};
class TCP : public AbstractFactory {
public:
TCP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__TCP); }
};
class CBT : public AbstractFactory {
public:
CBT(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__CBT); }
};
class EGP : public AbstractFactory {
public:
EGP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__EGP); }
};
class IGP : public AbstractFactory {
public:
IGP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IGP); }
};
class BBN_RCC_MON : public AbstractFactory {
public:
BBN_RCC_MON(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__BBN_RCC_MON); }
};
class NVP_II : public AbstractFactory {
public:
NVP_II(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__NVP_II); }
};
class PUP : public AbstractFactory {
public:
PUP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__PUP); }
};
class ARGUS : public AbstractFactory {
public:
ARGUS(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__ARGUS); }
};
class EMCON : public AbstractFactory {
public:
EMCON(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__EMCON); }
};
class XNET : public AbstractFactory {
public:
XNET(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__XNET); }
};
class CHAOS : public AbstractFactory {
public:
CHAOS(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__CHAOS); }
};
class UDP : public AbstractFactory {
public:
UDP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__UDP); }
};
class MUX : public AbstractFactory {
public:
MUX(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__MUX); }
};
class DCN_MEAS : public AbstractFactory {
public:
DCN_MEAS(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__DCN_MEAS); }
};
class HMP : public AbstractFactory {
public:
HMP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__HMP); }
};
class PRM : public AbstractFactory {
public:
PRM(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__PRM); }
};
class XNS_IDP : public AbstractFactory {
public:
XNS_IDP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__XNS_IDP); }
};
class TRUNK_1 : public AbstractFactory {
public:
TRUNK_1(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__TRUNK_1); }
};
class TRUNK_2 : public AbstractFactory {
public:
TRUNK_2(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__TRUNK_2); }
};
class LEAF_1 : public AbstractFactory {
public:
LEAF_1(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__LEAF_1); }
};
class LEAF_2 : public AbstractFactory {
public:
LEAF_2(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__LEAF_2); }
};
class RDP : public AbstractFactory {
public:
RDP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__RDP); }
};
class IRTP : public AbstractFactory {
public:
IRTP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IRTP); }
};
class ISO_TP4 : public AbstractFactory {
public:
ISO_TP4(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__ISO_TP4); }
};
class NETBLT : public AbstractFactory {
public:
NETBLT(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__NETBLT); }
};
class MFE_NSP : public AbstractFactory {
public:
MFE_NSP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__MFE_NSP); }
};
class MERIT_INP : public AbstractFactory {
public:
MERIT_INP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__MERIT_INP); }
};
class DCCP : public AbstractFactory {
public:
DCCP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__DCCP); }
};
class _3PC : public AbstractFactory {
public:
_3PC(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6___3PC); }
};
class IDPR : public AbstractFactory {
public:
IDPR(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IDPR); }
};
class XTP : public AbstractFactory {
public:
XTP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__XTP); }
};
class DDP : public AbstractFactory {
public:
DDP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__DDP); }
};
class IDPR_CMTP : public AbstractFactory {
public:
IDPR_CMTP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IDPR_CMTP); }
};
class TPPP : public AbstractFactory {
public:
TPPP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__TPPP); }
};
class IL : public AbstractFactory {
public:
IL(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IL); }
};
class IPV6_ENCAP : public AbstractFactory {
public:
IPV6_ENCAP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IPV6_ENCAP); }
};
class SDRP : public AbstractFactory {
public:
SDRP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__SDRP); }
};
class IPV6_ROUTE : public AbstractFactory {
public:
IPV6_ROUTE(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IPV6_ROUTE); }
};
class IPV6_FRAG : public AbstractFactory {
public:
IPV6_FRAG(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IPV6_FRAG); }
};
class IDRP : public AbstractFactory {
public:
IDRP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IDRP); }
};
class RSVP : public AbstractFactory {
public:
RSVP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__RSVP); }
};
class GRE : public AbstractFactory {
public:
GRE(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__GRE); }
};
class MHRP : public AbstractFactory {
public:
MHRP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__MHRP); }
};
class BNA : public AbstractFactory {
public:
BNA(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__BNA); }
};
class ESP : public AbstractFactory {
public:
ESP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__ESP); }
};
class AH : public AbstractFactory {
public:
AH(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__AH); }
};
class I_NLSP : public AbstractFactory {
public:
I_NLSP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__I_NLSP); }
};
class SWIPE : public AbstractFactory {
public:
SWIPE(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__SWIPE); }
};
class NARP : public AbstractFactory {
public:
NARP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__NARP); }
};
class MOBILE : public AbstractFactory {
public:
MOBILE(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__MOBILE); }
};
class TLSP : public AbstractFactory {
public:
TLSP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__TLSP); }
};
class SKIP : public AbstractFactory {
public:
SKIP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__SKIP); }
};
class IPV6_ICMP : public AbstractFactory {
public:
IPV6_ICMP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IPV6_ICMP); }
};
class IPV6_NONXT : public AbstractFactory {
public:
IPV6_NONXT(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IPV6_NONXT); }
};
class IPV6_OPTS : public AbstractFactory {
public:
IPV6_OPTS(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IPV6_OPTS); }
};
class ANY_HOST_INTERNAL_PROTOCOL : public AbstractFactory {
public:
ANY_HOST_INTERNAL_PROTOCOL(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__ANY_HOST_INTERNAL_PROTOCOL); }
};
class CFTP : public AbstractFactory {
public:
CFTP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__CFTP); }
};
class ANY_LOCAL_NETWORK : public AbstractFactory {
public:
ANY_LOCAL_NETWORK(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__ANY_LOCAL_NETWORK); }
};
class SAT_EXPAK : public AbstractFactory {
public:
SAT_EXPAK(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__SAT_EXPAK); }
};
class KRYPTOLAN : public AbstractFactory {
public:
KRYPTOLAN(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__KRYPTOLAN); }
};
class RVD : public AbstractFactory {
public:
RVD(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__RVD); }
};
class IPPC : public AbstractFactory {
public:
IPPC(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IPPC); }
};
class ANY_DISTRIBUTED_FILE_SYSTEM : public AbstractFactory {
public:
ANY_DISTRIBUTED_FILE_SYSTEM(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__ANY_DISTRIBUTED_FILE_SYSTEM); }
};
class SAT_MON : public AbstractFactory {
public:
SAT_MON(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__SAT_MON); }
};
class VISA : public AbstractFactory {
public:
VISA(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__VISA); }
};
class IPCU : public AbstractFactory {
public:
IPCU(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IPCU); }
};
class CPNX : public AbstractFactory {
public:
CPNX(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__CPNX); }
};
class CPHB : public AbstractFactory {
public:
CPHB(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__CPHB); }
};
class WSN : public AbstractFactory {
public:
WSN(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__WSN); }
};
class PVP : public AbstractFactory {
public:
PVP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__PVP); }
};
class BR_SAT_MON : public AbstractFactory {
public:
BR_SAT_MON(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__BR_SAT_MON); }
};
class SUN_ND : public AbstractFactory {
public:
SUN_ND(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__SUN_ND); }
};
class WB_MON : public AbstractFactory {
public:
WB_MON(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__WB_MON); }
};
class WB_EXPAK : public AbstractFactory {
public:
WB_EXPAK(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__WB_EXPAK); }
};
class ISO_IP : public AbstractFactory {
public:
ISO_IP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__ISO_IP); }
};
class VMTP : public AbstractFactory {
public:
VMTP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__VMTP); }
};
class SECURE_VMTP : public AbstractFactory {
public:
SECURE_VMTP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__SECURE_VMTP); }
};
class VINES : public AbstractFactory {
public:
VINES(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__VINES); }
};
class TTP : public AbstractFactory {
public:
TTP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__TTP); }
};
class IPTM : public AbstractFactory {
public:
IPTM(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IPTM); }
};
class NSFNET_IGP : public AbstractFactory {
public:
NSFNET_IGP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__NSFNET_IGP); }
};
class DGP : public AbstractFactory {
public:
DGP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__DGP); }
};
class TCF : public AbstractFactory {
public:
TCF(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__TCF); }
};
class EIGRP : public AbstractFactory {
public:
EIGRP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__EIGRP); }
};
class OSPF : public AbstractFactory {
public:
OSPF(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__OSPF); }
};
class SPRITE_RPC : public AbstractFactory {
public:
SPRITE_RPC(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__SPRITE_RPC); }
};
class LARP : public AbstractFactory {
public:
LARP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__LARP); }
};
class MTP : public AbstractFactory {
public:
MTP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__MTP); }
};
class AX_25 : public AbstractFactory {
public:
AX_25(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__AX_25); }
};
class IPIP : public AbstractFactory {
public:
IPIP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IPIP); }
};
class MICP : public AbstractFactory {
public:
MICP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__MICP); }
};
class SCC_SP : public AbstractFactory {
public:
SCC_SP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__SCC_SP); }
};
class ETHERIP : public AbstractFactory {
public:
ETHERIP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__ETHERIP); }
};
class ENCAP : public AbstractFactory {
public:
ENCAP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__ENCAP); }
};
class ANY_PRIVATE_ENCRYPTION_SCHEME : public AbstractFactory {
public:
ANY_PRIVATE_ENCRYPTION_SCHEME(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__ANY_PRIVATE_ENCRYPTION_SCHEME); }
};
class GMTP : public AbstractFactory {
public:
GMTP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__GMTP); }
};
class IFMP : public AbstractFactory {
public:
IFMP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IFMP); }
};
class PNNI : public AbstractFactory {
public:
PNNI(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__PNNI); }
};
class PIM : public AbstractFactory {
public:
PIM(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__PIM); }
};
class ARIS : public AbstractFactory {
public:
ARIS(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__ARIS); }
};
class SCPS : public AbstractFactory {
public:
SCPS(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__SCPS); }
};
class QNX : public AbstractFactory {
public:
QNX(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__QNX); }
};
class A_N : public AbstractFactory {
public:
A_N(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__A_N); }
};
class IPCOMP : public AbstractFactory {
public:
IPCOMP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IPCOMP); }
};
class SNP : public AbstractFactory {
public:
SNP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__SNP); }
};
class COMPAQ_PEER : public AbstractFactory {
public:
COMPAQ_PEER(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__COMPAQ_PEER); }
};
class IPX_IN_IP : public AbstractFactory {
public:
IPX_IN_IP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IPX_IN_IP); }
};
class VRRP : public AbstractFactory {
public:
VRRP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__VRRP); }
};
class PGM : public AbstractFactory {
public:
PGM(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__PGM); }
};
class ANY_0_HOP_PROTOCOL : public AbstractFactory {
public:
ANY_0_HOP_PROTOCOL(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__ANY_0_HOP_PROTOCOL); }
};
class L2TP : public AbstractFactory {
public:
L2TP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__L2TP); }
};
class DDX : public AbstractFactory {
public:
DDX(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__DDX); }
};
class IATP : public AbstractFactory {
public:
IATP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IATP); }
};
class STP : public AbstractFactory {
public:
STP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__STP); }
};
class SRP : public AbstractFactory {
public:
SRP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__SRP); }
};
class UTI : public AbstractFactory {
public:
UTI(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__UTI); }
};
class SMP : public AbstractFactory {
public:
SMP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__SMP); }
};
class SM : public AbstractFactory {
public:
SM(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__SM); }
};
class PTP : public AbstractFactory {
public:
PTP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__PTP); }
};
class IS_IS_OVER_IPV4 : public AbstractFactory {
public:
IS_IS_OVER_IPV4(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IS_IS_OVER_IPV4); }
};
class FIRE : public AbstractFactory {
public:
FIRE(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__FIRE); }
};
class CRTP : public AbstractFactory {
public:
CRTP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__CRTP); }
};
class CRUDP : public AbstractFactory {
public:
CRUDP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__CRUDP); }
};
class SSCOPMCE : public AbstractFactory {
public:
SSCOPMCE(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__SSCOPMCE); }
};
class IPLT : public AbstractFactory {
public:
IPLT(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__IPLT); }
};
class SPS : public AbstractFactory {
public:
SPS(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__SPS); }
};
class PIPE : public AbstractFactory {
public:
PIPE(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__PIPE); }
};
class SCTP : public AbstractFactory {
public:
SCTP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__SCTP); }
};
class FC : public AbstractFactory {
public:
FC(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__FC); }
};
class RSVP_E2E_IGNORE : public AbstractFactory {
public:
RSVP_E2E_IGNORE(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__RSVP_E2E_IGNORE); }
};
class MOBILITY_HEADER : public AbstractFactory {
public:
MOBILITY_HEADER(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__MOBILITY_HEADER); }
};
class UDPLITE : public AbstractFactory {
public:
UDPLITE(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__UDPLITE); }
};
class MPLS_IN_IP : public AbstractFactory {
public:
MPLS_IN_IP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__MPLS_IN_IP); }
};
class MANET : public AbstractFactory {
public:
MANET(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__MANET); }
};
class HIP : public AbstractFactory {
public:
HIP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__HIP); }
};
class SHIM6 : public AbstractFactory {
public:
SHIM6(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__SHIM6); }
};
class WESP : public AbstractFactory {
public:
WESP(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__WESP); }
};
class ROHC : public AbstractFactory {
public:
ROHC(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__ROHC); }
};
class USE_FOR_EXPERIMENTATION_AND_TESTING_0XFD : public AbstractFactory {
public:
USE_FOR_EXPERIMENTATION_AND_TESTING_0XFD(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__USE_FOR_EXPERIMENTATION_AND_TESTING_0XFD); }
};
class USE_FOR_EXPERIMENTATION_AND_TESTING_0XFE : public AbstractFactory {
public:
USE_FOR_EXPERIMENTATION_AND_TESTING_0XFE(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__USE_FOR_EXPERIMENTATION_AND_TESTING_0XFE); }
};
class RESERVED : public AbstractFactory {
public:
RESERVED(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IPV6__RESERVED); }
};
class CUSTOM : public AbstractFactory {
public:
CUSTOM(MessageType &f, uint8_t value) : AbstractFactory(f) {id.appendMatch8((uint8_t) value); }
};
HOPOPT hopopt() {return HOPOPT(id);}
ICMP icmp() {return ICMP(id);}
IGMP igmp() {return IGMP(id);}
GGP ggp() {return GGP(id);}
IP_IN_IP ip_in_ip() {return IP_IN_IP(id);}
ST st() {return ST(id);}
TCP tcp() {return TCP(id);}
CBT cbt() {return CBT(id);}
EGP egp() {return EGP(id);}
IGP igp() {return IGP(id);}
BBN_RCC_MON bbn_rcc_mon() {return BBN_RCC_MON(id);}
NVP_II nvp_ii() {return NVP_II(id);}
PUP pup() {return PUP(id);}
ARGUS argus() {return ARGUS(id);}
EMCON emcon() {return EMCON(id);}
XNET xnet() {return XNET(id);}
CHAOS chaos() {return CHAOS(id);}
UDP udp() {return UDP(id);}
MUX mux() {return MUX(id);}
DCN_MEAS dcn_meas() {return DCN_MEAS(id);}
HMP hmp() {return HMP(id);}
PRM prm() {return PRM(id);}
XNS_IDP xns_idp() {return XNS_IDP(id);}
TRUNK_1 trunk_1() {return TRUNK_1(id);}
TRUNK_2 trunk_2() {return TRUNK_2(id);}
LEAF_1 leaf_1() {return LEAF_1(id);}
LEAF_2 leaf_2() {return LEAF_2(id);}
RDP rdp() {return RDP(id);}
IRTP irtp() {return IRTP(id);}
ISO_TP4 iso_tp4() {return ISO_TP4(id);}
NETBLT netblt() {return NETBLT(id);}
MFE_NSP mfe_nsp() {return MFE_NSP(id);}
MERIT_INP merit_inp() {return MERIT_INP(id);}
DCCP dccp() {return DCCP(id);}
_3PC _3pc() {return _3PC(id);}
IDPR idpr() {return IDPR(id);}
XTP xtp() {return XTP(id);}
DDP ddp() {return DDP(id);}
IDPR_CMTP idpr_cmtp() {return IDPR_CMTP(id);}
TPPP tppp() {return TPPP(id);}
IL il() {return IL(id);}
IPV6_ENCAP ipv6_encap() {return IPV6_ENCAP(id);}
SDRP sdrp() {return SDRP(id);}
IPV6_ROUTE ipv6_route() {return IPV6_ROUTE(id);}
IPV6_FRAG ipv6_frag() {return IPV6_FRAG(id);}
IDRP idrp() {return IDRP(id);}
RSVP rsvp() {return RSVP(id);}
GRE gre() {return GRE(id);}
MHRP mhrp() {return MHRP(id);}
BNA bna() {return BNA(id);}
ESP esp() {return ESP(id);}
AH ah() {return AH(id);}
I_NLSP i_nlsp() {return I_NLSP(id);}
SWIPE swipe() {return SWIPE(id);}
NARP narp() {return NARP(id);}
MOBILE mobile() {return MOBILE(id);}
TLSP tlsp() {return TLSP(id);}
SKIP skip() {return SKIP(id);}
IPV6_ICMP ipv6_icmp() {return IPV6_ICMP(id);}
IPV6_NONXT ipv6_nonxt() {return IPV6_NONXT(id);}
IPV6_OPTS ipv6_opts() {return IPV6_OPTS(id);}
ANY_HOST_INTERNAL_PROTOCOL any_host_internal_protocol() {return ANY_HOST_INTERNAL_PROTOCOL(id);}
CFTP cftp() {return CFTP(id);}
ANY_LOCAL_NETWORK any_local_network() {return ANY_LOCAL_NETWORK(id);}
SAT_EXPAK sat_expak() {return SAT_EXPAK(id);}
KRYPTOLAN kryptolan() {return KRYPTOLAN(id);}
RVD rvd() {return RVD(id);}
IPPC ippc() {return IPPC(id);}
ANY_DISTRIBUTED_FILE_SYSTEM any_distributed_file_system() {return ANY_DISTRIBUTED_FILE_SYSTEM(id);}
SAT_MON sat_mon() {return SAT_MON(id);}
VISA visa() {return VISA(id);}
IPCU ipcu() {return IPCU(id);}
CPNX cpnx() {return CPNX(id);}
CPHB cphb() {return CPHB(id);}
WSN wsn() {return WSN(id);}
PVP pvp() {return PVP(id);}
BR_SAT_MON br_sat_mon() {return BR_SAT_MON(id);}
SUN_ND sun_nd() {return SUN_ND(id);}
WB_MON wb_mon() {return WB_MON(id);}
WB_EXPAK wb_expak() {return WB_EXPAK(id);}
ISO_IP iso_ip() {return ISO_IP(id);}
VMTP vmtp() {return VMTP(id);}
SECURE_VMTP secure_vmtp() {return SECURE_VMTP(id);}
VINES vines() {return VINES(id);}
TTP ttp() {return TTP(id);}
IPTM iptm() {return IPTM(id);}
NSFNET_IGP nsfnet_igp() {return NSFNET_IGP(id);}
DGP dgp() {return DGP(id);}
TCF tcf() {return TCF(id);}
EIGRP eigrp() {return EIGRP(id);}
OSPF ospf() {return OSPF(id);}
SPRITE_RPC sprite_rpc() {return SPRITE_RPC(id);}
LARP larp() {return LARP(id);}
MTP mtp() {return MTP(id);}
AX_25 ax_25() {return AX_25(id);}
IPIP ipip() {return IPIP(id);}
MICP micp() {return MICP(id);}
SCC_SP scc_sp() {return SCC_SP(id);}
ETHERIP etherip() {return ETHERIP(id);}
ENCAP encap() {return ENCAP(id);}
ANY_PRIVATE_ENCRYPTION_SCHEME any_private_encryption_scheme() {return ANY_PRIVATE_ENCRYPTION_SCHEME(id);}
GMTP gmtp() {return GMTP(id);}
IFMP ifmp() {return IFMP(id);}
PNNI pnni() {return PNNI(id);}
PIM pim() {return PIM(id);}
ARIS aris() {return ARIS(id);}
SCPS scps() {return SCPS(id);}
QNX qnx() {return QNX(id);}
A_N a_n() {return A_N(id);}
IPCOMP ipcomp() {return IPCOMP(id);}
SNP snp() {return SNP(id);}
COMPAQ_PEER compaq_peer() {return COMPAQ_PEER(id);}
IPX_IN_IP ipx_in_ip() {return IPX_IN_IP(id);}
VRRP vrrp() {return VRRP(id);}
PGM pgm() {return PGM(id);}
ANY_0_HOP_PROTOCOL any_0_hop_protocol() {return ANY_0_HOP_PROTOCOL(id);}
L2TP l2tp() {return L2TP(id);}
DDX ddx() {return DDX(id);}
IATP iatp() {return IATP(id);}
STP stp() {return STP(id);}
SRP srp() {return SRP(id);}
UTI uti() {return UTI(id);}
SMP smp() {return SMP(id);}
SM sm() {return SM(id);}
PTP ptp() {return PTP(id);}
IS_IS_OVER_IPV4 is_is_over_ipv4() {return IS_IS_OVER_IPV4(id);}
FIRE fire() {return FIRE(id);}
CRTP crtp() {return CRTP(id);}
CRUDP crudp() {return CRUDP(id);}
SSCOPMCE sscopmce() {return SSCOPMCE(id);}
IPLT iplt() {return IPLT(id);}
SPS sps() {return SPS(id);}
PIPE pipe() {return PIPE(id);}
SCTP sctp() {return SCTP(id);}
FC fc() {return FC(id);}
RSVP_E2E_IGNORE rsvp_e2e_ignore() {return RSVP_E2E_IGNORE(id);}
MOBILITY_HEADER mobility_header() {return MOBILITY_HEADER(id);}
UDPLITE udplite() {return UDPLITE(id);}
MPLS_IN_IP mpls_in_ip() {return MPLS_IN_IP(id);}
MANET manet() {return MANET(id);}
HIP hip() {return HIP(id);}
SHIM6 shim6() {return SHIM6(id);}
WESP wesp() {return WESP(id);}
ROHC rohc() {return ROHC(id);}
USE_FOR_EXPERIMENTATION_AND_TESTING_0XFD use_for_experimentation_and_testing_0xfd() {return USE_FOR_EXPERIMENTATION_AND_TESTING_0XFD(id);}
USE_FOR_EXPERIMENTATION_AND_TESTING_0XFE use_for_experimentation_and_testing_0xfe() {return USE_FOR_EXPERIMENTATION_AND_TESTING_0XFE(id);}
RESERVED reserved() {return RESERVED(id);}
CUSTOM custom(uint8_t value) {return CUSTOM(id, value);}
};
class ETHERNET_FLOW_CONTROL : public AbstractFactory {
public:
ETHERNET_FLOW_CONTROL(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__ETHERNET_FLOW_CONTROL); }
};
class SLOW_PROTOCOLS_IEEE_802_3 : public AbstractFactory {
public:
SLOW_PROTOCOLS_IEEE_802_3(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__SLOW_PROTOCOLS_IEEE_802_3); }
};
class COBRANET : public AbstractFactory {
public:
COBRANET(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__COBRANET); }
};
class MPLS_UNICAST : public AbstractFactory {
public:
MPLS_UNICAST(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__MPLS_UNICAST); }
};
class MPLS_MULTICAST : public AbstractFactory {
public:
MPLS_MULTICAST(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__MPLS_MULTICAST); }
};
class PPPOE_DISCOVERY_STAGE : public AbstractFactory {
public:
PPPOE_DISCOVERY_STAGE(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__PPPOE_DISCOVERY_STAGE); }
};
class PPPOE_SESSION_STAGE : public AbstractFactory {
public:
PPPOE_SESSION_STAGE(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__PPPOE_SESSION_STAGE); }
};
class JUMBO_FRAMES : public AbstractFactory {
public:
JUMBO_FRAMES(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__JUMBO_FRAMES); }
};
class HOMEPLUG_1_0_MME : public AbstractFactory {
public:
HOMEPLUG_1_0_MME(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__HOMEPLUG_1_0_MME); }
};
class EAP_OVER_LAN_IEEE_802_1X : public AbstractFactory {
public:
EAP_OVER_LAN_IEEE_802_1X(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__EAP_OVER_LAN_IEEE_802_1X); }
};
class PROFINET_PROTOCOL : public AbstractFactory {
public:
PROFINET_PROTOCOL(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__PROFINET_PROTOCOL); }
};
class HYPERSCSI_SCSI_OVER_ETHERNET : public AbstractFactory {
public:
HYPERSCSI_SCSI_OVER_ETHERNET(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__HYPERSCSI_SCSI_OVER_ETHERNET); }
};
class ATA_OVER_ETHERNET : public AbstractFactory {
public:
ATA_OVER_ETHERNET(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__ATA_OVER_ETHERNET); }
};
class ETHERCAT_PROTOCOL : public AbstractFactory {
public:
ETHERCAT_PROTOCOL(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__ETHERCAT_PROTOCOL); }
};
class PROVIDER_BRIDGING_IEEE_802_1AD_SHORTEST_PATH_BRIDGING_IEEE_802_LAQ : public AbstractFactory {
public:
PROVIDER_BRIDGING_IEEE_802_1AD_SHORTEST_PATH_BRIDGING_IEEE_802_LAQ(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__PROVIDER_BRIDGING_IEEE_802_1AD_SHORTEST_PATH_BRIDGING_IEEE_802_LAQ); }
};
class ETHERNET_POWERLINK : public AbstractFactory {
public:
ETHERNET_POWERLINK(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__ETHERNET_POWERLINK); }
};
class LLDP : public AbstractFactory {
public:
LLDP(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__LLDP); }
};
class SERCOS_III : public AbstractFactory {
public:
SERCOS_III(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__SERCOS_III); }
};
class HOMEPLUG_AV_MME : public AbstractFactory {
public:
HOMEPLUG_AV_MME(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__HOMEPLUG_AV_MME); }
};
class MEDIA_REDUNDANCY_PROTOCOL_IEC62439_2 : public AbstractFactory {
public:
MEDIA_REDUNDANCY_PROTOCOL_IEC62439_2(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__MEDIA_REDUNDANCY_PROTOCOL_IEC62439_2); }
};
class MAC_SECURITY_IEEE_802_1AE : public AbstractFactory {
public:
MAC_SECURITY_IEEE_802_1AE(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__MAC_SECURITY_IEEE_802_1AE); }
};
class PTP_OVER_ETHERNET_IEEE_1588 : public AbstractFactory {
public:
PTP_OVER_ETHERNET_IEEE_1588(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__PTP_OVER_ETHERNET_IEEE_1588); }
};
class IEEE_802_1AG_CONNECTIVITY_FAULT_MANAGEMENT_CFM_PROTOCOL_ITU_T_RECOMMENDATION_Y_1731_OAM : public AbstractFactory {
public:
IEEE_802_1AG_CONNECTIVITY_FAULT_MANAGEMENT_CFM_PROTOCOL_ITU_T_RECOMMENDATION_Y_1731_OAM(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__IEEE_802_1AG_CONNECTIVITY_FAULT_MANAGEMENT_CFM_PROTOCOL_ITU_T_RECOMMENDATION_Y_1731_OAM); }
};
class FCOE : public AbstractFactory {
public:
FCOE(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__FCOE); }
};
class FCOE_INITIALIZATION_PROTOCOL : public AbstractFactory {
public:
FCOE_INITIALIZATION_PROTOCOL(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__FCOE_INITIALIZATION_PROTOCOL); }
};
class ROCE : public AbstractFactory {
public:
ROCE(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__ROCE); }
};
class HSR : public AbstractFactory {
public:
HSR(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__HSR); }
};
class ETHERNET_CONFIGURATION_TESTING_PROTOCOL : public AbstractFactory {
public:
ETHERNET_CONFIGURATION_TESTING_PROTOCOL(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__ETHERNET_CONFIGURATION_TESTING_PROTOCOL); }
};
class LLT : public AbstractFactory {
public:
LLT(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP__LLT); }
};
class CUSTOM_PROTOCOL : public AbstractFactory {
public:
CUSTOM_PROTOCOL(MessageType &f, uint16_t value) : AbstractFactory(f) {id.appendMatch16((uint16_t) value); }
};
IPV4 ipv4() {return IPV4(id);}
ARP arp() {return ARP(id);}
WAKE_ON_LAN wake_on_lan() {return WAKE_ON_LAN(id);}
AUDIO_VIDEO_TRANSPORT_PROTOCOL_AS_DEFINED_IN_IEEE_STD_1722_2011 audio_video_transport_protocol_as_defined_in_ieee_std_1722_2011() {return AUDIO_VIDEO_TRANSPORT_PROTOCOL_AS_DEFINED_IN_IEEE_STD_1722_2011(id);}
IETF_TRILL_PROTOCOL ietf_trill_protocol() {return IETF_TRILL_PROTOCOL(id);}
DECNET_PHASE_IV decnet_phase_iv() {return DECNET_PHASE_IV(id);}
REVERSE_ADDRESS_RESOLUTION_PROTOCOL reverse_address_resolution_protocol() {return REVERSE_ADDRESS_RESOLUTION_PROTOCOL(id);}
APPLETALK_ETHERTALK appletalk_ethertalk() {return APPLETALK_ETHERTALK(id);}
APPLETALK_ADDRESS_RESOLUTION_PROTOCOL_AARP appletalk_address_resolution_protocol_aarp() {return APPLETALK_ADDRESS_RESOLUTION_PROTOCOL_AARP(id);}
VLAN_TAGGED_FRAME_IEEE_802_1Q_SHORTEST_PATH_BRIDGING_IEEE_802_1AQ vlan_tagged_frame_ieee_802_1q_shortest_path_bridging_ieee_802_1aq() {return VLAN_TAGGED_FRAME_IEEE_802_1Q_SHORTEST_PATH_BRIDGING_IEEE_802_1AQ(id);}
IPX_1 ipx_1() {return IPX_1(id);}
IPX_2 ipx_2() {return IPX_2(id);}
QNX_QNET qnx_qnet() {return QNX_QNET(id);}
IPV6 ipv6() {return IPV6(id);}
ETHERNET_FLOW_CONTROL ethernet_flow_control() {return ETHERNET_FLOW_CONTROL(id);}
SLOW_PROTOCOLS_IEEE_802_3 slow_protocols_ieee_802_3() {return SLOW_PROTOCOLS_IEEE_802_3(id);}
COBRANET cobranet() {return COBRANET(id);}
MPLS_UNICAST mpls_unicast() {return MPLS_UNICAST(id);}
MPLS_MULTICAST mpls_multicast() {return MPLS_MULTICAST(id);}
PPPOE_DISCOVERY_STAGE pppoe_discovery_stage() {return PPPOE_DISCOVERY_STAGE(id);}
PPPOE_SESSION_STAGE pppoe_session_stage() {return PPPOE_SESSION_STAGE(id);}
JUMBO_FRAMES jumbo_frames() {return JUMBO_FRAMES(id);}
HOMEPLUG_1_0_MME homeplug_1_0_mme() {return HOMEPLUG_1_0_MME(id);}
EAP_OVER_LAN_IEEE_802_1X eap_over_lan_ieee_802_1x() {return EAP_OVER_LAN_IEEE_802_1X(id);}
PROFINET_PROTOCOL profinet_protocol() {return PROFINET_PROTOCOL(id);}
HYPERSCSI_SCSI_OVER_ETHERNET hyperscsi_scsi_over_ethernet() {return HYPERSCSI_SCSI_OVER_ETHERNET(id);}
ATA_OVER_ETHERNET ata_over_ethernet() {return ATA_OVER_ETHERNET(id);}
ETHERCAT_PROTOCOL ethercat_protocol() {return ETHERCAT_PROTOCOL(id);}
PROVIDER_BRIDGING_IEEE_802_1AD_SHORTEST_PATH_BRIDGING_IEEE_802_LAQ provider_bridging_ieee_802_1ad_shortest_path_bridging_ieee_802_laq() {return PROVIDER_BRIDGING_IEEE_802_1AD_SHORTEST_PATH_BRIDGING_IEEE_802_LAQ(id);}
ETHERNET_POWERLINK ethernet_powerlink() {return ETHERNET_POWERLINK(id);}
LLDP lldp() {return LLDP(id);}
SERCOS_III sercos_iii() {return SERCOS_III(id);}
HOMEPLUG_AV_MME homeplug_av_mme() {return HOMEPLUG_AV_MME(id);}
MEDIA_REDUNDANCY_PROTOCOL_IEC62439_2 media_redundancy_protocol_iec62439_2() {return MEDIA_REDUNDANCY_PROTOCOL_IEC62439_2(id);}
MAC_SECURITY_IEEE_802_1AE mac_security_ieee_802_1ae() {return MAC_SECURITY_IEEE_802_1AE(id);}
PTP_OVER_ETHERNET_IEEE_1588 ptp_over_ethernet_ieee_1588() {return PTP_OVER_ETHERNET_IEEE_1588(id);}
IEEE_802_1AG_CONNECTIVITY_FAULT_MANAGEMENT_CFM_PROTOCOL_ITU_T_RECOMMENDATION_Y_1731_OAM ieee_802_1ag_connectivity_fault_management_cfm_protocol_itu_t_recommendation_y_1731_oam() {return IEEE_802_1AG_CONNECTIVITY_FAULT_MANAGEMENT_CFM_PROTOCOL_ITU_T_RECOMMENDATION_Y_1731_OAM(id);}
FCOE fcoe() {return FCOE(id);}
FCOE_INITIALIZATION_PROTOCOL fcoe_initialization_protocol() {return FCOE_INITIALIZATION_PROTOCOL(id);}
ROCE roce() {return ROCE(id);}
HSR hsr() {return HSR(id);}
ETHERNET_CONFIGURATION_TESTING_PROTOCOL ethernet_configuration_testing_protocol() {return ETHERNET_CONFIGURATION_TESTING_PROTOCOL(id);}
LLT llt() {return LLT(id);}
CUSTOM_PROTOCOL custom_protocol(uint16_t value) {return CUSTOM_PROTOCOL(id, value);}
};
MULTICAST_GROUP multicast_group(uint8_t value) {return MULTICAST_GROUP(id, value);}
MULTICAST_GROUP multicast_group_default() {return MULTICAST_GROUP(id, TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_IN__MULTICAST_GROUP_DEFAULT);}
};
class FLOW_REMOVED : public AbstractFactory {
public:
FLOW_REMOVED(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__FLOW_REMOVED); }
};
class PORT_STATUS : public AbstractFactory {
public:
PORT_STATUS(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PORT_STATUS); }
};
class PACKET_OUT : public AbstractFactory {
public:
PACKET_OUT(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__PACKET_OUT); }
};
class FLOW_MOD : public AbstractFactory {
public:
FLOW_MOD(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__FLOW_MOD); }
};
class OF_1_0_PORT_MOD_OF_1_3_GROUP_MOD : public AbstractFactory {
public:
OF_1_0_PORT_MOD_OF_1_3_GROUP_MOD(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__OF_1_0_PORT_MOD_OF_1_3_GROUP_MOD); }
};
class OF_1_0_STATS_REQUEST_OF_1_3_PORT_MOD : public AbstractFactory {
public:
OF_1_0_STATS_REQUEST_OF_1_3_PORT_MOD(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__OF_1_0_STATS_REQUEST_OF_1_3_PORT_MOD); }
};
class OF_1_0_STATS_REPLY_OF_1_3_TABLE_MOD : public AbstractFactory {
public:
OF_1_0_STATS_REPLY_OF_1_3_TABLE_MOD(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__OF_1_0_STATS_REPLY_OF_1_3_TABLE_MOD); }
};
class OF_1_0_BARRIER_REQUEST_OF_1_3_MULTIPART_REQUEST : public AbstractFactory {
public:
OF_1_0_BARRIER_REQUEST_OF_1_3_MULTIPART_REQUEST(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__OF_1_0_BARRIER_REQUEST_OF_1_3_MULTIPART_REQUEST); }
};
class OF_1_0_BARRIER_REPLY_OF_1_3_MULTIPART_REPLY : public AbstractFactory {
public:
OF_1_0_BARRIER_REPLY_OF_1_3_MULTIPART_REPLY(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__OF_1_0_BARRIER_REPLY_OF_1_3_MULTIPART_REPLY); }
};
class OF_1_0_QUEUE_GET_CONFIG_REQUEST_OF_1_3_BARRIER_REQUEST : public AbstractFactory {
public:
OF_1_0_QUEUE_GET_CONFIG_REQUEST_OF_1_3_BARRIER_REQUEST(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__OF_1_0_QUEUE_GET_CONFIG_REQUEST_OF_1_3_BARRIER_REQUEST); }
};
class OF_1_0_QUEUE_GET_CONFIG_REPLY_OF_1_3_BARRIER_REPLY : public AbstractFactory {
public:
OF_1_0_QUEUE_GET_CONFIG_REPLY_OF_1_3_BARRIER_REPLY(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__OF_1_0_QUEUE_GET_CONFIG_REPLY_OF_1_3_BARRIER_REPLY); }
};
class OF_1_3_QUEUE_GET_CONFIG_REQUEST : public AbstractFactory {
public:
OF_1_3_QUEUE_GET_CONFIG_REQUEST(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__OF_1_3_QUEUE_GET_CONFIG_REQUEST); }
};
class OF_1_3_QUEUE_GET_CONFIG_REPLY : public AbstractFactory {
public:
OF_1_3_QUEUE_GET_CONFIG_REPLY(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__OF_1_3_QUEUE_GET_CONFIG_REPLY); }
};
class ROLE_RQUEST : public AbstractFactory {
public:
ROLE_RQUEST(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__ROLE_RQUEST); }
};
class ROLE_REPLY : public AbstractFactory {
public:
ROLE_REPLY(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__ROLE_REPLY); }
};
class GET_ASYNC_REQUEST : public AbstractFactory {
public:
GET_ASYNC_REQUEST(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__GET_ASYNC_REQUEST); }
};
class GET_ASYNC_REPLY : public AbstractFactory {
public:
GET_ASYNC_REPLY(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__GET_ASYNC_REPLY); }
};
class SET_ASYNC : public AbstractFactory {
public:
SET_ASYNC(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__SET_ASYNC); }
};
class METER_MOD : public AbstractFactory {
public:
METER_MOD(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__FROM__SWITCH_ADAPTER__OPENFLOW__METER_MOD); }
};
class CUSTOM_OPENFLOWTYPE : public AbstractFactory {
public:
CUSTOM_OPENFLOWTYPE(MessageType &f, uint8_t value) : AbstractFactory(f) {id.appendMatch8((uint8_t) value); }
};
HELLO hello() {return HELLO(id);}
ERROR error() {return ERROR(id);}
ECHO_REQUEST echo_request() {return ECHO_REQUEST(id);}
ECHO_REPLY echo_reply() {return ECHO_REPLY(id);}
OF_1_0_VENDOR_OF_1_3_EXPERIMENTER of_1_0_vendor_of_1_3_experimenter() {return OF_1_0_VENDOR_OF_1_3_EXPERIMENTER(id);}
FEATURES_REQUEST features_request() {return FEATURES_REQUEST(id);}
FEATURES_REPLY features_reply() {return FEATURES_REPLY(id);}
GET_CONFIG_REQUEST get_config_request() {return GET_CONFIG_REQUEST(id);}
GET_CONFIG_REPLY get_config_reply() {return GET_CONFIG_REPLY(id);}
SET_CONFIG set_config() {return SET_CONFIG(id);}
PACKET_IN packet_in() {return PACKET_IN(id);}
FLOW_REMOVED flow_removed() {return FLOW_REMOVED(id);}
PORT_STATUS port_status() {return PORT_STATUS(id);}
PACKET_OUT packet_out() {return PACKET_OUT(id);}
FLOW_MOD flow_mod() {return FLOW_MOD(id);}
OF_1_0_PORT_MOD_OF_1_3_GROUP_MOD of_1_0_port_mod_of_1_3_group_mod() {return OF_1_0_PORT_MOD_OF_1_3_GROUP_MOD(id);}
OF_1_0_STATS_REQUEST_OF_1_3_PORT_MOD of_1_0_stats_request_of_1_3_port_mod() {return OF_1_0_STATS_REQUEST_OF_1_3_PORT_MOD(id);}
OF_1_0_STATS_REPLY_OF_1_3_TABLE_MOD of_1_0_stats_reply_of_1_3_table_mod() {return OF_1_0_STATS_REPLY_OF_1_3_TABLE_MOD(id);}
OF_1_0_BARRIER_REQUEST_OF_1_3_MULTIPART_REQUEST of_1_0_barrier_request_of_1_3_multipart_request() {return OF_1_0_BARRIER_REQUEST_OF_1_3_MULTIPART_REQUEST(id);}
OF_1_0_BARRIER_REPLY_OF_1_3_MULTIPART_REPLY of_1_0_barrier_reply_of_1_3_multipart_reply() {return OF_1_0_BARRIER_REPLY_OF_1_3_MULTIPART_REPLY(id);}
OF_1_0_QUEUE_GET_CONFIG_REQUEST_OF_1_3_BARRIER_REQUEST of_1_0_queue_get_config_request_of_1_3_barrier_request() {return OF_1_0_QUEUE_GET_CONFIG_REQUEST_OF_1_3_BARRIER_REQUEST(id);}
OF_1_0_QUEUE_GET_CONFIG_REPLY_OF_1_3_BARRIER_REPLY of_1_0_queue_get_config_reply_of_1_3_barrier_reply() {return OF_1_0_QUEUE_GET_CONFIG_REPLY_OF_1_3_BARRIER_REPLY(id);}
OF_1_3_QUEUE_GET_CONFIG_REQUEST of_1_3_queue_get_config_request() {return OF_1_3_QUEUE_GET_CONFIG_REQUEST(id);}
OF_1_3_QUEUE_GET_CONFIG_REPLY of_1_3_queue_get_config_reply() {return OF_1_3_QUEUE_GET_CONFIG_REPLY(id);}
ROLE_RQUEST role_rquest() {return ROLE_RQUEST(id);}
ROLE_REPLY role_reply() {return ROLE_REPLY(id);}
GET_ASYNC_REQUEST get_async_request() {return GET_ASYNC_REQUEST(id);}
GET_ASYNC_REPLY get_async_reply() {return GET_ASYNC_REPLY(id);}
SET_ASYNC set_async() {return SET_ASYNC(id);}
METER_MOD meter_mod() {return METER_MOD(id);}
CUSTOM_OPENFLOWTYPE custom_openflowtype(uint8_t value) {return CUSTOM_OPENFLOWTYPE(id, value);}
};
OPENFLOW openflow() {return OPENFLOW(id);}
};
FROM() : id() {id.appendMatch8((uint8_t) TOPIC_VAL__FROM); }
SWITCH_ADAPTER switch_adapter() {return SWITCH_ADAPTER(id);}
};

class REQUEST {
private:
MessageType id;
public:
class SWITCH_ADAPTER : public AbstractFactory {
public:
SWITCH_ADAPTER(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__REQUEST__SWITCH_ADAPTER); }
class OPENFLOW : public AbstractFactory {
public:
OPENFLOW(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__REQUEST__SWITCH_ADAPTER__OPENFLOW); }
class HANDLE_OPENFLOW_MESSAGE : public AbstractFactory {
public:
HANDLE_OPENFLOW_MESSAGE(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__REQUEST__SWITCH_ADAPTER__OPENFLOW__HANDLE_OPENFLOW_MESSAGE); }
};
HANDLE_OPENFLOW_MESSAGE handle_openflow_message() {return HANDLE_OPENFLOW_MESSAGE(id);}
};
OPENFLOW openflow() {return OPENFLOW(id);}
};
REQUEST() : id() {id.appendMatch8((uint8_t) TOPIC_VAL__REQUEST); }
SWITCH_ADAPTER switch_adapter() {return SWITCH_ADAPTER(id);}
};

class REPLY {
private:
MessageType id;
public:
class SWITCH_ADAPTER : public AbstractFactory {
public:
SWITCH_ADAPTER(MessageType &f) : AbstractFactory(f) {id.appendMatch16((uint16_t) TOPIC_VAL__REPLY__SWITCH_ADAPTER); }
class OPENFLOW : public AbstractFactory {
public:
OPENFLOW(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__REPLY__SWITCH_ADAPTER__OPENFLOW); }
class HANDLE_OPENFLOW_MESSAGE : public AbstractFactory {
public:
HANDLE_OPENFLOW_MESSAGE(MessageType &f) : AbstractFactory(f) {id.appendMatch8((uint8_t) TOPIC_VAL__REPLY__SWITCH_ADAPTER__OPENFLOW__HANDLE_OPENFLOW_MESSAGE); }
};
HANDLE_OPENFLOW_MESSAGE handle_openflow_message() {return HANDLE_OPENFLOW_MESSAGE(id);}
};
OPENFLOW openflow() {return OPENFLOW(id);}
};
REPLY() : id() {id.appendMatch8((uint8_t) TOPIC_VAL__REPLY); }
SWITCH_ADAPTER switch_adapter() {return SWITCH_ADAPTER(id);}
};


} // namespace switchadapter_topics

#endif //ZSDN_SWITCHADAPTER_H
