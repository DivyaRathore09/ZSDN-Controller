//
// Autogenerated Code. Changes here will be automatically overwritten.
//
// @author Andre Kutzleb
//

#ifndef ZSDN_LOGGINGMODULE_H
#define ZSDN_LOGGINGMODULE_H

#include <stdint.h>
#include "zmf/MessageType.hpp"

using namespace zmf::data;

namespace loggingmodule_topics {

const uint8_t  TOPIC_VAL__TO = 0x01;
const uint8_t  TOPIC_VAL__FROM = 0x02;
const uint8_t  TOPIC_VAL__REQUEST = 0x03;
const uint8_t  TOPIC_VAL__REPLY = 0x04;

class AbstractFactory {
protected:
MessageType& id;
AbstractFactory(MessageType &f) : id(f) {}
public:
MessageType build() {return id;}
};

class TO {
private:
MessageType id;
public:
TO() : id() {id.appendMatch8((uint8_t) TOPIC_VAL__TO); }
};

class FROM {
private:
MessageType id;
public:
FROM() : id() {id.appendMatch8((uint8_t) TOPIC_VAL__FROM); }
};

class REQUEST {
private:
MessageType id;
public:
REQUEST() : id() {id.appendMatch8((uint8_t) TOPIC_VAL__REQUEST); }
};

class REPLY {
private:
MessageType id;
public:
REPLY() : id() {id.appendMatch8((uint8_t) TOPIC_VAL__REPLY); }
};


} // namespace loggingmodule_topics

#endif //ZSDN_LOGGINGMODULE_H
