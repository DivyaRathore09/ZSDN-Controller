//
// Autogenerated Code. Changes here will be automatically overwritten.
//
// @author Andre Kutzleb
//

#ifndef ZSDN_EXAMPLEMODULEB_H
#define ZSDN_EXAMPLEMODULEB_H

#include <stdint.h>
#include "zmf/MessageType.hpp"

using namespace zmf::data;

namespace examplemoduleb_topics {

    const uint8_t TOPIC_VAL__TO = 0x01;
    const uint16_t TOPIC_VAL__TO__EXAMPLE_MODULE_B = 0xfff3;
    const uint8_t TOPIC_VAL__FROM = 0x02;
    const uint16_t TOPIC_VAL__FROM__EXAMPLE_MODULE_B = 0xfff3;
    const uint8_t TOPIC_VAL__REQUEST = 0x03;
    const uint16_t TOPIC_VAL__REQUEST__EXAMPLE_MODULE_B = 0xfff3;
    const uint8_t TOPIC_VAL__REQUEST__EXAMPLE_MODULE_B__SOME_REQUEST = 0x00;
    const uint8_t TOPIC_VAL__REPLY = 0x04;
    const uint16_t TOPIC_VAL__REPLY__EXAMPLE_MODULE_B = 0xfff3;
    const uint8_t TOPIC_VAL__REPLY__EXAMPLE_MODULE_B__SOME_REPLY = 0x00;

    class AbstractFactory {
    protected:
        MessageType& id;

        AbstractFactory(MessageType& f) : id(f) { }

    public:
        MessageType build() { return id; }
    };

    class TO {
    private:
        MessageType id;
    public:
        class EXAMPLE_MODULE_B : public AbstractFactory {
        public:
            EXAMPLE_MODULE_B(MessageType& f) : AbstractFactory(f) {
                id.appendMatch16((uint16_t) TOPIC_VAL__TO__EXAMPLE_MODULE_B);
            }
        };

        TO() : id() { id.appendMatch8((uint8_t) TOPIC_VAL__TO); }

        EXAMPLE_MODULE_B example_module_b() { return EXAMPLE_MODULE_B(id); }
    };

    class FROM {
    private:
        MessageType id;
    public:
        class EXAMPLE_MODULE_B : public AbstractFactory {
        public:
            EXAMPLE_MODULE_B(MessageType& f) : AbstractFactory(f) {
                id.appendMatch16((uint16_t) TOPIC_VAL__FROM__EXAMPLE_MODULE_B);
            }
        };

        FROM() : id() { id.appendMatch8((uint8_t) TOPIC_VAL__FROM); }

        EXAMPLE_MODULE_B example_module_b() { return EXAMPLE_MODULE_B(id); }
    };

    class REQUEST {
    private:
        MessageType id;
    public:
        class EXAMPLE_MODULE_B : public AbstractFactory {
        public:
            EXAMPLE_MODULE_B(MessageType& f) : AbstractFactory(f) {
                id.appendMatch16((uint16_t) TOPIC_VAL__REQUEST__EXAMPLE_MODULE_B);
            }

            class SOME_REQUEST : public AbstractFactory {
            public:
                SOME_REQUEST(MessageType& f) : AbstractFactory(f) {
                    id.appendMatch8((uint8_t) TOPIC_VAL__REQUEST__EXAMPLE_MODULE_B__SOME_REQUEST);
                }
            };

            SOME_REQUEST some_request() { return SOME_REQUEST(id); }
        };

        REQUEST() : id() { id.appendMatch8((uint8_t) TOPIC_VAL__REQUEST); }

        EXAMPLE_MODULE_B example_module_b() { return EXAMPLE_MODULE_B(id); }
    };

    class REPLY {
    private:
        MessageType id;
    public:
        class EXAMPLE_MODULE_B : public AbstractFactory {
        public:
            EXAMPLE_MODULE_B(MessageType& f) : AbstractFactory(f) {
                id.appendMatch16((uint16_t) TOPIC_VAL__REPLY__EXAMPLE_MODULE_B);
            }

            class SOME_REPLY : public AbstractFactory {
            public:
                SOME_REPLY(MessageType& f) : AbstractFactory(f) {
                    id.appendMatch8((uint8_t) TOPIC_VAL__REPLY__EXAMPLE_MODULE_B__SOME_REPLY);
                }
            };

            SOME_REPLY some_reply() { return SOME_REPLY(id); }
        };

        REPLY() : id() { id.appendMatch8((uint8_t) TOPIC_VAL__REPLY); }

        EXAMPLE_MODULE_B example_module_b() { return EXAMPLE_MODULE_B(id); }
    };


} // namespace examplemoduleb_topics

#endif //ZSDN_EXAMPLEMODULEB_H
