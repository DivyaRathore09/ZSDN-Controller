// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SwitchAdapter.proto

#ifndef PROTOBUF_SwitchAdapter_2eproto__INCLUDED
#define PROTOBUF_SwitchAdapter_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace SwitchAdapter_Proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SwitchAdapter_2eproto();
void protobuf_AssignDesc_SwitchAdapter_2eproto();
void protobuf_ShutdownFile_SwitchAdapter_2eproto();

class Request;
class Request_HandleOpenflowMessagesRequest;
class Reply;
class Reply_HandleOpenflowMessagesReply;

// ===================================================================

class Request_HandleOpenflowMessagesRequest : public ::google::protobuf::Message {
 public:
  Request_HandleOpenflowMessagesRequest();
  virtual ~Request_HandleOpenflowMessagesRequest();

  Request_HandleOpenflowMessagesRequest(const Request_HandleOpenflowMessagesRequest& from);

  inline Request_HandleOpenflowMessagesRequest& operator=(const Request_HandleOpenflowMessagesRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_HandleOpenflowMessagesRequest& default_instance();

  void Swap(Request_HandleOpenflowMessagesRequest* other);

  // implements Message ----------------------------------------------

  Request_HandleOpenflowMessagesRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request_HandleOpenflowMessagesRequest& from);
  void MergeFrom(const Request_HandleOpenflowMessagesRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes open_flow_message = 1;
  inline int open_flow_message_size() const;
  inline void clear_open_flow_message();
  static const int kOpenFlowMessageFieldNumber = 1;
  inline const ::std::string& open_flow_message(int index) const;
  inline ::std::string* mutable_open_flow_message(int index);
  inline void set_open_flow_message(int index, const ::std::string& value);
  inline void set_open_flow_message(int index, const char* value);
  inline void set_open_flow_message(int index, const void* value, size_t size);
  inline ::std::string* add_open_flow_message();
  inline void add_open_flow_message(const ::std::string& value);
  inline void add_open_flow_message(const char* value);
  inline void add_open_flow_message(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& open_flow_message() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_open_flow_message();

  // @@protoc_insertion_point(class_scope:SwitchAdapter_Proto.Request.HandleOpenflowMessagesRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> open_flow_message_;
  friend void  protobuf_AddDesc_SwitchAdapter_2eproto();
  friend void protobuf_AssignDesc_SwitchAdapter_2eproto();
  friend void protobuf_ShutdownFile_SwitchAdapter_2eproto();

  void InitAsDefaultInstance();
  static Request_HandleOpenflowMessagesRequest* default_instance_;
};
// -------------------------------------------------------------------

class Request : public ::google::protobuf::Message {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  enum RequestMsgCase {
    kHandleOpenflowMessagesRequest = 1,
    REQUESTMSG_NOT_SET = 0,
  };

  void Swap(Request* other);

  // implements Message ----------------------------------------------

  Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Request_HandleOpenflowMessagesRequest HandleOpenflowMessagesRequest;

  // accessors -------------------------------------------------------

  // optional .SwitchAdapter_Proto.Request.HandleOpenflowMessagesRequest handle_openflow_messages_request = 1;
  inline bool has_handle_openflow_messages_request() const;
  inline void clear_handle_openflow_messages_request();
  static const int kHandleOpenflowMessagesRequestFieldNumber = 1;
  inline const ::SwitchAdapter_Proto::Request_HandleOpenflowMessagesRequest& handle_openflow_messages_request() const;
  inline ::SwitchAdapter_Proto::Request_HandleOpenflowMessagesRequest* mutable_handle_openflow_messages_request();
  inline ::SwitchAdapter_Proto::Request_HandleOpenflowMessagesRequest* release_handle_openflow_messages_request();
  inline void set_allocated_handle_openflow_messages_request(::SwitchAdapter_Proto::Request_HandleOpenflowMessagesRequest* handle_openflow_messages_request);

  inline RequestMsgCase RequestMsg_case() const;
  // @@protoc_insertion_point(class_scope:SwitchAdapter_Proto.Request)
 private:
  inline void set_has_handle_openflow_messages_request();

  inline bool has_RequestMsg();
  void clear_RequestMsg();
  inline void clear_has_RequestMsg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  union RequestMsgUnion {
    ::SwitchAdapter_Proto::Request_HandleOpenflowMessagesRequest* handle_openflow_messages_request_;
  } RequestMsg_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_SwitchAdapter_2eproto();
  friend void protobuf_AssignDesc_SwitchAdapter_2eproto();
  friend void protobuf_ShutdownFile_SwitchAdapter_2eproto();

  void InitAsDefaultInstance();
  static Request* default_instance_;
};
// -------------------------------------------------------------------

class Reply_HandleOpenflowMessagesReply : public ::google::protobuf::Message {
 public:
  Reply_HandleOpenflowMessagesReply();
  virtual ~Reply_HandleOpenflowMessagesReply();

  Reply_HandleOpenflowMessagesReply(const Reply_HandleOpenflowMessagesReply& from);

  inline Reply_HandleOpenflowMessagesReply& operator=(const Reply_HandleOpenflowMessagesReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Reply_HandleOpenflowMessagesReply& default_instance();

  void Swap(Reply_HandleOpenflowMessagesReply* other);

  // implements Message ----------------------------------------------

  Reply_HandleOpenflowMessagesReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Reply_HandleOpenflowMessagesReply& from);
  void MergeFrom(const Reply_HandleOpenflowMessagesReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:SwitchAdapter_Proto.Reply.HandleOpenflowMessagesReply)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_SwitchAdapter_2eproto();
  friend void protobuf_AssignDesc_SwitchAdapter_2eproto();
  friend void protobuf_ShutdownFile_SwitchAdapter_2eproto();

  void InitAsDefaultInstance();
  static Reply_HandleOpenflowMessagesReply* default_instance_;
};
// -------------------------------------------------------------------

class Reply : public ::google::protobuf::Message {
 public:
  Reply();
  virtual ~Reply();

  Reply(const Reply& from);

  inline Reply& operator=(const Reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Reply& default_instance();

  enum ReplyMsgCase {
    kHandleOpenflowMessagesReply = 1,
    REPLYMSG_NOT_SET = 0,
  };

  void Swap(Reply* other);

  // implements Message ----------------------------------------------

  Reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Reply& from);
  void MergeFrom(const Reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Reply_HandleOpenflowMessagesReply HandleOpenflowMessagesReply;

  // accessors -------------------------------------------------------

  // optional .SwitchAdapter_Proto.Reply.HandleOpenflowMessagesReply handle_openflow_messages_reply = 1;
  inline bool has_handle_openflow_messages_reply() const;
  inline void clear_handle_openflow_messages_reply();
  static const int kHandleOpenflowMessagesReplyFieldNumber = 1;
  inline const ::SwitchAdapter_Proto::Reply_HandleOpenflowMessagesReply& handle_openflow_messages_reply() const;
  inline ::SwitchAdapter_Proto::Reply_HandleOpenflowMessagesReply* mutable_handle_openflow_messages_reply();
  inline ::SwitchAdapter_Proto::Reply_HandleOpenflowMessagesReply* release_handle_openflow_messages_reply();
  inline void set_allocated_handle_openflow_messages_reply(::SwitchAdapter_Proto::Reply_HandleOpenflowMessagesReply* handle_openflow_messages_reply);

  inline ReplyMsgCase ReplyMsg_case() const;
  // @@protoc_insertion_point(class_scope:SwitchAdapter_Proto.Reply)
 private:
  inline void set_has_handle_openflow_messages_reply();

  inline bool has_ReplyMsg();
  void clear_ReplyMsg();
  inline void clear_has_ReplyMsg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  union ReplyMsgUnion {
    ::SwitchAdapter_Proto::Reply_HandleOpenflowMessagesReply* handle_openflow_messages_reply_;
  } ReplyMsg_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_SwitchAdapter_2eproto();
  friend void protobuf_AssignDesc_SwitchAdapter_2eproto();
  friend void protobuf_ShutdownFile_SwitchAdapter_2eproto();

  void InitAsDefaultInstance();
  static Reply* default_instance_;
};
// ===================================================================


// ===================================================================

// Request_HandleOpenflowMessagesRequest

// repeated bytes open_flow_message = 1;
inline int Request_HandleOpenflowMessagesRequest::open_flow_message_size() const {
  return open_flow_message_.size();
}
inline void Request_HandleOpenflowMessagesRequest::clear_open_flow_message() {
  open_flow_message_.Clear();
}
inline const ::std::string& Request_HandleOpenflowMessagesRequest::open_flow_message(int index) const {
  // @@protoc_insertion_point(field_get:SwitchAdapter_Proto.Request.HandleOpenflowMessagesRequest.open_flow_message)
  return open_flow_message_.Get(index);
}
inline ::std::string* Request_HandleOpenflowMessagesRequest::mutable_open_flow_message(int index) {
  // @@protoc_insertion_point(field_mutable:SwitchAdapter_Proto.Request.HandleOpenflowMessagesRequest.open_flow_message)
  return open_flow_message_.Mutable(index);
}
inline void Request_HandleOpenflowMessagesRequest::set_open_flow_message(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:SwitchAdapter_Proto.Request.HandleOpenflowMessagesRequest.open_flow_message)
  open_flow_message_.Mutable(index)->assign(value);
}
inline void Request_HandleOpenflowMessagesRequest::set_open_flow_message(int index, const char* value) {
  open_flow_message_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:SwitchAdapter_Proto.Request.HandleOpenflowMessagesRequest.open_flow_message)
}
inline void Request_HandleOpenflowMessagesRequest::set_open_flow_message(int index, const void* value, size_t size) {
  open_flow_message_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SwitchAdapter_Proto.Request.HandleOpenflowMessagesRequest.open_flow_message)
}
inline ::std::string* Request_HandleOpenflowMessagesRequest::add_open_flow_message() {
  return open_flow_message_.Add();
}
inline void Request_HandleOpenflowMessagesRequest::add_open_flow_message(const ::std::string& value) {
  open_flow_message_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:SwitchAdapter_Proto.Request.HandleOpenflowMessagesRequest.open_flow_message)
}
inline void Request_HandleOpenflowMessagesRequest::add_open_flow_message(const char* value) {
  open_flow_message_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:SwitchAdapter_Proto.Request.HandleOpenflowMessagesRequest.open_flow_message)
}
inline void Request_HandleOpenflowMessagesRequest::add_open_flow_message(const void* value, size_t size) {
  open_flow_message_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:SwitchAdapter_Proto.Request.HandleOpenflowMessagesRequest.open_flow_message)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Request_HandleOpenflowMessagesRequest::open_flow_message() const {
  // @@protoc_insertion_point(field_list:SwitchAdapter_Proto.Request.HandleOpenflowMessagesRequest.open_flow_message)
  return open_flow_message_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Request_HandleOpenflowMessagesRequest::mutable_open_flow_message() {
  // @@protoc_insertion_point(field_mutable_list:SwitchAdapter_Proto.Request.HandleOpenflowMessagesRequest.open_flow_message)
  return &open_flow_message_;
}

// -------------------------------------------------------------------

// Request

// optional .SwitchAdapter_Proto.Request.HandleOpenflowMessagesRequest handle_openflow_messages_request = 1;
inline bool Request::has_handle_openflow_messages_request() const {
  return RequestMsg_case() == kHandleOpenflowMessagesRequest;
}
inline void Request::set_has_handle_openflow_messages_request() {
  _oneof_case_[0] = kHandleOpenflowMessagesRequest;
}
inline void Request::clear_handle_openflow_messages_request() {
  if (has_handle_openflow_messages_request()) {
    delete RequestMsg_.handle_openflow_messages_request_;
    clear_has_RequestMsg();
  }
}
inline const ::SwitchAdapter_Proto::Request_HandleOpenflowMessagesRequest& Request::handle_openflow_messages_request() const {
  return has_handle_openflow_messages_request() ? *RequestMsg_.handle_openflow_messages_request_
                      : ::SwitchAdapter_Proto::Request_HandleOpenflowMessagesRequest::default_instance();
}
inline ::SwitchAdapter_Proto::Request_HandleOpenflowMessagesRequest* Request::mutable_handle_openflow_messages_request() {
  if (!has_handle_openflow_messages_request()) {
    clear_RequestMsg();
    set_has_handle_openflow_messages_request();
    RequestMsg_.handle_openflow_messages_request_ = new ::SwitchAdapter_Proto::Request_HandleOpenflowMessagesRequest;
  }
  return RequestMsg_.handle_openflow_messages_request_;
}
inline ::SwitchAdapter_Proto::Request_HandleOpenflowMessagesRequest* Request::release_handle_openflow_messages_request() {
  if (has_handle_openflow_messages_request()) {
    clear_has_RequestMsg();
    ::SwitchAdapter_Proto::Request_HandleOpenflowMessagesRequest* temp = RequestMsg_.handle_openflow_messages_request_;
    RequestMsg_.handle_openflow_messages_request_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Request::set_allocated_handle_openflow_messages_request(::SwitchAdapter_Proto::Request_HandleOpenflowMessagesRequest* handle_openflow_messages_request) {
  clear_RequestMsg();
  if (handle_openflow_messages_request) {
    set_has_handle_openflow_messages_request();
    RequestMsg_.handle_openflow_messages_request_ = handle_openflow_messages_request;
  }
}

inline bool Request::has_RequestMsg() {
  return RequestMsg_case() != REQUESTMSG_NOT_SET;
}
inline void Request::clear_has_RequestMsg() {
  _oneof_case_[0] = REQUESTMSG_NOT_SET;
}
inline Request::RequestMsgCase Request::RequestMsg_case() const {
  return Request::RequestMsgCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Reply_HandleOpenflowMessagesReply

// -------------------------------------------------------------------

// Reply

// optional .SwitchAdapter_Proto.Reply.HandleOpenflowMessagesReply handle_openflow_messages_reply = 1;
inline bool Reply::has_handle_openflow_messages_reply() const {
  return ReplyMsg_case() == kHandleOpenflowMessagesReply;
}
inline void Reply::set_has_handle_openflow_messages_reply() {
  _oneof_case_[0] = kHandleOpenflowMessagesReply;
}
inline void Reply::clear_handle_openflow_messages_reply() {
  if (has_handle_openflow_messages_reply()) {
    delete ReplyMsg_.handle_openflow_messages_reply_;
    clear_has_ReplyMsg();
  }
}
inline const ::SwitchAdapter_Proto::Reply_HandleOpenflowMessagesReply& Reply::handle_openflow_messages_reply() const {
  return has_handle_openflow_messages_reply() ? *ReplyMsg_.handle_openflow_messages_reply_
                      : ::SwitchAdapter_Proto::Reply_HandleOpenflowMessagesReply::default_instance();
}
inline ::SwitchAdapter_Proto::Reply_HandleOpenflowMessagesReply* Reply::mutable_handle_openflow_messages_reply() {
  if (!has_handle_openflow_messages_reply()) {
    clear_ReplyMsg();
    set_has_handle_openflow_messages_reply();
    ReplyMsg_.handle_openflow_messages_reply_ = new ::SwitchAdapter_Proto::Reply_HandleOpenflowMessagesReply;
  }
  return ReplyMsg_.handle_openflow_messages_reply_;
}
inline ::SwitchAdapter_Proto::Reply_HandleOpenflowMessagesReply* Reply::release_handle_openflow_messages_reply() {
  if (has_handle_openflow_messages_reply()) {
    clear_has_ReplyMsg();
    ::SwitchAdapter_Proto::Reply_HandleOpenflowMessagesReply* temp = ReplyMsg_.handle_openflow_messages_reply_;
    ReplyMsg_.handle_openflow_messages_reply_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Reply::set_allocated_handle_openflow_messages_reply(::SwitchAdapter_Proto::Reply_HandleOpenflowMessagesReply* handle_openflow_messages_reply) {
  clear_ReplyMsg();
  if (handle_openflow_messages_reply) {
    set_has_handle_openflow_messages_reply();
    ReplyMsg_.handle_openflow_messages_reply_ = handle_openflow_messages_reply;
  }
}

inline bool Reply::has_ReplyMsg() {
  return ReplyMsg_case() != REPLYMSG_NOT_SET;
}
inline void Reply::clear_has_ReplyMsg() {
  _oneof_case_[0] = REPLYMSG_NOT_SET;
}
inline Reply::ReplyMsgCase Reply::ReplyMsg_case() const {
  return Reply::ReplyMsgCase(_oneof_case_[0]);
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace SwitchAdapter_Proto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SwitchAdapter_2eproto__INCLUDED
