// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: StatisticsModule.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "StatisticsModule.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace StatisticsModule_Proto {

namespace {

const ::google::protobuf::Descriptor* To_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  To_reflection_ = NULL;
struct ToOneofInstance {
  const ::StatisticsModule_Proto::FooBar* foo_;
}* To_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* From_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  From_reflection_ = NULL;
struct FromOneofInstance {
  const ::StatisticsModule_Proto::From_SwitchStats* stats_;
}* From_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* From_SwitchStats_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  From_SwitchStats_reflection_ = NULL;
const ::google::protobuf::Descriptor* From_PortStatslist_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  From_PortStatslist_reflection_ = NULL;
const ::google::protobuf::Descriptor* From_TableStatslist_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  From_TableStatslist_reflection_ = NULL;
const ::google::protobuf::Descriptor* From_SinglePortStatistics_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  From_SinglePortStatistics_reflection_ = NULL;
const ::google::protobuf::Descriptor* From_SingleTableStatistics_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  From_SingleTableStatistics_reflection_ = NULL;
const ::google::protobuf::Descriptor* FooBar_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FooBar_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_StatisticsModule_2eproto() {
  protobuf_AddDesc_StatisticsModule_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "StatisticsModule.proto");
  GOOGLE_CHECK(file != NULL);
  To_descriptor_ = file->message_type(0);
  static const int To_offsets_[2] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(To_default_oneof_instance_, foo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(To, ToMsg_),
  };
  To_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      To_descriptor_,
      To::default_instance_,
      To_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(To, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(To, _unknown_fields_),
      -1,
      To_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(To, _oneof_case_[0]),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(To));
  From_descriptor_ = file->message_type(1);
  static const int From_offsets_[2] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(From_default_oneof_instance_, stats_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(From, FromMsg_),
  };
  From_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      From_descriptor_,
      From::default_instance_,
      From_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(From, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(From, _unknown_fields_),
      -1,
      From_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(From, _oneof_case_[0]),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(From));
  From_SwitchStats_descriptor_ = From_descriptor_->nested_type(0);
  static const int From_SwitchStats_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(From_SwitchStats, uniqueid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(From_SwitchStats, portstats_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(From_SwitchStats, tablestats_),
  };
  From_SwitchStats_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      From_SwitchStats_descriptor_,
      From_SwitchStats::default_instance_,
      From_SwitchStats_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(From_SwitchStats, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(From_SwitchStats, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(From_SwitchStats));
  From_PortStatslist_descriptor_ = From_descriptor_->nested_type(1);
  static const int From_PortStatslist_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(From_PortStatslist, portstats_),
  };
  From_PortStatslist_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      From_PortStatslist_descriptor_,
      From_PortStatslist::default_instance_,
      From_PortStatslist_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(From_PortStatslist, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(From_PortStatslist, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(From_PortStatslist));
  From_TableStatslist_descriptor_ = From_descriptor_->nested_type(2);
  static const int From_TableStatslist_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(From_TableStatslist, tablestats_),
  };
  From_TableStatslist_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      From_TableStatslist_descriptor_,
      From_TableStatslist::default_instance_,
      From_TableStatslist_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(From_TableStatslist, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(From_TableStatslist, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(From_TableStatslist));
  From_SinglePortStatistics_descriptor_ = From_descriptor_->nested_type(3);
  static const int From_SinglePortStatistics_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(From_SinglePortStatistics, portnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(From_SinglePortStatistics, numberofpackagesreceived_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(From_SinglePortStatistics, numberofpackagessent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(From_SinglePortStatistics, numberofpackagesdropedbyreceiver_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(From_SinglePortStatistics, numberofpackagesdropedbysender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(From_SinglePortStatistics, numberofcollisions_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(From_SinglePortStatistics, numberoferrorsfromsender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(From_SinglePortStatistics, numberoferrorsfromreceiver_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(From_SinglePortStatistics, numberofbytesreceived_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(From_SinglePortStatistics, numberofbytessent_),
  };
  From_SinglePortStatistics_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      From_SinglePortStatistics_descriptor_,
      From_SinglePortStatistics::default_instance_,
      From_SinglePortStatistics_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(From_SinglePortStatistics, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(From_SinglePortStatistics, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(From_SinglePortStatistics));
  From_SingleTableStatistics_descriptor_ = From_descriptor_->nested_type(4);
  static const int From_SingleTableStatistics_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(From_SingleTableStatistics, tableid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(From_SingleTableStatistics, activeentries_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(From_SingleTableStatistics, packageslookedup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(From_SingleTableStatistics, packageshittingthetable_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(From_SingleTableStatistics, maxentries_),
  };
  From_SingleTableStatistics_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      From_SingleTableStatistics_descriptor_,
      From_SingleTableStatistics::default_instance_,
      From_SingleTableStatistics_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(From_SingleTableStatistics, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(From_SingleTableStatistics, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(From_SingleTableStatistics));
  FooBar_descriptor_ = file->message_type(2);
  static const int FooBar_offsets_[1] = {
  };
  FooBar_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FooBar_descriptor_,
      FooBar::default_instance_,
      FooBar_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FooBar, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FooBar, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FooBar));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_StatisticsModule_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    To_descriptor_, &To::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    From_descriptor_, &From::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    From_SwitchStats_descriptor_, &From_SwitchStats::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    From_PortStatslist_descriptor_, &From_PortStatslist::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    From_TableStatslist_descriptor_, &From_TableStatslist::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    From_SinglePortStatistics_descriptor_, &From_SinglePortStatistics::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    From_SingleTableStatistics_descriptor_, &From_SingleTableStatistics::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FooBar_descriptor_, &FooBar::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_StatisticsModule_2eproto() {
  delete To::default_instance_;
  delete To_default_oneof_instance_;
  delete To_reflection_;
  delete From::default_instance_;
  delete From_default_oneof_instance_;
  delete From_reflection_;
  delete From_SwitchStats::default_instance_;
  delete From_SwitchStats_reflection_;
  delete From_PortStatslist::default_instance_;
  delete From_PortStatslist_reflection_;
  delete From_TableStatslist::default_instance_;
  delete From_TableStatslist_reflection_;
  delete From_SinglePortStatistics::default_instance_;
  delete From_SinglePortStatistics_reflection_;
  delete From_SingleTableStatistics::default_instance_;
  delete From_SingleTableStatistics_reflection_;
  delete FooBar::default_instance_;
  delete FooBar_reflection_;
}

void protobuf_AddDesc_StatisticsModule_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026StatisticsModule.proto\022\026StatisticsModu"
    "le_Proto\"<\n\002To\022-\n\003foo\030\001 \001(\0132\036.Statistics"
    "Module_Proto.FooBarH\000B\007\n\005ToMsg\"\213\007\n\004From\022"
    "9\n\005stats\030\001 \001(\0132(.StatisticsModule_Proto."
    "From.SwitchStatsH\000\032\237\001\n\013SwitchStats\022\020\n\010un"
    "iqueID\030\001 \002(\004\022=\n\tportStats\030\002 \001(\0132*.Statis"
    "ticsModule_Proto.From.PortStatslist\022\?\n\nt"
    "ableStats\030\003 \001(\0132+.StatisticsModule_Proto"
    ".From.TableStatslist\032U\n\rPortStatslist\022D\n"
    "\tportStats\030\001 \003(\01321.StatisticsModule_Prot"
    "o.From.SinglePortStatistics\032X\n\016TableStat"
    "slist\022F\n\ntableStats\030\001 \003(\01322.StatisticsMo"
    "dule_Proto.From.SingleTableStatistics\032\330\002"
    "\n\024SinglePortStatistics\022\022\n\nportNumber\030\001 \002"
    "(\r\022 \n\030numberOfPackagesReceived\030\002 \001(\004\022\034\n\024"
    "numberOfPackagesSent\030\003 \001(\004\022(\n numberOfPa"
    "ckagesDropedByReceiver\030\004 \001(\004\022&\n\036numberOf"
    "PackagesDropedBySender\030\005 \001(\004\022\032\n\022numberOf"
    "Collisions\030\006 \001(\004\022 \n\030numberOfErrorsFromSe"
    "nder\030\007 \001(\004\022\"\n\032numberOfErrorsFromReceiver"
    "\030\010 \001(\004\022\035\n\025numberOfBytesReceived\030\t \001(\004\022\031\n"
    "\021numberOfBytesSent\030\n \001(\004\032\216\001\n\025SingleTable"
    "Statistics\022\017\n\007tableID\030\001 \002(\r\022\025\n\ractiveEnt"
    "ries\030\002 \001(\r\022\030\n\020PackagesLookedUp\030\003 \001(\004\022\037\n\027"
    "PackagesHittingTheTable\030\004 \001(\004\022\022\n\nmaxEntr"
    "ies\030\005 \001(\rB\t\n\007FromMsg\"\010\n\006FooBarB)\n\rzsdn.p"
    "rotocolB\030StatisticsModuleProtocol", 1073);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "StatisticsModule.proto", &protobuf_RegisterTypes);
  To::default_instance_ = new To();
  To_default_oneof_instance_ = new ToOneofInstance;
  From::default_instance_ = new From();
  From_default_oneof_instance_ = new FromOneofInstance;
  From_SwitchStats::default_instance_ = new From_SwitchStats();
  From_PortStatslist::default_instance_ = new From_PortStatslist();
  From_TableStatslist::default_instance_ = new From_TableStatslist();
  From_SinglePortStatistics::default_instance_ = new From_SinglePortStatistics();
  From_SingleTableStatistics::default_instance_ = new From_SingleTableStatistics();
  FooBar::default_instance_ = new FooBar();
  To::default_instance_->InitAsDefaultInstance();
  From::default_instance_->InitAsDefaultInstance();
  From_SwitchStats::default_instance_->InitAsDefaultInstance();
  From_PortStatslist::default_instance_->InitAsDefaultInstance();
  From_TableStatslist::default_instance_->InitAsDefaultInstance();
  From_SinglePortStatistics::default_instance_->InitAsDefaultInstance();
  From_SingleTableStatistics::default_instance_->InitAsDefaultInstance();
  FooBar::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_StatisticsModule_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_StatisticsModule_2eproto {
  StaticDescriptorInitializer_StatisticsModule_2eproto() {
    protobuf_AddDesc_StatisticsModule_2eproto();
  }
} static_descriptor_initializer_StatisticsModule_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int To::kFooFieldNumber;
#endif  // !_MSC_VER

To::To()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:StatisticsModule_Proto.To)
}

void To::InitAsDefaultInstance() {
  To_default_oneof_instance_->foo_ = const_cast< ::StatisticsModule_Proto::FooBar*>(&::StatisticsModule_Proto::FooBar::default_instance());
}

To::To(const To& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:StatisticsModule_Proto.To)
}

void To::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  clear_has_ToMsg();
}

To::~To() {
  // @@protoc_insertion_point(destructor:StatisticsModule_Proto.To)
  SharedDtor();
}

void To::SharedDtor() {
  if (has_ToMsg()) {
    clear_ToMsg();
  }
  if (this != default_instance_) {
  }
}

void To::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* To::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return To_descriptor_;
}

const To& To::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_StatisticsModule_2eproto();
  return *default_instance_;
}

To* To::default_instance_ = NULL;

To* To::New() const {
  return new To;
}

void To::clear_ToMsg() {
  switch(ToMsg_case()) {
    case kFoo: {
      delete ToMsg_.foo_;
      break;
    }
    case TOMSG_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TOMSG_NOT_SET;
}


void To::Clear() {
  clear_ToMsg();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool To::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StatisticsModule_Proto.To)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .StatisticsModule_Proto.FooBar foo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_foo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StatisticsModule_Proto.To)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StatisticsModule_Proto.To)
  return false;
#undef DO_
}

void To::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StatisticsModule_Proto.To)
  // optional .StatisticsModule_Proto.FooBar foo = 1;
  if (has_foo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->foo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:StatisticsModule_Proto.To)
}

::google::protobuf::uint8* To::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:StatisticsModule_Proto.To)
  // optional .StatisticsModule_Proto.FooBar foo = 1;
  if (has_foo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->foo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StatisticsModule_Proto.To)
  return target;
}

int To::ByteSize() const {
  int total_size = 0;

  switch (ToMsg_case()) {
    // optional .StatisticsModule_Proto.FooBar foo = 1;
    case kFoo: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->foo());
      break;
    }
    case TOMSG_NOT_SET: {
      break;
    }
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void To::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const To* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const To*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void To::MergeFrom(const To& from) {
  GOOGLE_CHECK_NE(&from, this);
  switch (from.ToMsg_case()) {
    case kFoo: {
      mutable_foo()->::StatisticsModule_Proto::FooBar::MergeFrom(from.foo());
      break;
    }
    case TOMSG_NOT_SET: {
      break;
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void To::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void To::CopyFrom(const To& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool To::IsInitialized() const {

  return true;
}

void To::Swap(To* other) {
  if (other != this) {
    std::swap(ToMsg_, other->ToMsg_);
    std::swap(_oneof_case_[0], other->_oneof_case_[0]);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata To::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = To_descriptor_;
  metadata.reflection = To_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int From_SwitchStats::kUniqueIDFieldNumber;
const int From_SwitchStats::kPortStatsFieldNumber;
const int From_SwitchStats::kTableStatsFieldNumber;
#endif  // !_MSC_VER

From_SwitchStats::From_SwitchStats()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:StatisticsModule_Proto.From.SwitchStats)
}

void From_SwitchStats::InitAsDefaultInstance() {
  portstats_ = const_cast< ::StatisticsModule_Proto::From_PortStatslist*>(&::StatisticsModule_Proto::From_PortStatslist::default_instance());
  tablestats_ = const_cast< ::StatisticsModule_Proto::From_TableStatslist*>(&::StatisticsModule_Proto::From_TableStatslist::default_instance());
}

From_SwitchStats::From_SwitchStats(const From_SwitchStats& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:StatisticsModule_Proto.From.SwitchStats)
}

void From_SwitchStats::SharedCtor() {
  _cached_size_ = 0;
  uniqueid_ = GOOGLE_ULONGLONG(0);
  portstats_ = NULL;
  tablestats_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

From_SwitchStats::~From_SwitchStats() {
  // @@protoc_insertion_point(destructor:StatisticsModule_Proto.From.SwitchStats)
  SharedDtor();
}

void From_SwitchStats::SharedDtor() {
  if (this != default_instance_) {
    delete portstats_;
    delete tablestats_;
  }
}

void From_SwitchStats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* From_SwitchStats::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return From_SwitchStats_descriptor_;
}

const From_SwitchStats& From_SwitchStats::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_StatisticsModule_2eproto();
  return *default_instance_;
}

From_SwitchStats* From_SwitchStats::default_instance_ = NULL;

From_SwitchStats* From_SwitchStats::New() const {
  return new From_SwitchStats;
}

void From_SwitchStats::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    uniqueid_ = GOOGLE_ULONGLONG(0);
    if (has_portstats()) {
      if (portstats_ != NULL) portstats_->::StatisticsModule_Proto::From_PortStatslist::Clear();
    }
    if (has_tablestats()) {
      if (tablestats_ != NULL) tablestats_->::StatisticsModule_Proto::From_TableStatslist::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool From_SwitchStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StatisticsModule_Proto.From.SwitchStats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 uniqueID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uniqueid_)));
          set_has_uniqueid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_portStats;
        break;
      }

      // optional .StatisticsModule_Proto.From.PortStatslist portStats = 2;
      case 2: {
        if (tag == 18) {
         parse_portStats:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_portstats()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_tableStats;
        break;
      }

      // optional .StatisticsModule_Proto.From.TableStatslist tableStats = 3;
      case 3: {
        if (tag == 26) {
         parse_tableStats:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tablestats()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StatisticsModule_Proto.From.SwitchStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StatisticsModule_Proto.From.SwitchStats)
  return false;
#undef DO_
}

void From_SwitchStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StatisticsModule_Proto.From.SwitchStats)
  // required uint64 uniqueID = 1;
  if (has_uniqueid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->uniqueid(), output);
  }

  // optional .StatisticsModule_Proto.From.PortStatslist portStats = 2;
  if (has_portstats()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->portstats(), output);
  }

  // optional .StatisticsModule_Proto.From.TableStatslist tableStats = 3;
  if (has_tablestats()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->tablestats(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:StatisticsModule_Proto.From.SwitchStats)
}

::google::protobuf::uint8* From_SwitchStats::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:StatisticsModule_Proto.From.SwitchStats)
  // required uint64 uniqueID = 1;
  if (has_uniqueid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->uniqueid(), target);
  }

  // optional .StatisticsModule_Proto.From.PortStatslist portStats = 2;
  if (has_portstats()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->portstats(), target);
  }

  // optional .StatisticsModule_Proto.From.TableStatslist tableStats = 3;
  if (has_tablestats()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->tablestats(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StatisticsModule_Proto.From.SwitchStats)
  return target;
}

int From_SwitchStats::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 uniqueID = 1;
    if (has_uniqueid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uniqueid());
    }

    // optional .StatisticsModule_Proto.From.PortStatslist portStats = 2;
    if (has_portstats()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->portstats());
    }

    // optional .StatisticsModule_Proto.From.TableStatslist tableStats = 3;
    if (has_tablestats()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tablestats());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void From_SwitchStats::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const From_SwitchStats* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const From_SwitchStats*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void From_SwitchStats::MergeFrom(const From_SwitchStats& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uniqueid()) {
      set_uniqueid(from.uniqueid());
    }
    if (from.has_portstats()) {
      mutable_portstats()->::StatisticsModule_Proto::From_PortStatslist::MergeFrom(from.portstats());
    }
    if (from.has_tablestats()) {
      mutable_tablestats()->::StatisticsModule_Proto::From_TableStatslist::MergeFrom(from.tablestats());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void From_SwitchStats::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void From_SwitchStats::CopyFrom(const From_SwitchStats& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool From_SwitchStats::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_portstats()) {
    if (!this->portstats().IsInitialized()) return false;
  }
  if (has_tablestats()) {
    if (!this->tablestats().IsInitialized()) return false;
  }
  return true;
}

void From_SwitchStats::Swap(From_SwitchStats* other) {
  if (other != this) {
    std::swap(uniqueid_, other->uniqueid_);
    std::swap(portstats_, other->portstats_);
    std::swap(tablestats_, other->tablestats_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata From_SwitchStats::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = From_SwitchStats_descriptor_;
  metadata.reflection = From_SwitchStats_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int From_PortStatslist::kPortStatsFieldNumber;
#endif  // !_MSC_VER

From_PortStatslist::From_PortStatslist()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:StatisticsModule_Proto.From.PortStatslist)
}

void From_PortStatslist::InitAsDefaultInstance() {
}

From_PortStatslist::From_PortStatslist(const From_PortStatslist& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:StatisticsModule_Proto.From.PortStatslist)
}

void From_PortStatslist::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

From_PortStatslist::~From_PortStatslist() {
  // @@protoc_insertion_point(destructor:StatisticsModule_Proto.From.PortStatslist)
  SharedDtor();
}

void From_PortStatslist::SharedDtor() {
  if (this != default_instance_) {
  }
}

void From_PortStatslist::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* From_PortStatslist::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return From_PortStatslist_descriptor_;
}

const From_PortStatslist& From_PortStatslist::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_StatisticsModule_2eproto();
  return *default_instance_;
}

From_PortStatslist* From_PortStatslist::default_instance_ = NULL;

From_PortStatslist* From_PortStatslist::New() const {
  return new From_PortStatslist;
}

void From_PortStatslist::Clear() {
  portstats_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool From_PortStatslist::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StatisticsModule_Proto.From.PortStatslist)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .StatisticsModule_Proto.From.SinglePortStatistics portStats = 1;
      case 1: {
        if (tag == 10) {
         parse_portStats:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_portstats()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_portStats;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StatisticsModule_Proto.From.PortStatslist)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StatisticsModule_Proto.From.PortStatslist)
  return false;
#undef DO_
}

void From_PortStatslist::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StatisticsModule_Proto.From.PortStatslist)
  // repeated .StatisticsModule_Proto.From.SinglePortStatistics portStats = 1;
  for (int i = 0; i < this->portstats_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->portstats(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:StatisticsModule_Proto.From.PortStatslist)
}

::google::protobuf::uint8* From_PortStatslist::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:StatisticsModule_Proto.From.PortStatslist)
  // repeated .StatisticsModule_Proto.From.SinglePortStatistics portStats = 1;
  for (int i = 0; i < this->portstats_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->portstats(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StatisticsModule_Proto.From.PortStatslist)
  return target;
}

int From_PortStatslist::ByteSize() const {
  int total_size = 0;

  // repeated .StatisticsModule_Proto.From.SinglePortStatistics portStats = 1;
  total_size += 1 * this->portstats_size();
  for (int i = 0; i < this->portstats_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->portstats(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void From_PortStatslist::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const From_PortStatslist* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const From_PortStatslist*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void From_PortStatslist::MergeFrom(const From_PortStatslist& from) {
  GOOGLE_CHECK_NE(&from, this);
  portstats_.MergeFrom(from.portstats_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void From_PortStatslist::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void From_PortStatslist::CopyFrom(const From_PortStatslist& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool From_PortStatslist::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->portstats())) return false;
  return true;
}

void From_PortStatslist::Swap(From_PortStatslist* other) {
  if (other != this) {
    portstats_.Swap(&other->portstats_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata From_PortStatslist::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = From_PortStatslist_descriptor_;
  metadata.reflection = From_PortStatslist_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int From_TableStatslist::kTableStatsFieldNumber;
#endif  // !_MSC_VER

From_TableStatslist::From_TableStatslist()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:StatisticsModule_Proto.From.TableStatslist)
}

void From_TableStatslist::InitAsDefaultInstance() {
}

From_TableStatslist::From_TableStatslist(const From_TableStatslist& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:StatisticsModule_Proto.From.TableStatslist)
}

void From_TableStatslist::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

From_TableStatslist::~From_TableStatslist() {
  // @@protoc_insertion_point(destructor:StatisticsModule_Proto.From.TableStatslist)
  SharedDtor();
}

void From_TableStatslist::SharedDtor() {
  if (this != default_instance_) {
  }
}

void From_TableStatslist::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* From_TableStatslist::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return From_TableStatslist_descriptor_;
}

const From_TableStatslist& From_TableStatslist::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_StatisticsModule_2eproto();
  return *default_instance_;
}

From_TableStatslist* From_TableStatslist::default_instance_ = NULL;

From_TableStatslist* From_TableStatslist::New() const {
  return new From_TableStatslist;
}

void From_TableStatslist::Clear() {
  tablestats_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool From_TableStatslist::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StatisticsModule_Proto.From.TableStatslist)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .StatisticsModule_Proto.From.SingleTableStatistics tableStats = 1;
      case 1: {
        if (tag == 10) {
         parse_tableStats:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tablestats()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_tableStats;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StatisticsModule_Proto.From.TableStatslist)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StatisticsModule_Proto.From.TableStatslist)
  return false;
#undef DO_
}

void From_TableStatslist::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StatisticsModule_Proto.From.TableStatslist)
  // repeated .StatisticsModule_Proto.From.SingleTableStatistics tableStats = 1;
  for (int i = 0; i < this->tablestats_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->tablestats(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:StatisticsModule_Proto.From.TableStatslist)
}

::google::protobuf::uint8* From_TableStatslist::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:StatisticsModule_Proto.From.TableStatslist)
  // repeated .StatisticsModule_Proto.From.SingleTableStatistics tableStats = 1;
  for (int i = 0; i < this->tablestats_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->tablestats(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StatisticsModule_Proto.From.TableStatslist)
  return target;
}

int From_TableStatslist::ByteSize() const {
  int total_size = 0;

  // repeated .StatisticsModule_Proto.From.SingleTableStatistics tableStats = 1;
  total_size += 1 * this->tablestats_size();
  for (int i = 0; i < this->tablestats_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tablestats(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void From_TableStatslist::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const From_TableStatslist* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const From_TableStatslist*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void From_TableStatslist::MergeFrom(const From_TableStatslist& from) {
  GOOGLE_CHECK_NE(&from, this);
  tablestats_.MergeFrom(from.tablestats_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void From_TableStatslist::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void From_TableStatslist::CopyFrom(const From_TableStatslist& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool From_TableStatslist::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->tablestats())) return false;
  return true;
}

void From_TableStatslist::Swap(From_TableStatslist* other) {
  if (other != this) {
    tablestats_.Swap(&other->tablestats_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata From_TableStatslist::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = From_TableStatslist_descriptor_;
  metadata.reflection = From_TableStatslist_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int From_SinglePortStatistics::kPortNumberFieldNumber;
const int From_SinglePortStatistics::kNumberOfPackagesReceivedFieldNumber;
const int From_SinglePortStatistics::kNumberOfPackagesSentFieldNumber;
const int From_SinglePortStatistics::kNumberOfPackagesDropedByReceiverFieldNumber;
const int From_SinglePortStatistics::kNumberOfPackagesDropedBySenderFieldNumber;
const int From_SinglePortStatistics::kNumberOfCollisionsFieldNumber;
const int From_SinglePortStatistics::kNumberOfErrorsFromSenderFieldNumber;
const int From_SinglePortStatistics::kNumberOfErrorsFromReceiverFieldNumber;
const int From_SinglePortStatistics::kNumberOfBytesReceivedFieldNumber;
const int From_SinglePortStatistics::kNumberOfBytesSentFieldNumber;
#endif  // !_MSC_VER

From_SinglePortStatistics::From_SinglePortStatistics()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:StatisticsModule_Proto.From.SinglePortStatistics)
}

void From_SinglePortStatistics::InitAsDefaultInstance() {
}

From_SinglePortStatistics::From_SinglePortStatistics(const From_SinglePortStatistics& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:StatisticsModule_Proto.From.SinglePortStatistics)
}

void From_SinglePortStatistics::SharedCtor() {
  _cached_size_ = 0;
  portnumber_ = 0u;
  numberofpackagesreceived_ = GOOGLE_ULONGLONG(0);
  numberofpackagessent_ = GOOGLE_ULONGLONG(0);
  numberofpackagesdropedbyreceiver_ = GOOGLE_ULONGLONG(0);
  numberofpackagesdropedbysender_ = GOOGLE_ULONGLONG(0);
  numberofcollisions_ = GOOGLE_ULONGLONG(0);
  numberoferrorsfromsender_ = GOOGLE_ULONGLONG(0);
  numberoferrorsfromreceiver_ = GOOGLE_ULONGLONG(0);
  numberofbytesreceived_ = GOOGLE_ULONGLONG(0);
  numberofbytessent_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

From_SinglePortStatistics::~From_SinglePortStatistics() {
  // @@protoc_insertion_point(destructor:StatisticsModule_Proto.From.SinglePortStatistics)
  SharedDtor();
}

void From_SinglePortStatistics::SharedDtor() {
  if (this != default_instance_) {
  }
}

void From_SinglePortStatistics::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* From_SinglePortStatistics::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return From_SinglePortStatistics_descriptor_;
}

const From_SinglePortStatistics& From_SinglePortStatistics::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_StatisticsModule_2eproto();
  return *default_instance_;
}

From_SinglePortStatistics* From_SinglePortStatistics::default_instance_ = NULL;

From_SinglePortStatistics* From_SinglePortStatistics::New() const {
  return new From_SinglePortStatistics;
}

void From_SinglePortStatistics::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<From_SinglePortStatistics*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(numberofpackagesreceived_, numberoferrorsfromreceiver_);
    portnumber_ = 0u;
  }
  ZR_(numberofbytesreceived_, numberofbytessent_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool From_SinglePortStatistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StatisticsModule_Proto.From.SinglePortStatistics)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 portNumber = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &portnumber_)));
          set_has_portnumber();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_numberOfPackagesReceived;
        break;
      }

      // optional uint64 numberOfPackagesReceived = 2;
      case 2: {
        if (tag == 16) {
         parse_numberOfPackagesReceived:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &numberofpackagesreceived_)));
          set_has_numberofpackagesreceived();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_numberOfPackagesSent;
        break;
      }

      // optional uint64 numberOfPackagesSent = 3;
      case 3: {
        if (tag == 24) {
         parse_numberOfPackagesSent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &numberofpackagessent_)));
          set_has_numberofpackagessent();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_numberOfPackagesDropedByReceiver;
        break;
      }

      // optional uint64 numberOfPackagesDropedByReceiver = 4;
      case 4: {
        if (tag == 32) {
         parse_numberOfPackagesDropedByReceiver:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &numberofpackagesdropedbyreceiver_)));
          set_has_numberofpackagesdropedbyreceiver();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_numberOfPackagesDropedBySender;
        break;
      }

      // optional uint64 numberOfPackagesDropedBySender = 5;
      case 5: {
        if (tag == 40) {
         parse_numberOfPackagesDropedBySender:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &numberofpackagesdropedbysender_)));
          set_has_numberofpackagesdropedbysender();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_numberOfCollisions;
        break;
      }

      // optional uint64 numberOfCollisions = 6;
      case 6: {
        if (tag == 48) {
         parse_numberOfCollisions:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &numberofcollisions_)));
          set_has_numberofcollisions();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_numberOfErrorsFromSender;
        break;
      }

      // optional uint64 numberOfErrorsFromSender = 7;
      case 7: {
        if (tag == 56) {
         parse_numberOfErrorsFromSender:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &numberoferrorsfromsender_)));
          set_has_numberoferrorsfromsender();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_numberOfErrorsFromReceiver;
        break;
      }

      // optional uint64 numberOfErrorsFromReceiver = 8;
      case 8: {
        if (tag == 64) {
         parse_numberOfErrorsFromReceiver:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &numberoferrorsfromreceiver_)));
          set_has_numberoferrorsfromreceiver();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_numberOfBytesReceived;
        break;
      }

      // optional uint64 numberOfBytesReceived = 9;
      case 9: {
        if (tag == 72) {
         parse_numberOfBytesReceived:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &numberofbytesreceived_)));
          set_has_numberofbytesreceived();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_numberOfBytesSent;
        break;
      }

      // optional uint64 numberOfBytesSent = 10;
      case 10: {
        if (tag == 80) {
         parse_numberOfBytesSent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &numberofbytessent_)));
          set_has_numberofbytessent();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StatisticsModule_Proto.From.SinglePortStatistics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StatisticsModule_Proto.From.SinglePortStatistics)
  return false;
#undef DO_
}

void From_SinglePortStatistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StatisticsModule_Proto.From.SinglePortStatistics)
  // required uint32 portNumber = 1;
  if (has_portnumber()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->portnumber(), output);
  }

  // optional uint64 numberOfPackagesReceived = 2;
  if (has_numberofpackagesreceived()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->numberofpackagesreceived(), output);
  }

  // optional uint64 numberOfPackagesSent = 3;
  if (has_numberofpackagessent()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->numberofpackagessent(), output);
  }

  // optional uint64 numberOfPackagesDropedByReceiver = 4;
  if (has_numberofpackagesdropedbyreceiver()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->numberofpackagesdropedbyreceiver(), output);
  }

  // optional uint64 numberOfPackagesDropedBySender = 5;
  if (has_numberofpackagesdropedbysender()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->numberofpackagesdropedbysender(), output);
  }

  // optional uint64 numberOfCollisions = 6;
  if (has_numberofcollisions()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->numberofcollisions(), output);
  }

  // optional uint64 numberOfErrorsFromSender = 7;
  if (has_numberoferrorsfromsender()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->numberoferrorsfromsender(), output);
  }

  // optional uint64 numberOfErrorsFromReceiver = 8;
  if (has_numberoferrorsfromreceiver()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->numberoferrorsfromreceiver(), output);
  }

  // optional uint64 numberOfBytesReceived = 9;
  if (has_numberofbytesreceived()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->numberofbytesreceived(), output);
  }

  // optional uint64 numberOfBytesSent = 10;
  if (has_numberofbytessent()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->numberofbytessent(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:StatisticsModule_Proto.From.SinglePortStatistics)
}

::google::protobuf::uint8* From_SinglePortStatistics::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:StatisticsModule_Proto.From.SinglePortStatistics)
  // required uint32 portNumber = 1;
  if (has_portnumber()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->portnumber(), target);
  }

  // optional uint64 numberOfPackagesReceived = 2;
  if (has_numberofpackagesreceived()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->numberofpackagesreceived(), target);
  }

  // optional uint64 numberOfPackagesSent = 3;
  if (has_numberofpackagessent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->numberofpackagessent(), target);
  }

  // optional uint64 numberOfPackagesDropedByReceiver = 4;
  if (has_numberofpackagesdropedbyreceiver()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->numberofpackagesdropedbyreceiver(), target);
  }

  // optional uint64 numberOfPackagesDropedBySender = 5;
  if (has_numberofpackagesdropedbysender()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->numberofpackagesdropedbysender(), target);
  }

  // optional uint64 numberOfCollisions = 6;
  if (has_numberofcollisions()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->numberofcollisions(), target);
  }

  // optional uint64 numberOfErrorsFromSender = 7;
  if (has_numberoferrorsfromsender()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->numberoferrorsfromsender(), target);
  }

  // optional uint64 numberOfErrorsFromReceiver = 8;
  if (has_numberoferrorsfromreceiver()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->numberoferrorsfromreceiver(), target);
  }

  // optional uint64 numberOfBytesReceived = 9;
  if (has_numberofbytesreceived()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->numberofbytesreceived(), target);
  }

  // optional uint64 numberOfBytesSent = 10;
  if (has_numberofbytessent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->numberofbytessent(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StatisticsModule_Proto.From.SinglePortStatistics)
  return target;
}

int From_SinglePortStatistics::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 portNumber = 1;
    if (has_portnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->portnumber());
    }

    // optional uint64 numberOfPackagesReceived = 2;
    if (has_numberofpackagesreceived()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->numberofpackagesreceived());
    }

    // optional uint64 numberOfPackagesSent = 3;
    if (has_numberofpackagessent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->numberofpackagessent());
    }

    // optional uint64 numberOfPackagesDropedByReceiver = 4;
    if (has_numberofpackagesdropedbyreceiver()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->numberofpackagesdropedbyreceiver());
    }

    // optional uint64 numberOfPackagesDropedBySender = 5;
    if (has_numberofpackagesdropedbysender()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->numberofpackagesdropedbysender());
    }

    // optional uint64 numberOfCollisions = 6;
    if (has_numberofcollisions()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->numberofcollisions());
    }

    // optional uint64 numberOfErrorsFromSender = 7;
    if (has_numberoferrorsfromsender()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->numberoferrorsfromsender());
    }

    // optional uint64 numberOfErrorsFromReceiver = 8;
    if (has_numberoferrorsfromreceiver()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->numberoferrorsfromreceiver());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint64 numberOfBytesReceived = 9;
    if (has_numberofbytesreceived()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->numberofbytesreceived());
    }

    // optional uint64 numberOfBytesSent = 10;
    if (has_numberofbytessent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->numberofbytessent());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void From_SinglePortStatistics::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const From_SinglePortStatistics* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const From_SinglePortStatistics*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void From_SinglePortStatistics::MergeFrom(const From_SinglePortStatistics& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_portnumber()) {
      set_portnumber(from.portnumber());
    }
    if (from.has_numberofpackagesreceived()) {
      set_numberofpackagesreceived(from.numberofpackagesreceived());
    }
    if (from.has_numberofpackagessent()) {
      set_numberofpackagessent(from.numberofpackagessent());
    }
    if (from.has_numberofpackagesdropedbyreceiver()) {
      set_numberofpackagesdropedbyreceiver(from.numberofpackagesdropedbyreceiver());
    }
    if (from.has_numberofpackagesdropedbysender()) {
      set_numberofpackagesdropedbysender(from.numberofpackagesdropedbysender());
    }
    if (from.has_numberofcollisions()) {
      set_numberofcollisions(from.numberofcollisions());
    }
    if (from.has_numberoferrorsfromsender()) {
      set_numberoferrorsfromsender(from.numberoferrorsfromsender());
    }
    if (from.has_numberoferrorsfromreceiver()) {
      set_numberoferrorsfromreceiver(from.numberoferrorsfromreceiver());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_numberofbytesreceived()) {
      set_numberofbytesreceived(from.numberofbytesreceived());
    }
    if (from.has_numberofbytessent()) {
      set_numberofbytessent(from.numberofbytessent());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void From_SinglePortStatistics::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void From_SinglePortStatistics::CopyFrom(const From_SinglePortStatistics& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool From_SinglePortStatistics::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void From_SinglePortStatistics::Swap(From_SinglePortStatistics* other) {
  if (other != this) {
    std::swap(portnumber_, other->portnumber_);
    std::swap(numberofpackagesreceived_, other->numberofpackagesreceived_);
    std::swap(numberofpackagessent_, other->numberofpackagessent_);
    std::swap(numberofpackagesdropedbyreceiver_, other->numberofpackagesdropedbyreceiver_);
    std::swap(numberofpackagesdropedbysender_, other->numberofpackagesdropedbysender_);
    std::swap(numberofcollisions_, other->numberofcollisions_);
    std::swap(numberoferrorsfromsender_, other->numberoferrorsfromsender_);
    std::swap(numberoferrorsfromreceiver_, other->numberoferrorsfromreceiver_);
    std::swap(numberofbytesreceived_, other->numberofbytesreceived_);
    std::swap(numberofbytessent_, other->numberofbytessent_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata From_SinglePortStatistics::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = From_SinglePortStatistics_descriptor_;
  metadata.reflection = From_SinglePortStatistics_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int From_SingleTableStatistics::kTableIDFieldNumber;
const int From_SingleTableStatistics::kActiveEntriesFieldNumber;
const int From_SingleTableStatistics::kPackagesLookedUpFieldNumber;
const int From_SingleTableStatistics::kPackagesHittingTheTableFieldNumber;
const int From_SingleTableStatistics::kMaxEntriesFieldNumber;
#endif  // !_MSC_VER

From_SingleTableStatistics::From_SingleTableStatistics()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:StatisticsModule_Proto.From.SingleTableStatistics)
}

void From_SingleTableStatistics::InitAsDefaultInstance() {
}

From_SingleTableStatistics::From_SingleTableStatistics(const From_SingleTableStatistics& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:StatisticsModule_Proto.From.SingleTableStatistics)
}

void From_SingleTableStatistics::SharedCtor() {
  _cached_size_ = 0;
  tableid_ = 0u;
  activeentries_ = 0u;
  packageslookedup_ = GOOGLE_ULONGLONG(0);
  packageshittingthetable_ = GOOGLE_ULONGLONG(0);
  maxentries_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

From_SingleTableStatistics::~From_SingleTableStatistics() {
  // @@protoc_insertion_point(destructor:StatisticsModule_Proto.From.SingleTableStatistics)
  SharedDtor();
}

void From_SingleTableStatistics::SharedDtor() {
  if (this != default_instance_) {
  }
}

void From_SingleTableStatistics::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* From_SingleTableStatistics::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return From_SingleTableStatistics_descriptor_;
}

const From_SingleTableStatistics& From_SingleTableStatistics::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_StatisticsModule_2eproto();
  return *default_instance_;
}

From_SingleTableStatistics* From_SingleTableStatistics::default_instance_ = NULL;

From_SingleTableStatistics* From_SingleTableStatistics::New() const {
  return new From_SingleTableStatistics;
}

void From_SingleTableStatistics::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<From_SingleTableStatistics*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(tableid_, maxentries_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool From_SingleTableStatistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StatisticsModule_Proto.From.SingleTableStatistics)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 tableID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tableid_)));
          set_has_tableid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_activeEntries;
        break;
      }

      // optional uint32 activeEntries = 2;
      case 2: {
        if (tag == 16) {
         parse_activeEntries:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &activeentries_)));
          set_has_activeentries();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_PackagesLookedUp;
        break;
      }

      // optional uint64 PackagesLookedUp = 3;
      case 3: {
        if (tag == 24) {
         parse_PackagesLookedUp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &packageslookedup_)));
          set_has_packageslookedup();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_PackagesHittingTheTable;
        break;
      }

      // optional uint64 PackagesHittingTheTable = 4;
      case 4: {
        if (tag == 32) {
         parse_PackagesHittingTheTable:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &packageshittingthetable_)));
          set_has_packageshittingthetable();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_maxEntries;
        break;
      }

      // optional uint32 maxEntries = 5;
      case 5: {
        if (tag == 40) {
         parse_maxEntries:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxentries_)));
          set_has_maxentries();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StatisticsModule_Proto.From.SingleTableStatistics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StatisticsModule_Proto.From.SingleTableStatistics)
  return false;
#undef DO_
}

void From_SingleTableStatistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StatisticsModule_Proto.From.SingleTableStatistics)
  // required uint32 tableID = 1;
  if (has_tableid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tableid(), output);
  }

  // optional uint32 activeEntries = 2;
  if (has_activeentries()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->activeentries(), output);
  }

  // optional uint64 PackagesLookedUp = 3;
  if (has_packageslookedup()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->packageslookedup(), output);
  }

  // optional uint64 PackagesHittingTheTable = 4;
  if (has_packageshittingthetable()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->packageshittingthetable(), output);
  }

  // optional uint32 maxEntries = 5;
  if (has_maxentries()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->maxentries(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:StatisticsModule_Proto.From.SingleTableStatistics)
}

::google::protobuf::uint8* From_SingleTableStatistics::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:StatisticsModule_Proto.From.SingleTableStatistics)
  // required uint32 tableID = 1;
  if (has_tableid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tableid(), target);
  }

  // optional uint32 activeEntries = 2;
  if (has_activeentries()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->activeentries(), target);
  }

  // optional uint64 PackagesLookedUp = 3;
  if (has_packageslookedup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->packageslookedup(), target);
  }

  // optional uint64 PackagesHittingTheTable = 4;
  if (has_packageshittingthetable()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->packageshittingthetable(), target);
  }

  // optional uint32 maxEntries = 5;
  if (has_maxentries()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->maxentries(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StatisticsModule_Proto.From.SingleTableStatistics)
  return target;
}

int From_SingleTableStatistics::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 tableID = 1;
    if (has_tableid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tableid());
    }

    // optional uint32 activeEntries = 2;
    if (has_activeentries()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->activeentries());
    }

    // optional uint64 PackagesLookedUp = 3;
    if (has_packageslookedup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->packageslookedup());
    }

    // optional uint64 PackagesHittingTheTable = 4;
    if (has_packageshittingthetable()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->packageshittingthetable());
    }

    // optional uint32 maxEntries = 5;
    if (has_maxentries()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->maxentries());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void From_SingleTableStatistics::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const From_SingleTableStatistics* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const From_SingleTableStatistics*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void From_SingleTableStatistics::MergeFrom(const From_SingleTableStatistics& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tableid()) {
      set_tableid(from.tableid());
    }
    if (from.has_activeentries()) {
      set_activeentries(from.activeentries());
    }
    if (from.has_packageslookedup()) {
      set_packageslookedup(from.packageslookedup());
    }
    if (from.has_packageshittingthetable()) {
      set_packageshittingthetable(from.packageshittingthetable());
    }
    if (from.has_maxentries()) {
      set_maxentries(from.maxentries());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void From_SingleTableStatistics::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void From_SingleTableStatistics::CopyFrom(const From_SingleTableStatistics& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool From_SingleTableStatistics::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void From_SingleTableStatistics::Swap(From_SingleTableStatistics* other) {
  if (other != this) {
    std::swap(tableid_, other->tableid_);
    std::swap(activeentries_, other->activeentries_);
    std::swap(packageslookedup_, other->packageslookedup_);
    std::swap(packageshittingthetable_, other->packageshittingthetable_);
    std::swap(maxentries_, other->maxentries_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata From_SingleTableStatistics::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = From_SingleTableStatistics_descriptor_;
  metadata.reflection = From_SingleTableStatistics_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int From::kStatsFieldNumber;
#endif  // !_MSC_VER

From::From()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:StatisticsModule_Proto.From)
}

void From::InitAsDefaultInstance() {
  From_default_oneof_instance_->stats_ = const_cast< ::StatisticsModule_Proto::From_SwitchStats*>(&::StatisticsModule_Proto::From_SwitchStats::default_instance());
}

From::From(const From& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:StatisticsModule_Proto.From)
}

void From::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  clear_has_FromMsg();
}

From::~From() {
  // @@protoc_insertion_point(destructor:StatisticsModule_Proto.From)
  SharedDtor();
}

void From::SharedDtor() {
  if (has_FromMsg()) {
    clear_FromMsg();
  }
  if (this != default_instance_) {
  }
}

void From::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* From::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return From_descriptor_;
}

const From& From::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_StatisticsModule_2eproto();
  return *default_instance_;
}

From* From::default_instance_ = NULL;

From* From::New() const {
  return new From;
}

void From::clear_FromMsg() {
  switch(FromMsg_case()) {
    case kStats: {
      delete FromMsg_.stats_;
      break;
    }
    case FROMMSG_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FROMMSG_NOT_SET;
}


void From::Clear() {
  clear_FromMsg();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool From::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StatisticsModule_Proto.From)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .StatisticsModule_Proto.From.SwitchStats stats = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_stats()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StatisticsModule_Proto.From)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StatisticsModule_Proto.From)
  return false;
#undef DO_
}

void From::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StatisticsModule_Proto.From)
  // optional .StatisticsModule_Proto.From.SwitchStats stats = 1;
  if (has_stats()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->stats(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:StatisticsModule_Proto.From)
}

::google::protobuf::uint8* From::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:StatisticsModule_Proto.From)
  // optional .StatisticsModule_Proto.From.SwitchStats stats = 1;
  if (has_stats()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->stats(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StatisticsModule_Proto.From)
  return target;
}

int From::ByteSize() const {
  int total_size = 0;

  switch (FromMsg_case()) {
    // optional .StatisticsModule_Proto.From.SwitchStats stats = 1;
    case kStats: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->stats());
      break;
    }
    case FROMMSG_NOT_SET: {
      break;
    }
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void From::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const From* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const From*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void From::MergeFrom(const From& from) {
  GOOGLE_CHECK_NE(&from, this);
  switch (from.FromMsg_case()) {
    case kStats: {
      mutable_stats()->::StatisticsModule_Proto::From_SwitchStats::MergeFrom(from.stats());
      break;
    }
    case FROMMSG_NOT_SET: {
      break;
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void From::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void From::CopyFrom(const From& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool From::IsInitialized() const {

  if (has_stats()) {
    if (!this->stats().IsInitialized()) return false;
  }
  return true;
}

void From::Swap(From* other) {
  if (other != this) {
    std::swap(FromMsg_, other->FromMsg_);
    std::swap(_oneof_case_[0], other->_oneof_case_[0]);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata From::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = From_descriptor_;
  metadata.reflection = From_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

FooBar::FooBar()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:StatisticsModule_Proto.FooBar)
}

void FooBar::InitAsDefaultInstance() {
}

FooBar::FooBar(const FooBar& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:StatisticsModule_Proto.FooBar)
}

void FooBar::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FooBar::~FooBar() {
  // @@protoc_insertion_point(destructor:StatisticsModule_Proto.FooBar)
  SharedDtor();
}

void FooBar::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FooBar::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FooBar::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FooBar_descriptor_;
}

const FooBar& FooBar::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_StatisticsModule_2eproto();
  return *default_instance_;
}

FooBar* FooBar::default_instance_ = NULL;

FooBar* FooBar::New() const {
  return new FooBar;
}

void FooBar::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FooBar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StatisticsModule_Proto.FooBar)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:StatisticsModule_Proto.FooBar)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StatisticsModule_Proto.FooBar)
  return false;
#undef DO_
}

void FooBar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StatisticsModule_Proto.FooBar)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:StatisticsModule_Proto.FooBar)
}

::google::protobuf::uint8* FooBar::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:StatisticsModule_Proto.FooBar)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StatisticsModule_Proto.FooBar)
  return target;
}

int FooBar::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FooBar::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FooBar* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FooBar*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FooBar::MergeFrom(const FooBar& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FooBar::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FooBar::CopyFrom(const FooBar& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FooBar::IsInitialized() const {

  return true;
}

void FooBar::Swap(FooBar* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FooBar::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FooBar_descriptor_;
  metadata.reflection = FooBar_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace StatisticsModule_Proto

// @@protoc_insertion_point(global_scope)
