// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ExampleModuleA.proto

#ifndef PROTOBUF_ExampleModuleA_2eproto__INCLUDED
#define PROTOBUF_ExampleModuleA_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ExampleModuleA_Proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ExampleModuleA_2eproto();
void protobuf_AssignDesc_ExampleModuleA_2eproto();
void protobuf_ShutdownFile_ExampleModuleA_2eproto();

class To;
class To_SomeEvent;
class To_AnotherEvent;
class To_SomeRequest;
class From;
class From_RandomNumber;
class SomePayload;

// ===================================================================

class To_SomeEvent : public ::google::protobuf::Message {
 public:
  To_SomeEvent();
  virtual ~To_SomeEvent();

  To_SomeEvent(const To_SomeEvent& from);

  inline To_SomeEvent& operator=(const To_SomeEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const To_SomeEvent& default_instance();

  void Swap(To_SomeEvent* other);

  // implements Message ----------------------------------------------

  To_SomeEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const To_SomeEvent& from);
  void MergeFrom(const To_SomeEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string foo = 1;
  inline bool has_foo() const;
  inline void clear_foo();
  static const int kFooFieldNumber = 1;
  inline const ::std::string& foo() const;
  inline void set_foo(const ::std::string& value);
  inline void set_foo(const char* value);
  inline void set_foo(const char* value, size_t size);
  inline ::std::string* mutable_foo();
  inline ::std::string* release_foo();
  inline void set_allocated_foo(::std::string* foo);

  // optional uint32 bar = 2;
  inline bool has_bar() const;
  inline void clear_bar();
  static const int kBarFieldNumber = 2;
  inline ::google::protobuf::uint32 bar() const;
  inline void set_bar(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ExampleModuleA_Proto.To.SomeEvent)
 private:
  inline void set_has_foo();
  inline void clear_has_foo();
  inline void set_has_bar();
  inline void clear_has_bar();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* foo_;
  ::google::protobuf::uint32 bar_;
  friend void  protobuf_AddDesc_ExampleModuleA_2eproto();
  friend void protobuf_AssignDesc_ExampleModuleA_2eproto();
  friend void protobuf_ShutdownFile_ExampleModuleA_2eproto();

  void InitAsDefaultInstance();
  static To_SomeEvent* default_instance_;
};
// -------------------------------------------------------------------

class To_AnotherEvent : public ::google::protobuf::Message {
 public:
  To_AnotherEvent();
  virtual ~To_AnotherEvent();

  To_AnotherEvent(const To_AnotherEvent& from);

  inline To_AnotherEvent& operator=(const To_AnotherEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const To_AnotherEvent& default_instance();

  void Swap(To_AnotherEvent* other);

  // implements Message ----------------------------------------------

  To_AnotherEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const To_AnotherEvent& from);
  void MergeFrom(const To_AnotherEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string foo = 1;
  inline bool has_foo() const;
  inline void clear_foo();
  static const int kFooFieldNumber = 1;
  inline const ::std::string& foo() const;
  inline void set_foo(const ::std::string& value);
  inline void set_foo(const char* value);
  inline void set_foo(const char* value, size_t size);
  inline ::std::string* mutable_foo();
  inline ::std::string* release_foo();
  inline void set_allocated_foo(::std::string* foo);

  // optional uint32 bar = 2;
  inline bool has_bar() const;
  inline void clear_bar();
  static const int kBarFieldNumber = 2;
  inline ::google::protobuf::uint32 bar() const;
  inline void set_bar(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ExampleModuleA_Proto.To.AnotherEvent)
 private:
  inline void set_has_foo();
  inline void clear_has_foo();
  inline void set_has_bar();
  inline void clear_has_bar();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* foo_;
  ::google::protobuf::uint32 bar_;
  friend void  protobuf_AddDesc_ExampleModuleA_2eproto();
  friend void protobuf_AssignDesc_ExampleModuleA_2eproto();
  friend void protobuf_ShutdownFile_ExampleModuleA_2eproto();

  void InitAsDefaultInstance();
  static To_AnotherEvent* default_instance_;
};
// -------------------------------------------------------------------

class To_SomeRequest : public ::google::protobuf::Message {
 public:
  To_SomeRequest();
  virtual ~To_SomeRequest();

  To_SomeRequest(const To_SomeRequest& from);

  inline To_SomeRequest& operator=(const To_SomeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const To_SomeRequest& default_instance();

  void Swap(To_SomeRequest* other);

  // implements Message ----------------------------------------------

  To_SomeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const To_SomeRequest& from);
  void MergeFrom(const To_SomeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 bar = 1;
  inline int bar_size() const;
  inline void clear_bar();
  static const int kBarFieldNumber = 1;
  inline ::google::protobuf::uint64 bar(int index) const;
  inline void set_bar(int index, ::google::protobuf::uint64 value);
  inline void add_bar(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      bar() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_bar();

  // repeated .ExampleModuleA_Proto.SomePayload payload = 2;
  inline int payload_size() const;
  inline void clear_payload();
  static const int kPayloadFieldNumber = 2;
  inline const ::ExampleModuleA_Proto::SomePayload& payload(int index) const;
  inline ::ExampleModuleA_Proto::SomePayload* mutable_payload(int index);
  inline ::ExampleModuleA_Proto::SomePayload* add_payload();
  inline const ::google::protobuf::RepeatedPtrField< ::ExampleModuleA_Proto::SomePayload >&
      payload() const;
  inline ::google::protobuf::RepeatedPtrField< ::ExampleModuleA_Proto::SomePayload >*
      mutable_payload();

  // @@protoc_insertion_point(class_scope:ExampleModuleA_Proto.To.SomeRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > bar_;
  ::google::protobuf::RepeatedPtrField< ::ExampleModuleA_Proto::SomePayload > payload_;
  friend void  protobuf_AddDesc_ExampleModuleA_2eproto();
  friend void protobuf_AssignDesc_ExampleModuleA_2eproto();
  friend void protobuf_ShutdownFile_ExampleModuleA_2eproto();

  void InitAsDefaultInstance();
  static To_SomeRequest* default_instance_;
};
// -------------------------------------------------------------------

class To : public ::google::protobuf::Message {
 public:
  To();
  virtual ~To();

  To(const To& from);

  inline To& operator=(const To& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const To& default_instance();

  enum ToMsgCase {
    kSomeEvent = 1,
    kAnotherEvent = 2,
    kSomeRequest = 3,
    TOMSG_NOT_SET = 0,
  };

  void Swap(To* other);

  // implements Message ----------------------------------------------

  To* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const To& from);
  void MergeFrom(const To& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef To_SomeEvent SomeEvent;
  typedef To_AnotherEvent AnotherEvent;
  typedef To_SomeRequest SomeRequest;

  // accessors -------------------------------------------------------

  // optional .ExampleModuleA_Proto.To.SomeEvent someEvent = 1;
  inline bool has_someevent() const;
  inline void clear_someevent();
  static const int kSomeEventFieldNumber = 1;
  inline const ::ExampleModuleA_Proto::To_SomeEvent& someevent() const;
  inline ::ExampleModuleA_Proto::To_SomeEvent* mutable_someevent();
  inline ::ExampleModuleA_Proto::To_SomeEvent* release_someevent();
  inline void set_allocated_someevent(::ExampleModuleA_Proto::To_SomeEvent* someevent);

  // optional .ExampleModuleA_Proto.To.AnotherEvent anotherEvent = 2;
  inline bool has_anotherevent() const;
  inline void clear_anotherevent();
  static const int kAnotherEventFieldNumber = 2;
  inline const ::ExampleModuleA_Proto::To_AnotherEvent& anotherevent() const;
  inline ::ExampleModuleA_Proto::To_AnotherEvent* mutable_anotherevent();
  inline ::ExampleModuleA_Proto::To_AnotherEvent* release_anotherevent();
  inline void set_allocated_anotherevent(::ExampleModuleA_Proto::To_AnotherEvent* anotherevent);

  // optional .ExampleModuleA_Proto.To.SomeRequest someRequest = 3;
  inline bool has_somerequest() const;
  inline void clear_somerequest();
  static const int kSomeRequestFieldNumber = 3;
  inline const ::ExampleModuleA_Proto::To_SomeRequest& somerequest() const;
  inline ::ExampleModuleA_Proto::To_SomeRequest* mutable_somerequest();
  inline ::ExampleModuleA_Proto::To_SomeRequest* release_somerequest();
  inline void set_allocated_somerequest(::ExampleModuleA_Proto::To_SomeRequest* somerequest);

  inline ToMsgCase ToMsg_case() const;
  // @@protoc_insertion_point(class_scope:ExampleModuleA_Proto.To)
 private:
  inline void set_has_someevent();
  inline void set_has_anotherevent();
  inline void set_has_somerequest();

  inline bool has_ToMsg();
  void clear_ToMsg();
  inline void clear_has_ToMsg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  union ToMsgUnion {
    ::ExampleModuleA_Proto::To_SomeEvent* someevent_;
    ::ExampleModuleA_Proto::To_AnotherEvent* anotherevent_;
    ::ExampleModuleA_Proto::To_SomeRequest* somerequest_;
  } ToMsg_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_ExampleModuleA_2eproto();
  friend void protobuf_AssignDesc_ExampleModuleA_2eproto();
  friend void protobuf_ShutdownFile_ExampleModuleA_2eproto();

  void InitAsDefaultInstance();
  static To* default_instance_;
};
// -------------------------------------------------------------------

class From_RandomNumber : public ::google::protobuf::Message {
 public:
  From_RandomNumber();
  virtual ~From_RandomNumber();

  From_RandomNumber(const From_RandomNumber& from);

  inline From_RandomNumber& operator=(const From_RandomNumber& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const From_RandomNumber& default_instance();

  void Swap(From_RandomNumber* other);

  // implements Message ----------------------------------------------

  From_RandomNumber* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const From_RandomNumber& from);
  void MergeFrom(const From_RandomNumber& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 randomNumber = 1;
  inline bool has_randomnumber() const;
  inline void clear_randomnumber();
  static const int kRandomNumberFieldNumber = 1;
  inline ::google::protobuf::uint64 randomnumber() const;
  inline void set_randomnumber(::google::protobuf::uint64 value);

  // optional .ExampleModuleA_Proto.SomePayload payload = 2;
  inline bool has_payload() const;
  inline void clear_payload();
  static const int kPayloadFieldNumber = 2;
  inline const ::ExampleModuleA_Proto::SomePayload& payload() const;
  inline ::ExampleModuleA_Proto::SomePayload* mutable_payload();
  inline ::ExampleModuleA_Proto::SomePayload* release_payload();
  inline void set_allocated_payload(::ExampleModuleA_Proto::SomePayload* payload);

  // @@protoc_insertion_point(class_scope:ExampleModuleA_Proto.From.RandomNumber)
 private:
  inline void set_has_randomnumber();
  inline void clear_has_randomnumber();
  inline void set_has_payload();
  inline void clear_has_payload();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 randomnumber_;
  ::ExampleModuleA_Proto::SomePayload* payload_;
  friend void  protobuf_AddDesc_ExampleModuleA_2eproto();
  friend void protobuf_AssignDesc_ExampleModuleA_2eproto();
  friend void protobuf_ShutdownFile_ExampleModuleA_2eproto();

  void InitAsDefaultInstance();
  static From_RandomNumber* default_instance_;
};
// -------------------------------------------------------------------

class From : public ::google::protobuf::Message {
 public:
  From();
  virtual ~From();

  From(const From& from);

  inline From& operator=(const From& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const From& default_instance();

  enum FromMsgCase {
    kRandomNumbers = 1,
    FROMMSG_NOT_SET = 0,
  };

  void Swap(From* other);

  // implements Message ----------------------------------------------

  From* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const From& from);
  void MergeFrom(const From& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef From_RandomNumber RandomNumber;

  // accessors -------------------------------------------------------

  // optional .ExampleModuleA_Proto.From.RandomNumber randomNumbers = 1;
  inline bool has_randomnumbers() const;
  inline void clear_randomnumbers();
  static const int kRandomNumbersFieldNumber = 1;
  inline const ::ExampleModuleA_Proto::From_RandomNumber& randomnumbers() const;
  inline ::ExampleModuleA_Proto::From_RandomNumber* mutable_randomnumbers();
  inline ::ExampleModuleA_Proto::From_RandomNumber* release_randomnumbers();
  inline void set_allocated_randomnumbers(::ExampleModuleA_Proto::From_RandomNumber* randomnumbers);

  inline FromMsgCase FromMsg_case() const;
  // @@protoc_insertion_point(class_scope:ExampleModuleA_Proto.From)
 private:
  inline void set_has_randomnumbers();

  inline bool has_FromMsg();
  void clear_FromMsg();
  inline void clear_has_FromMsg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  union FromMsgUnion {
    ::ExampleModuleA_Proto::From_RandomNumber* randomnumbers_;
  } FromMsg_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_ExampleModuleA_2eproto();
  friend void protobuf_AssignDesc_ExampleModuleA_2eproto();
  friend void protobuf_ShutdownFile_ExampleModuleA_2eproto();

  void InitAsDefaultInstance();
  static From* default_instance_;
};
// -------------------------------------------------------------------

class SomePayload : public ::google::protobuf::Message {
 public:
  SomePayload();
  virtual ~SomePayload();

  SomePayload(const SomePayload& from);

  inline SomePayload& operator=(const SomePayload& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SomePayload& default_instance();

  void Swap(SomePayload* other);

  // implements Message ----------------------------------------------

  SomePayload* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SomePayload& from);
  void MergeFrom(const SomePayload& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string something = 1;
  inline bool has_something() const;
  inline void clear_something();
  static const int kSomethingFieldNumber = 1;
  inline const ::std::string& something() const;
  inline void set_something(const ::std::string& value);
  inline void set_something(const char* value);
  inline void set_something(const char* value, size_t size);
  inline ::std::string* mutable_something();
  inline ::std::string* release_something();
  inline void set_allocated_something(::std::string* something);

  // required bytes payload = 2;
  inline bool has_payload() const;
  inline void clear_payload();
  static const int kPayloadFieldNumber = 2;
  inline const ::std::string& payload() const;
  inline void set_payload(const ::std::string& value);
  inline void set_payload(const char* value);
  inline void set_payload(const void* value, size_t size);
  inline ::std::string* mutable_payload();
  inline ::std::string* release_payload();
  inline void set_allocated_payload(::std::string* payload);

  // @@protoc_insertion_point(class_scope:ExampleModuleA_Proto.SomePayload)
 private:
  inline void set_has_something();
  inline void clear_has_something();
  inline void set_has_payload();
  inline void clear_has_payload();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* something_;
  ::std::string* payload_;
  friend void  protobuf_AddDesc_ExampleModuleA_2eproto();
  friend void protobuf_AssignDesc_ExampleModuleA_2eproto();
  friend void protobuf_ShutdownFile_ExampleModuleA_2eproto();

  void InitAsDefaultInstance();
  static SomePayload* default_instance_;
};
// ===================================================================


// ===================================================================

// To_SomeEvent

// required string foo = 1;
inline bool To_SomeEvent::has_foo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void To_SomeEvent::set_has_foo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void To_SomeEvent::clear_has_foo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void To_SomeEvent::clear_foo() {
  if (foo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    foo_->clear();
  }
  clear_has_foo();
}
inline const ::std::string& To_SomeEvent::foo() const {
  // @@protoc_insertion_point(field_get:ExampleModuleA_Proto.To.SomeEvent.foo)
  return *foo_;
}
inline void To_SomeEvent::set_foo(const ::std::string& value) {
  set_has_foo();
  if (foo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    foo_ = new ::std::string;
  }
  foo_->assign(value);
  // @@protoc_insertion_point(field_set:ExampleModuleA_Proto.To.SomeEvent.foo)
}
inline void To_SomeEvent::set_foo(const char* value) {
  set_has_foo();
  if (foo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    foo_ = new ::std::string;
  }
  foo_->assign(value);
  // @@protoc_insertion_point(field_set_char:ExampleModuleA_Proto.To.SomeEvent.foo)
}
inline void To_SomeEvent::set_foo(const char* value, size_t size) {
  set_has_foo();
  if (foo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    foo_ = new ::std::string;
  }
  foo_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ExampleModuleA_Proto.To.SomeEvent.foo)
}
inline ::std::string* To_SomeEvent::mutable_foo() {
  set_has_foo();
  if (foo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    foo_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ExampleModuleA_Proto.To.SomeEvent.foo)
  return foo_;
}
inline ::std::string* To_SomeEvent::release_foo() {
  clear_has_foo();
  if (foo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = foo_;
    foo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void To_SomeEvent::set_allocated_foo(::std::string* foo) {
  if (foo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete foo_;
  }
  if (foo) {
    set_has_foo();
    foo_ = foo;
  } else {
    clear_has_foo();
    foo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ExampleModuleA_Proto.To.SomeEvent.foo)
}

// optional uint32 bar = 2;
inline bool To_SomeEvent::has_bar() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void To_SomeEvent::set_has_bar() {
  _has_bits_[0] |= 0x00000002u;
}
inline void To_SomeEvent::clear_has_bar() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void To_SomeEvent::clear_bar() {
  bar_ = 0u;
  clear_has_bar();
}
inline ::google::protobuf::uint32 To_SomeEvent::bar() const {
  // @@protoc_insertion_point(field_get:ExampleModuleA_Proto.To.SomeEvent.bar)
  return bar_;
}
inline void To_SomeEvent::set_bar(::google::protobuf::uint32 value) {
  set_has_bar();
  bar_ = value;
  // @@protoc_insertion_point(field_set:ExampleModuleA_Proto.To.SomeEvent.bar)
}

// -------------------------------------------------------------------

// To_AnotherEvent

// required string foo = 1;
inline bool To_AnotherEvent::has_foo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void To_AnotherEvent::set_has_foo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void To_AnotherEvent::clear_has_foo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void To_AnotherEvent::clear_foo() {
  if (foo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    foo_->clear();
  }
  clear_has_foo();
}
inline const ::std::string& To_AnotherEvent::foo() const {
  // @@protoc_insertion_point(field_get:ExampleModuleA_Proto.To.AnotherEvent.foo)
  return *foo_;
}
inline void To_AnotherEvent::set_foo(const ::std::string& value) {
  set_has_foo();
  if (foo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    foo_ = new ::std::string;
  }
  foo_->assign(value);
  // @@protoc_insertion_point(field_set:ExampleModuleA_Proto.To.AnotherEvent.foo)
}
inline void To_AnotherEvent::set_foo(const char* value) {
  set_has_foo();
  if (foo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    foo_ = new ::std::string;
  }
  foo_->assign(value);
  // @@protoc_insertion_point(field_set_char:ExampleModuleA_Proto.To.AnotherEvent.foo)
}
inline void To_AnotherEvent::set_foo(const char* value, size_t size) {
  set_has_foo();
  if (foo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    foo_ = new ::std::string;
  }
  foo_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ExampleModuleA_Proto.To.AnotherEvent.foo)
}
inline ::std::string* To_AnotherEvent::mutable_foo() {
  set_has_foo();
  if (foo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    foo_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ExampleModuleA_Proto.To.AnotherEvent.foo)
  return foo_;
}
inline ::std::string* To_AnotherEvent::release_foo() {
  clear_has_foo();
  if (foo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = foo_;
    foo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void To_AnotherEvent::set_allocated_foo(::std::string* foo) {
  if (foo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete foo_;
  }
  if (foo) {
    set_has_foo();
    foo_ = foo;
  } else {
    clear_has_foo();
    foo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ExampleModuleA_Proto.To.AnotherEvent.foo)
}

// optional uint32 bar = 2;
inline bool To_AnotherEvent::has_bar() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void To_AnotherEvent::set_has_bar() {
  _has_bits_[0] |= 0x00000002u;
}
inline void To_AnotherEvent::clear_has_bar() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void To_AnotherEvent::clear_bar() {
  bar_ = 0u;
  clear_has_bar();
}
inline ::google::protobuf::uint32 To_AnotherEvent::bar() const {
  // @@protoc_insertion_point(field_get:ExampleModuleA_Proto.To.AnotherEvent.bar)
  return bar_;
}
inline void To_AnotherEvent::set_bar(::google::protobuf::uint32 value) {
  set_has_bar();
  bar_ = value;
  // @@protoc_insertion_point(field_set:ExampleModuleA_Proto.To.AnotherEvent.bar)
}

// -------------------------------------------------------------------

// To_SomeRequest

// repeated uint64 bar = 1;
inline int To_SomeRequest::bar_size() const {
  return bar_.size();
}
inline void To_SomeRequest::clear_bar() {
  bar_.Clear();
}
inline ::google::protobuf::uint64 To_SomeRequest::bar(int index) const {
  // @@protoc_insertion_point(field_get:ExampleModuleA_Proto.To.SomeRequest.bar)
  return bar_.Get(index);
}
inline void To_SomeRequest::set_bar(int index, ::google::protobuf::uint64 value) {
  bar_.Set(index, value);
  // @@protoc_insertion_point(field_set:ExampleModuleA_Proto.To.SomeRequest.bar)
}
inline void To_SomeRequest::add_bar(::google::protobuf::uint64 value) {
  bar_.Add(value);
  // @@protoc_insertion_point(field_add:ExampleModuleA_Proto.To.SomeRequest.bar)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
To_SomeRequest::bar() const {
  // @@protoc_insertion_point(field_list:ExampleModuleA_Proto.To.SomeRequest.bar)
  return bar_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
To_SomeRequest::mutable_bar() {
  // @@protoc_insertion_point(field_mutable_list:ExampleModuleA_Proto.To.SomeRequest.bar)
  return &bar_;
}

// repeated .ExampleModuleA_Proto.SomePayload payload = 2;
inline int To_SomeRequest::payload_size() const {
  return payload_.size();
}
inline void To_SomeRequest::clear_payload() {
  payload_.Clear();
}
inline const ::ExampleModuleA_Proto::SomePayload& To_SomeRequest::payload(int index) const {
  // @@protoc_insertion_point(field_get:ExampleModuleA_Proto.To.SomeRequest.payload)
  return payload_.Get(index);
}
inline ::ExampleModuleA_Proto::SomePayload* To_SomeRequest::mutable_payload(int index) {
  // @@protoc_insertion_point(field_mutable:ExampleModuleA_Proto.To.SomeRequest.payload)
  return payload_.Mutable(index);
}
inline ::ExampleModuleA_Proto::SomePayload* To_SomeRequest::add_payload() {
  // @@protoc_insertion_point(field_add:ExampleModuleA_Proto.To.SomeRequest.payload)
  return payload_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ExampleModuleA_Proto::SomePayload >&
To_SomeRequest::payload() const {
  // @@protoc_insertion_point(field_list:ExampleModuleA_Proto.To.SomeRequest.payload)
  return payload_;
}
inline ::google::protobuf::RepeatedPtrField< ::ExampleModuleA_Proto::SomePayload >*
To_SomeRequest::mutable_payload() {
  // @@protoc_insertion_point(field_mutable_list:ExampleModuleA_Proto.To.SomeRequest.payload)
  return &payload_;
}

// -------------------------------------------------------------------

// To

// optional .ExampleModuleA_Proto.To.SomeEvent someEvent = 1;
inline bool To::has_someevent() const {
  return ToMsg_case() == kSomeEvent;
}
inline void To::set_has_someevent() {
  _oneof_case_[0] = kSomeEvent;
}
inline void To::clear_someevent() {
  if (has_someevent()) {
    delete ToMsg_.someevent_;
    clear_has_ToMsg();
  }
}
inline const ::ExampleModuleA_Proto::To_SomeEvent& To::someevent() const {
  return has_someevent() ? *ToMsg_.someevent_
                      : ::ExampleModuleA_Proto::To_SomeEvent::default_instance();
}
inline ::ExampleModuleA_Proto::To_SomeEvent* To::mutable_someevent() {
  if (!has_someevent()) {
    clear_ToMsg();
    set_has_someevent();
    ToMsg_.someevent_ = new ::ExampleModuleA_Proto::To_SomeEvent;
  }
  return ToMsg_.someevent_;
}
inline ::ExampleModuleA_Proto::To_SomeEvent* To::release_someevent() {
  if (has_someevent()) {
    clear_has_ToMsg();
    ::ExampleModuleA_Proto::To_SomeEvent* temp = ToMsg_.someevent_;
    ToMsg_.someevent_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void To::set_allocated_someevent(::ExampleModuleA_Proto::To_SomeEvent* someevent) {
  clear_ToMsg();
  if (someevent) {
    set_has_someevent();
    ToMsg_.someevent_ = someevent;
  }
}

// optional .ExampleModuleA_Proto.To.AnotherEvent anotherEvent = 2;
inline bool To::has_anotherevent() const {
  return ToMsg_case() == kAnotherEvent;
}
inline void To::set_has_anotherevent() {
  _oneof_case_[0] = kAnotherEvent;
}
inline void To::clear_anotherevent() {
  if (has_anotherevent()) {
    delete ToMsg_.anotherevent_;
    clear_has_ToMsg();
  }
}
inline const ::ExampleModuleA_Proto::To_AnotherEvent& To::anotherevent() const {
  return has_anotherevent() ? *ToMsg_.anotherevent_
                      : ::ExampleModuleA_Proto::To_AnotherEvent::default_instance();
}
inline ::ExampleModuleA_Proto::To_AnotherEvent* To::mutable_anotherevent() {
  if (!has_anotherevent()) {
    clear_ToMsg();
    set_has_anotherevent();
    ToMsg_.anotherevent_ = new ::ExampleModuleA_Proto::To_AnotherEvent;
  }
  return ToMsg_.anotherevent_;
}
inline ::ExampleModuleA_Proto::To_AnotherEvent* To::release_anotherevent() {
  if (has_anotherevent()) {
    clear_has_ToMsg();
    ::ExampleModuleA_Proto::To_AnotherEvent* temp = ToMsg_.anotherevent_;
    ToMsg_.anotherevent_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void To::set_allocated_anotherevent(::ExampleModuleA_Proto::To_AnotherEvent* anotherevent) {
  clear_ToMsg();
  if (anotherevent) {
    set_has_anotherevent();
    ToMsg_.anotherevent_ = anotherevent;
  }
}

// optional .ExampleModuleA_Proto.To.SomeRequest someRequest = 3;
inline bool To::has_somerequest() const {
  return ToMsg_case() == kSomeRequest;
}
inline void To::set_has_somerequest() {
  _oneof_case_[0] = kSomeRequest;
}
inline void To::clear_somerequest() {
  if (has_somerequest()) {
    delete ToMsg_.somerequest_;
    clear_has_ToMsg();
  }
}
inline const ::ExampleModuleA_Proto::To_SomeRequest& To::somerequest() const {
  return has_somerequest() ? *ToMsg_.somerequest_
                      : ::ExampleModuleA_Proto::To_SomeRequest::default_instance();
}
inline ::ExampleModuleA_Proto::To_SomeRequest* To::mutable_somerequest() {
  if (!has_somerequest()) {
    clear_ToMsg();
    set_has_somerequest();
    ToMsg_.somerequest_ = new ::ExampleModuleA_Proto::To_SomeRequest;
  }
  return ToMsg_.somerequest_;
}
inline ::ExampleModuleA_Proto::To_SomeRequest* To::release_somerequest() {
  if (has_somerequest()) {
    clear_has_ToMsg();
    ::ExampleModuleA_Proto::To_SomeRequest* temp = ToMsg_.somerequest_;
    ToMsg_.somerequest_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void To::set_allocated_somerequest(::ExampleModuleA_Proto::To_SomeRequest* somerequest) {
  clear_ToMsg();
  if (somerequest) {
    set_has_somerequest();
    ToMsg_.somerequest_ = somerequest;
  }
}

inline bool To::has_ToMsg() {
  return ToMsg_case() != TOMSG_NOT_SET;
}
inline void To::clear_has_ToMsg() {
  _oneof_case_[0] = TOMSG_NOT_SET;
}
inline To::ToMsgCase To::ToMsg_case() const {
  return To::ToMsgCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// From_RandomNumber

// required uint64 randomNumber = 1;
inline bool From_RandomNumber::has_randomnumber() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void From_RandomNumber::set_has_randomnumber() {
  _has_bits_[0] |= 0x00000001u;
}
inline void From_RandomNumber::clear_has_randomnumber() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void From_RandomNumber::clear_randomnumber() {
  randomnumber_ = GOOGLE_ULONGLONG(0);
  clear_has_randomnumber();
}
inline ::google::protobuf::uint64 From_RandomNumber::randomnumber() const {
  // @@protoc_insertion_point(field_get:ExampleModuleA_Proto.From.RandomNumber.randomNumber)
  return randomnumber_;
}
inline void From_RandomNumber::set_randomnumber(::google::protobuf::uint64 value) {
  set_has_randomnumber();
  randomnumber_ = value;
  // @@protoc_insertion_point(field_set:ExampleModuleA_Proto.From.RandomNumber.randomNumber)
}

// optional .ExampleModuleA_Proto.SomePayload payload = 2;
inline bool From_RandomNumber::has_payload() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void From_RandomNumber::set_has_payload() {
  _has_bits_[0] |= 0x00000002u;
}
inline void From_RandomNumber::clear_has_payload() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void From_RandomNumber::clear_payload() {
  if (payload_ != NULL) payload_->::ExampleModuleA_Proto::SomePayload::Clear();
  clear_has_payload();
}
inline const ::ExampleModuleA_Proto::SomePayload& From_RandomNumber::payload() const {
  // @@protoc_insertion_point(field_get:ExampleModuleA_Proto.From.RandomNumber.payload)
  return payload_ != NULL ? *payload_ : *default_instance_->payload_;
}
inline ::ExampleModuleA_Proto::SomePayload* From_RandomNumber::mutable_payload() {
  set_has_payload();
  if (payload_ == NULL) payload_ = new ::ExampleModuleA_Proto::SomePayload;
  // @@protoc_insertion_point(field_mutable:ExampleModuleA_Proto.From.RandomNumber.payload)
  return payload_;
}
inline ::ExampleModuleA_Proto::SomePayload* From_RandomNumber::release_payload() {
  clear_has_payload();
  ::ExampleModuleA_Proto::SomePayload* temp = payload_;
  payload_ = NULL;
  return temp;
}
inline void From_RandomNumber::set_allocated_payload(::ExampleModuleA_Proto::SomePayload* payload) {
  delete payload_;
  payload_ = payload;
  if (payload) {
    set_has_payload();
  } else {
    clear_has_payload();
  }
  // @@protoc_insertion_point(field_set_allocated:ExampleModuleA_Proto.From.RandomNumber.payload)
}

// -------------------------------------------------------------------

// From

// optional .ExampleModuleA_Proto.From.RandomNumber randomNumbers = 1;
inline bool From::has_randomnumbers() const {
  return FromMsg_case() == kRandomNumbers;
}
inline void From::set_has_randomnumbers() {
  _oneof_case_[0] = kRandomNumbers;
}
inline void From::clear_randomnumbers() {
  if (has_randomnumbers()) {
    delete FromMsg_.randomnumbers_;
    clear_has_FromMsg();
  }
}
inline const ::ExampleModuleA_Proto::From_RandomNumber& From::randomnumbers() const {
  return has_randomnumbers() ? *FromMsg_.randomnumbers_
                      : ::ExampleModuleA_Proto::From_RandomNumber::default_instance();
}
inline ::ExampleModuleA_Proto::From_RandomNumber* From::mutable_randomnumbers() {
  if (!has_randomnumbers()) {
    clear_FromMsg();
    set_has_randomnumbers();
    FromMsg_.randomnumbers_ = new ::ExampleModuleA_Proto::From_RandomNumber;
  }
  return FromMsg_.randomnumbers_;
}
inline ::ExampleModuleA_Proto::From_RandomNumber* From::release_randomnumbers() {
  if (has_randomnumbers()) {
    clear_has_FromMsg();
    ::ExampleModuleA_Proto::From_RandomNumber* temp = FromMsg_.randomnumbers_;
    FromMsg_.randomnumbers_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void From::set_allocated_randomnumbers(::ExampleModuleA_Proto::From_RandomNumber* randomnumbers) {
  clear_FromMsg();
  if (randomnumbers) {
    set_has_randomnumbers();
    FromMsg_.randomnumbers_ = randomnumbers;
  }
}

inline bool From::has_FromMsg() {
  return FromMsg_case() != FROMMSG_NOT_SET;
}
inline void From::clear_has_FromMsg() {
  _oneof_case_[0] = FROMMSG_NOT_SET;
}
inline From::FromMsgCase From::FromMsg_case() const {
  return From::FromMsgCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// SomePayload

// required string something = 1;
inline bool SomePayload::has_something() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SomePayload::set_has_something() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SomePayload::clear_has_something() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SomePayload::clear_something() {
  if (something_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    something_->clear();
  }
  clear_has_something();
}
inline const ::std::string& SomePayload::something() const {
  // @@protoc_insertion_point(field_get:ExampleModuleA_Proto.SomePayload.something)
  return *something_;
}
inline void SomePayload::set_something(const ::std::string& value) {
  set_has_something();
  if (something_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    something_ = new ::std::string;
  }
  something_->assign(value);
  // @@protoc_insertion_point(field_set:ExampleModuleA_Proto.SomePayload.something)
}
inline void SomePayload::set_something(const char* value) {
  set_has_something();
  if (something_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    something_ = new ::std::string;
  }
  something_->assign(value);
  // @@protoc_insertion_point(field_set_char:ExampleModuleA_Proto.SomePayload.something)
}
inline void SomePayload::set_something(const char* value, size_t size) {
  set_has_something();
  if (something_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    something_ = new ::std::string;
  }
  something_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ExampleModuleA_Proto.SomePayload.something)
}
inline ::std::string* SomePayload::mutable_something() {
  set_has_something();
  if (something_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    something_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ExampleModuleA_Proto.SomePayload.something)
  return something_;
}
inline ::std::string* SomePayload::release_something() {
  clear_has_something();
  if (something_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = something_;
    something_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SomePayload::set_allocated_something(::std::string* something) {
  if (something_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete something_;
  }
  if (something) {
    set_has_something();
    something_ = something;
  } else {
    clear_has_something();
    something_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ExampleModuleA_Proto.SomePayload.something)
}

// required bytes payload = 2;
inline bool SomePayload::has_payload() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SomePayload::set_has_payload() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SomePayload::clear_has_payload() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SomePayload::clear_payload() {
  if (payload_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    payload_->clear();
  }
  clear_has_payload();
}
inline const ::std::string& SomePayload::payload() const {
  // @@protoc_insertion_point(field_get:ExampleModuleA_Proto.SomePayload.payload)
  return *payload_;
}
inline void SomePayload::set_payload(const ::std::string& value) {
  set_has_payload();
  if (payload_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    payload_ = new ::std::string;
  }
  payload_->assign(value);
  // @@protoc_insertion_point(field_set:ExampleModuleA_Proto.SomePayload.payload)
}
inline void SomePayload::set_payload(const char* value) {
  set_has_payload();
  if (payload_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    payload_ = new ::std::string;
  }
  payload_->assign(value);
  // @@protoc_insertion_point(field_set_char:ExampleModuleA_Proto.SomePayload.payload)
}
inline void SomePayload::set_payload(const void* value, size_t size) {
  set_has_payload();
  if (payload_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    payload_ = new ::std::string;
  }
  payload_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ExampleModuleA_Proto.SomePayload.payload)
}
inline ::std::string* SomePayload::mutable_payload() {
  set_has_payload();
  if (payload_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    payload_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ExampleModuleA_Proto.SomePayload.payload)
  return payload_;
}
inline ::std::string* SomePayload::release_payload() {
  clear_has_payload();
  if (payload_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = payload_;
    payload_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SomePayload::set_allocated_payload(::std::string* payload) {
  if (payload_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete payload_;
  }
  if (payload) {
    set_has_payload();
    payload_ = payload;
  } else {
    clear_has_payload();
    payload_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ExampleModuleA_Proto.SomePayload.payload)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ExampleModuleA_Proto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ExampleModuleA_2eproto__INCLUDED
