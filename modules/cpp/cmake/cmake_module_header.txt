project(${PROJECT_NAME})

option(NoTests "NoTests" ON)
option(PiTarget "PiTarget" OFF)
option(Verbose "Verbose" OFF)

# Get absolute ZSDN path (to avoid problems with make)
include(${ZSDN_DIR_RELATIVE}/util/zsdn-dir_cmake.txt)

if(PiTarget)
	set(TargetPlatform pi)
else()
	set(TargetPlatform default)
endif()

set(BUILD_DIR ${ZSDN_DIR}/build/modules/${TargetPlatform})
message("Building module to ${BUILD_DIR}")

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${BUILD_DIR})
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${BUILD_DIR})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${BUILD_DIR})


set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -O3 -Wl,--no-as-needed -pthread")
if(Verbose)
	message("# Verbose enabled")
  	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -v")
endif()


include_directories("${ZSDN_DIR}/common/cpp/zsdn-commons")
include_directories("${ZSDN_DIR}/dependencies/include")
include_directories("${ZSDN_DIR}/ZMF/dependencies/include")
include_directories("${ZSDN_DIR}/ZMF/include")
include_directories("${ZSDN_DIR}/module_interface_generated_code/proto")
include_directories("${ZSDN_DIR}/module_interface_generated_code/topics")

link_directories("${ZSDN_DIR}/dependencies/lib")
link_directories("${ZSDN_DIR}/ZMF/dependencies/lib")
link_directories("${ZSDN_DIR}/ZMF/lib")

# get every dependency from autogenerated dependencies
FILE(GLOB AUTOGENERATED_DEPENDENCIES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "../../module_interface_generated_code/*.*" )

set(ADDITIONAL_DEPENDENCIES ${AUTOGENERATED_DEPENDENCIES})

# Sets Unittest parameters to empty, overwrite it in project cmake to specify unittest parameters 
set(UT_PARAMS "")